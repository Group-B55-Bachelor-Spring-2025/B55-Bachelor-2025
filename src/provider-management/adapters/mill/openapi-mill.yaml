openapi: 3.0.0
info:
  title: MillNorway API
  description: >-
    Every user of the MillNorway API should be aware that there is a limit of
    1000 requests per hour per customer, after exceeding which particular
    customer will get throttled and the endpoint will return a 429 error code
  version: '1.0'
  contact:
    name: Mill Norway
    url: https://millnorway.com/
  x-logo:
    url: https://millnorway.com/wp-content/uploads/2021/09/logo.svg
paths:
  /houses/{houseId}/rooms:
    get:
      tags:
        - room
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  rooms:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Room ID
                          example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
                        name:
                          type: string
                          description: Room name
                          example: Living room
                        houseId:
                          type: string
                          description: ID of house the room is attached to
                          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                        roomComfortTemperature:
                          type: number
                          nullable: true
                          description: Room temperature in comfort mode
                          example: 23
                        roomSleepTemperature:
                          type: number
                          nullable: true
                          description: Room temperature in sleep mode
                          example: 27
                        roomAwayTemperature:
                          type: number
                          nullable: true
                          description: Room temperature in away mode
                          example: 27
                        overrideModeType:
                          type: string
                          enum:
                            - continuous
                            - not_continuous
                          nullable: true
                          description: >-
                            Override mode type. If not continuous,
                            overrideEndDate is required
                        overrideEndDate:
                          type: number
                          minimum: 0
                          maximum: 9999999999
                          description: Date in seconds since epoch (UTC time)
                          example: 1579098983
                          nullable: true
                        roomProgramId:
                          type: string
                          description: ID of room program attached to the room
                          nullable: true
                          example: b6730c1e-c775-43ba-8fa0-e6d07c39e21c
                        roomControlSource:
                          type: string
                          enum:
                            - mobile_api
                            - open_api
                            - tibber
                          nullable: true
                          description: >-
                            The desired control source of every device in this
                            room
                        mode:
                          type: string
                          enum:
                            - weekly_program
                            - comfort
                            - sleep
                            - away
                            - vacation
                            - normal
                            - always_heating
                            - 'off'
                          nullable: true
                          description: Room mode
                        createdAt:
                          type: string
                          format: date-time
                          nullable: true
                          description: Room creation date
                        roomProgramName:
                          type: string
                          description: Room program name
                          nullable: true
                        activeModeFromWeeklyProgram:
                          type: string
                          enum:
                            - comfort
                            - sleep
                            - away
                            - normal
                            - always_heating
                            - 'off'
                          description: Temperature type
                          nullable: true
                        averageTemperature:
                          type: number
                          nullable: true
                          description: >-
                            Average temperature from all devices in room.
                            Rounded to 2 digits. Null when there are no active
                            devices in rooms
                          example: 26.75
                        vacationTemperature:
                          type: number
                          nullable: true
                          description: Vacation mode temperature
                          example: 29
                        vacationStartDate:
                          type: number
                          minimum: 0
                          maximum: 9999999999
                          description: Date in seconds since epoch (UTC time)
                          example: 1579098983
                          nullable: true
                        vacationEndDate:
                          type: number
                          minimum: 0
                          maximum: 9999999999
                          description: Date in seconds since epoch (UTC time)
                          example: 1579098983
                          nullable: true
                        vacationModeType:
                          type: string
                          enum:
                            - use_away_temperature
                            - use_vacation_temperature
                          nullable: true
                          description: Advanced vacation mode type
                        roomOnlineDevicesNumber:
                          type: number
                          description: Number of Online devices
                          example: 4
                        roomOfflineDevicesNumber:
                          type: number
                          description: Number of Offline devices
                          example: 3
                        isRoomOnline:
                          type: boolean
                          description: >-
                            True if at least one device is online. False when
                            all devices offline
                          example: true
                        roomTotalDevicesNumber:
                          type: number
                          description: Number of devices in the room
                          example: 7
                        roomOnlineSensorDevicesNumber:
                          type: number
                          description: Number of online Sense air devices in the room
                          example: 0
                        roomMaxTemperature:
                          type: number
                          nullable: true
                          description: >-
                            Max temperature of room. Propagated from house
                            permissions. If null there are no limits for
                            temperature
                          example: 30
                        changeTemperature:
                          type: boolean
                          description: 'Permission: Can customer change the temperature?'
                          example: true
                        roomSensorId:
                          type: string
                          nullable: true
                          description: ID of the sensor assigned to room
                        bindFlag:
                          type: boolean
                          nullable: true
                          description: >-
                            Specifies if sensor data should be displayed on the
                            Room screens
                        tempFlag:
                          type: boolean
                          nullable: true
                          description: "Specifies if other devices (heaters) in the room, \n\t\tshould be controlled based on temperature reading from Air Sensor"
                        roomHeatStatus:
                          type: boolean
                          description: >-
                            Heating status. True if at least one heater device
                            in room has power_status = true
                        roomOpenWindowStatus:
                          type: boolean
                          description: >-
                            Open window status. True if at least one heater
                            device in room has open_window_status = true
                        roomHumidity:
                          type: number
                          nullable: true
                          description: 'Measured humidity - Relative humidity percentage '
                        roomPredictiveHeatStatus:
                          type: boolean
                          description: >-
                            Predictive heating status. True if at least one
                            heater device in room has
                            room_predictive_heat_status = true 
                        roomBusinessLockStatus:
                          type: boolean
                          description: >-
                            Business lock status. True if at least one heater
                            device in room has room_business_lock_status = true 
                        roomChildLockStatus:
                          type: boolean
                          description: >-
                            Child lock status. True if at least one heater
                            device in room has room_child_lock_status = true 
                        roomCoolingStatus:
                          type: boolean
                          description: >-
                            Cooling status. True if at least one heater device
                            in room has additional_socket_mode = cooling 
                        roomEnergyUsage:
                          type: number
                          description: Energy used in Wh. From all heater devices in room
                        roomEco2:
                          type: number
                          nullable: true
                          description: Eco2 in room
                        roomTvoc:
                          type: number
                          nullable: true
                          description: Tvoc in room
                        roomChargingStatus:
                          type: number
                          nullable: true
                          description: >-
                            Room charging mode. True when sensor is in charging
                            mode
                        tempStatus:
                          type: boolean
                          nullable: true
                          description: Shows if the temperature sensor is calibrated
                        tempCountdownTotal:
                          type: number
                          nullable: true
                          description: >-
                            Total time needed to perform temperature sensor
                            calibration
                        tempCountdownRemains:
                          type: number
                          nullable: true
                          description: >-
                            Time to finish calibration, if sensor calibrated
                            then equal to 00:00
                        humidityStatus:
                          type: boolean
                          nullable: true
                          description: Shows if the humidity sensor is calibrated
                        humidityCountdownTotal:
                          type: number
                          nullable: true
                          description: >-
                            Total time needed to perform humidity sensor
                            calibration
                        humidityCountdownRemains:
                          type: number
                          nullable: true
                          description: >-
                            Time to finish calibration, if sensor calibrated
                            then equal to 00:00
                        tvocStatus:
                          type: boolean
                          nullable: true
                          description: Shows if the tvoc sensor is calibrated
                        tvocCountdownTotal:
                          type: number
                          nullable: true
                          description: Total time needed to perform tvoc sensor calibration
                        tvocCountdownRemains:
                          type: number
                          nullable: true
                          description: >-
                            Time to finish calibration, if sensor calibrated
                            then equal to 00:00
                        eco2Status:
                          type: boolean
                          nullable: true
                          description: Shows if the eco2 sensor is calibrated
                        eco2CountdownTotal:
                          type: number
                          nullable: true
                          description: Total time needed to perform eco2 sensor calibration
                        eco2CountdownRemains:
                          type: number
                          nullable: true
                          description: >-
                            Time to finish calibration, if sensor calibrated
                            then equal to 00:00
                        roomTotalIndividualControlledDeviceIds:
                          type: array
                          items:
                            type: string
                          description: >-
                            Id of devices controlled individually. If device's
                            operation_mode is set to "control individually"
                        roomTotalIndividualControlledDevices:
                          type: number
                          description: >-
                            Number of devices controlled individually. If
                            device's operation_mode is set to "control
                            individually"
                        controlSource:
                          type: object
                          additionalProperties:
                            type: number
                      required:
                        - id
                        - name
                        - houseId
                        - roomComfortTemperature
                        - roomSleepTemperature
                        - roomAwayTemperature
                        - overrideModeType
                        - overrideEndDate
                        - roomProgramId
                        - roomControlSource
                        - mode
                        - createdAt
                        - roomProgramName
                        - activeModeFromWeeklyProgram
                        - averageTemperature
                        - vacationTemperature
                        - vacationStartDate
                        - vacationEndDate
                        - vacationModeType
                        - roomOnlineDevicesNumber
                        - roomOfflineDevicesNumber
                        - isRoomOnline
                        - roomTotalDevicesNumber
                        - roomOnlineSensorDevicesNumber
                        - roomMaxTemperature
                        - changeTemperature
                        - roomSensorId
                        - bindFlag
                        - tempFlag
                        - roomHeatStatus
                        - roomOpenWindowStatus
                        - roomHumidity
                        - roomPredictiveHeatStatus
                        - roomBusinessLockStatus
                        - roomChildLockStatus
                        - roomCoolingStatus
                        - roomEnergyUsage
                        - roomEco2
                        - roomTvoc
                        - roomChargingStatus
                        - tempStatus
                        - tempCountdownTotal
                        - tempCountdownRemains
                        - humidityStatus
                        - humidityCountdownTotal
                        - humidityCountdownRemains
                        - tvocStatus
                        - tvocCountdownTotal
                        - tvocCountdownRemains
                        - eco2Status
                        - eco2CountdownTotal
                        - eco2CountdownRemains
                        - roomTotalIndividualControlledDeviceIds
                        - roomTotalIndividualControlledDevices
                        - controlSource
                  independentDeviceIds:
                    type: array
                    items:
                      type: string
                      format: uuid
                      description: Device ID
                required:
                  - rooms
                  - independentDeviceIds
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: listRooms
      summary: Get rooms of house
      description: Returns list of rooms from house
    post:
      tags:
        - room
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Room ID
                    example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
                  name:
                    type: string
                    description: Room name
                    example: Living room
                  houseId:
                    type: string
                    description: ID of house the room is attached to
                    example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                  roomComfortTemperature:
                    type: number
                    nullable: true
                    description: Room temperature in comfort mode
                    example: 23
                  roomSleepTemperature:
                    type: number
                    nullable: true
                    description: Room temperature in sleep mode
                    example: 27
                  roomAwayTemperature:
                    type: number
                    nullable: true
                    description: Room temperature in away mode
                    example: 27
                  overrideModeType:
                    type: string
                    enum:
                      - continuous
                      - not_continuous
                    nullable: true
                    description: >-
                      Override mode type. If not continuous, overrideEndDate is
                      required
                  overrideEndDate:
                    type: number
                    minimum: 0
                    maximum: 9999999999
                    description: Date in seconds since epoch (UTC time)
                    example: 1579098983
                    nullable: true
                  roomProgramId:
                    type: string
                    description: ID of room program attached to the room
                    nullable: true
                    example: b6730c1e-c775-43ba-8fa0-e6d07c39e21c
                  roomControlSource:
                    type: string
                    enum:
                      - mobile_api
                      - open_api
                      - tibber
                    nullable: true
                    description: The desired control source of every device in this room
                  mode:
                    type: string
                    enum:
                      - weekly_program
                      - comfort
                      - sleep
                      - away
                      - vacation
                      - normal
                      - always_heating
                      - 'off'
                    nullable: true
                    description: Room mode
                  createdAt:
                    type: string
                    format: date-time
                    nullable: true
                    description: Room creation date
                required:
                  - id
                  - name
                  - houseId
                  - roomComfortTemperature
                  - roomSleepTemperature
                  - roomAwayTemperature
                  - overrideModeType
                  - overrideEndDate
                  - roomProgramId
                  - roomControlSource
                  - mode
                  - createdAt
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomDuplicateName'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/RoomProgramNotFoundError'
                  - $ref: '#/components/schemas/HouseNotFoundError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: createRoom
      summary: Create room
      description: Creates a new room in house
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Room name
                  example: Living room
              required:
                - name
    parameters:
      - schema:
          type: string
          description: House ID
          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
        name: houseId
        in: path
        required: true
        description: House ID
  /rooms/{roomId}:
    patch:
      tags:
        - room
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Room ID
                    example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
                  name:
                    type: string
                    description: Room name
                    example: Living room
                  houseId:
                    type: string
                    description: ID of house the room is attached to
                    example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                  roomComfortTemperature:
                    type: number
                    nullable: true
                    description: Room temperature in comfort mode
                    example: 23
                  roomSleepTemperature:
                    type: number
                    nullable: true
                    description: Room temperature in sleep mode
                    example: 27
                  roomAwayTemperature:
                    type: number
                    nullable: true
                    description: Room temperature in away mode
                    example: 27
                  overrideModeType:
                    type: string
                    enum:
                      - continuous
                      - not_continuous
                    nullable: true
                    description: >-
                      Override mode type. If not continuous, overrideEndDate is
                      required
                  overrideEndDate:
                    type: number
                    minimum: 0
                    maximum: 9999999999
                    description: Date in seconds since epoch (UTC time)
                    example: 1579098983
                    nullable: true
                  roomProgramId:
                    type: string
                    description: ID of room program attached to the room
                    nullable: true
                    example: b6730c1e-c775-43ba-8fa0-e6d07c39e21c
                  roomControlSource:
                    type: string
                    enum:
                      - mobile_api
                      - open_api
                      - tibber
                    nullable: true
                    description: The desired control source of every device in this room
                  mode:
                    type: string
                    enum:
                      - weekly_program
                      - comfort
                      - sleep
                      - away
                      - vacation
                      - normal
                      - always_heating
                      - 'off'
                    nullable: true
                    description: Room mode
                  createdAt:
                    type: string
                    format: date-time
                    nullable: true
                    description: Room creation date
                required:
                  - id
                  - name
                  - houseId
                  - roomComfortTemperature
                  - roomSleepTemperature
                  - roomAwayTemperature
                  - overrideModeType
                  - overrideEndDate
                  - roomProgramId
                  - roomControlSource
                  - mode
                  - createdAt
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomDuplicateName'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/HouseNotFoundError'
                  - $ref: '#/components/schemas/RoomNotFoundError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: updateRoom
      summary: Update room
      description: Updates an existing room by roomId
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Room name
                  example: Living room
              minProperties: 1
    delete:
      tags:
        - room
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                required:
                  - status
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/HouseNotFoundError'
                  - $ref: '#/components/schemas/RoomNotFoundError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: deleteRoom
      summary: Delete room
      description: Deletes the room from house
    parameters:
      - schema:
          type: string
          description: Room ID
          example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
        name: roomId
        in: path
        required: true
        description: Room ID
  /rooms/{roomId}/temperature:
    post:
      tags:
        - room
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Room ID
                    example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
                  name:
                    type: string
                    description: Room name
                    example: Living room
                  houseId:
                    type: string
                    description: ID of house the room is attached to
                    example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                  roomComfortTemperature:
                    type: number
                    nullable: true
                    description: Room temperature in comfort mode
                    example: 23
                  roomSleepTemperature:
                    type: number
                    nullable: true
                    description: Room temperature in sleep mode
                    example: 27
                  roomAwayTemperature:
                    type: number
                    nullable: true
                    description: Room temperature in away mode
                    example: 27
                  overrideModeType:
                    type: string
                    enum:
                      - continuous
                      - not_continuous
                    nullable: true
                    description: >-
                      Override mode type. If not continuous, overrideEndDate is
                      required
                  overrideEndDate:
                    type: number
                    minimum: 0
                    maximum: 9999999999
                    description: Date in seconds since epoch (UTC time)
                    example: 1579098983
                    nullable: true
                  roomProgramId:
                    type: string
                    description: ID of room program attached to the room
                    nullable: true
                    example: b6730c1e-c775-43ba-8fa0-e6d07c39e21c
                  roomControlSource:
                    type: string
                    enum:
                      - mobile_api
                      - open_api
                      - tibber
                    nullable: true
                    description: The desired control source of every device in this room
                  mode:
                    type: string
                    enum:
                      - weekly_program
                      - comfort
                      - sleep
                      - away
                      - vacation
                      - normal
                      - always_heating
                      - 'off'
                    nullable: true
                    description: Room mode
                  createdAt:
                    type: string
                    format: date-time
                    nullable: true
                    description: Room creation date
                required:
                  - id
                  - name
                  - houseId
                  - roomComfortTemperature
                  - roomSleepTemperature
                  - roomAwayTemperature
                  - overrideModeType
                  - overrideEndDate
                  - roomProgramId
                  - roomControlSource
                  - mode
                  - createdAt
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomerHasNoPermissionError'
                  - $ref: '#/components/schemas/MaxTemperatureExceedsError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/HouseNotFoundError'
                  - $ref: '#/components/schemas/RoomNotFoundError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: changeRoomTemperature
      summary: Change room temperature
      description: Updates temperature fields in the room by roomId
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                roomAwayTemperature:
                  type: number
                  description: Room temperature in away mode
                  example: 27
                roomComfortTemperature:
                  type: number
                  description: Room temperature in comfort mode
                  example: 23
                roomSleepTemperature:
                  type: number
                  description: Room temperature in sleep mode
                  example: 27
              minProperties: 1
    parameters:
      - schema:
          type: string
          description: Room ID
          example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
        name: roomId
        in: path
        required: true
        description: Room ID
  /rooms/{roomId}/external-control:
    patch:
      tags:
        - room
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Room ID
                    example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
                  name:
                    type: string
                    description: Room name
                    example: Living room
                  houseId:
                    type: string
                    description: ID of house the room is attached to
                    example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                  roomComfortTemperature:
                    type: number
                    nullable: true
                    description: Room temperature in comfort mode
                    example: 23
                  roomSleepTemperature:
                    type: number
                    nullable: true
                    description: Room temperature in sleep mode
                    example: 27
                  roomAwayTemperature:
                    type: number
                    nullable: true
                    description: Room temperature in away mode
                    example: 27
                  overrideModeType:
                    type: string
                    enum:
                      - continuous
                      - not_continuous
                    nullable: true
                    description: >-
                      Override mode type. If not continuous, overrideEndDate is
                      required
                  overrideEndDate:
                    type: number
                    minimum: 0
                    maximum: 9999999999
                    description: Date in seconds since epoch (UTC time)
                    example: 1579098983
                    nullable: true
                  roomProgramId:
                    type: string
                    description: ID of room program attached to the room
                    nullable: true
                    example: b6730c1e-c775-43ba-8fa0-e6d07c39e21c
                  roomControlSource:
                    type: string
                    enum:
                      - mobile_api
                      - open_api
                      - tibber
                    nullable: true
                    description: The desired control source of every device in this room
                  mode:
                    type: string
                    enum:
                      - weekly_program
                      - comfort
                      - sleep
                      - away
                      - vacation
                      - normal
                      - always_heating
                      - 'off'
                    nullable: true
                    description: Room mode
                  createdAt:
                    type: string
                    format: date-time
                    nullable: true
                    description: Room creation date
                required:
                  - id
                  - name
                  - houseId
                  - roomComfortTemperature
                  - roomSleepTemperature
                  - roomAwayTemperature
                  - overrideModeType
                  - overrideEndDate
                  - roomProgramId
                  - roomControlSource
                  - mode
                  - createdAt
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/HouseNotFoundError'
                  - $ref: '#/components/schemas/RoomNotFoundError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: updateRoomExternalControl
      summary: Update room external control parameter
      description: Allows/denies external control of devices inside the room
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                controlSource:
                  type: string
                  enum:
                    - mobile_api
                    - open_api
                    - tibber
                  description: The desired control source of every device in this room
              required:
                - controlSource
    parameters:
      - schema:
          type: string
          description: Room ID
          example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
        name: roomId
        in: path
        required: true
        description: Room ID
  /rooms/{roomId}/mode/override:
    post:
      tags:
        - room
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  room:
                    type: object
                    properties:
                      id:
                        type: string
                        description: Room ID
                        example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
                      name:
                        type: string
                        description: Room name
                        example: Living room
                      houseId:
                        type: string
                        description: ID of house the room is attached to
                        example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                      roomComfortTemperature:
                        type: number
                        nullable: true
                        description: Room temperature in comfort mode
                        example: 23
                      roomSleepTemperature:
                        type: number
                        nullable: true
                        description: Room temperature in sleep mode
                        example: 27
                      roomAwayTemperature:
                        type: number
                        nullable: true
                        description: Room temperature in away mode
                        example: 27
                      overrideModeType:
                        type: string
                        enum:
                          - continuous
                          - not_continuous
                        nullable: true
                        description: >-
                          Override mode type. If not continuous, overrideEndDate
                          is required
                      overrideEndDate:
                        type: number
                        minimum: 0
                        maximum: 9999999999
                        description: Date in seconds since epoch (UTC time)
                        example: 1579098983
                        nullable: true
                      roomProgramId:
                        type: string
                        description: ID of room program attached to the room
                        nullable: true
                        example: b6730c1e-c775-43ba-8fa0-e6d07c39e21c
                      roomControlSource:
                        type: string
                        enum:
                          - mobile_api
                          - open_api
                          - tibber
                        nullable: true
                        description: >-
                          The desired control source of every device in this
                          room
                      mode:
                        type: string
                        enum:
                          - weekly_program
                          - comfort
                          - sleep
                          - away
                          - vacation
                          - normal
                          - always_heating
                          - 'off'
                        nullable: true
                        description: Room mode
                      createdAt:
                        type: string
                        format: date-time
                        nullable: true
                        description: Room creation date
                    required:
                      - id
                      - name
                      - houseId
                      - roomComfortTemperature
                      - roomSleepTemperature
                      - roomAwayTemperature
                      - overrideModeType
                      - overrideEndDate
                      - roomProgramId
                      - roomControlSource
                      - mode
                      - createdAt
                  timezone:
                    type: object
                    properties:
                      region:
                        type: string
                        example: Europe/London
                      timeShift:
                        type: string
                        examples: &ref_0
                          - GMT0BST,M3.5.0/1,M10.5.0
                          - UTC0
                    required:
                      - region
                      - timeShift
                    nullable: true
                required:
                  - room
                  - timezone
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TemperatureNotSetError'
                  - $ref: '#/components/schemas/TimeError'
                  - type: object
                    properties:
                      error:
                        type: object
                        required:
                          - type
                          - message
                        properties:
                          type:
                            type: string
                          message:
                            type: string
                    required:
                      - error
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/HouseNotFoundError'
                  - $ref: '#/components/schemas/RoomNotFoundError'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/HouseModeError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: enableOverrideRoomMode
      summary: Enable room override mode
      description: Enables or updates settings of override mode in room
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                overrideModeType:
                  type: string
                  enum:
                    - continuous
                    - not_continuous
                  description: >-
                    Override mode type. If not continuous, overrideEndDate is
                    required
                overrideEndDate:
                  type: number
                  minimum: 0
                  maximum: 9999999999
                  description: Date in seconds since epoch (UTC time)
                  example: 1579098983
                mode:
                  type: string
                  enum:
                    - comfort
                    - sleep
                    - away
                    - normal
                    - always_heating
                    - 'off'
                  description: Temperature type
              minProperties: 1
    delete:
      tags:
        - room
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Room ID
                    example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
                  name:
                    type: string
                    description: Room name
                    example: Living room
                  houseId:
                    type: string
                    description: ID of house the room is attached to
                    example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                  roomComfortTemperature:
                    type: number
                    nullable: true
                    description: Room temperature in comfort mode
                    example: 23
                  roomSleepTemperature:
                    type: number
                    nullable: true
                    description: Room temperature in sleep mode
                    example: 27
                  roomAwayTemperature:
                    type: number
                    nullable: true
                    description: Room temperature in away mode
                    example: 27
                  overrideModeType:
                    type: string
                    enum:
                      - continuous
                      - not_continuous
                    nullable: true
                    description: >-
                      Override mode type. If not continuous, overrideEndDate is
                      required
                  overrideEndDate:
                    type: number
                    minimum: 0
                    maximum: 9999999999
                    description: Date in seconds since epoch (UTC time)
                    example: 1579098983
                    nullable: true
                  roomProgramId:
                    type: string
                    description: ID of room program attached to the room
                    nullable: true
                    example: b6730c1e-c775-43ba-8fa0-e6d07c39e21c
                  roomControlSource:
                    type: string
                    enum:
                      - mobile_api
                      - open_api
                      - tibber
                    nullable: true
                    description: The desired control source of every device in this room
                  mode:
                    type: string
                    enum:
                      - weekly_program
                      - comfort
                      - sleep
                      - away
                      - vacation
                      - normal
                      - always_heating
                      - 'off'
                    nullable: true
                    description: Room mode
                  createdAt:
                    type: string
                    format: date-time
                    nullable: true
                    description: Room creation date
                required:
                  - id
                  - name
                  - houseId
                  - roomComfortTemperature
                  - roomSleepTemperature
                  - roomAwayTemperature
                  - overrideModeType
                  - overrideEndDate
                  - roomProgramId
                  - roomControlSource
                  - mode
                  - createdAt
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/HouseNotFoundError'
                  - $ref: '#/components/schemas/RoomNotFoundError'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/HouseModeError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: disableOverrideRoomMode
      summary: Disable room override mode
    parameters:
      - schema:
          type: string
          description: Room ID
          example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
        name: roomId
        in: path
        required: true
        description: Room ID
  /rooms/{roomId}/disable/individually:
    patch:
      tags:
        - room
        - device
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                required:
                  - status
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: disableRoomIndividuallyControl
      summary: Disable room individually control
      description: Disable room individually control by roomId
    parameters:
      - schema:
          type: string
          description: Room ID
          example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
        name: roomId
        in: path
        required: true
        description: Room ID
  /rooms/{roomId}/devices:
    get:
      tags:
        - room
        - device
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Room ID
                    example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
                  name:
                    type: string
                    description: Room name
                    example: Living room
                  houseId:
                    type: string
                    description: ID of house the room is attached to
                    example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                  roomComfortTemperature:
                    type: number
                    nullable: true
                    description: Room temperature in comfort mode
                    example: 23
                  roomSleepTemperature:
                    type: number
                    nullable: true
                    description: Room temperature in sleep mode
                    example: 27
                  roomAwayTemperature:
                    type: number
                    nullable: true
                    description: Room temperature in away mode
                    example: 27
                  overrideModeType:
                    type: string
                    enum:
                      - continuous
                      - not_continuous
                    nullable: true
                    description: >-
                      Override mode type. If not continuous, overrideEndDate is
                      required
                  overrideEndDate:
                    type: number
                    minimum: 0
                    maximum: 9999999999
                    description: Date in seconds since epoch (UTC time)
                    example: 1579098983
                    nullable: true
                  roomProgramId:
                    type: string
                    description: ID of room program attached to the room
                    nullable: true
                    example: b6730c1e-c775-43ba-8fa0-e6d07c39e21c
                  roomControlSource:
                    type: string
                    enum:
                      - mobile_api
                      - open_api
                      - tibber
                    nullable: true
                    description: The desired control source of every device in this room
                  mode:
                    type: string
                    enum:
                      - weekly_program
                      - comfort
                      - sleep
                      - away
                      - vacation
                      - normal
                      - always_heating
                      - 'off'
                    nullable: true
                    description: Room mode
                  createdAt:
                    type: string
                    format: date-time
                    nullable: true
                    description: Room creation date
                  roomProgramName:
                    type: string
                    description: Room program name
                    nullable: true
                  activeModeFromWeeklyProgram:
                    type: string
                    enum:
                      - comfort
                      - sleep
                      - away
                      - normal
                      - always_heating
                      - 'off'
                    description: Temperature type
                    nullable: true
                  averageTemperature:
                    type: number
                    nullable: true
                    description: >-
                      Average temperature from all devices in room. Rounded to 2
                      digits. Null when there are no active devices in rooms
                    example: 26.75
                  vacationTemperature:
                    type: number
                    nullable: true
                    description: Vacation mode temperature
                    example: 29
                  vacationStartDate:
                    type: number
                    minimum: 0
                    maximum: 9999999999
                    description: Date in seconds since epoch (UTC time)
                    example: 1579098983
                    nullable: true
                  vacationEndDate:
                    type: number
                    minimum: 0
                    maximum: 9999999999
                    description: Date in seconds since epoch (UTC time)
                    example: 1579098983
                    nullable: true
                  vacationModeType:
                    type: string
                    enum:
                      - use_away_temperature
                      - use_vacation_temperature
                    nullable: true
                    description: Advanced vacation mode type
                  roomOnlineDevicesNumber:
                    type: number
                    description: Number of Online devices
                    example: 4
                  roomOfflineDevicesNumber:
                    type: number
                    description: Number of Offline devices
                    example: 3
                  isRoomOnline:
                    type: boolean
                    description: >-
                      True if at least one device is online. False when all
                      devices offline
                    example: true
                  roomTotalDevicesNumber:
                    type: number
                    description: Number of devices in the room
                    example: 7
                  roomOnlineSensorDevicesNumber:
                    type: number
                    description: Number of online Sense air devices in the room
                    example: 0
                  roomMaxTemperature:
                    type: number
                    nullable: true
                    description: >-
                      Max temperature of room. Propagated from house
                      permissions. If null there are no limits for temperature
                    example: 30
                  changeTemperature:
                    type: boolean
                    description: 'Permission: Can customer change the temperature?'
                    example: true
                  roomSensorId:
                    type: string
                    nullable: true
                    description: ID of the sensor assigned to room
                  bindFlag:
                    type: boolean
                    nullable: true
                    description: >-
                      Specifies if sensor data should be displayed on the Room
                      screens
                  tempFlag:
                    type: boolean
                    nullable: true
                    description: "Specifies if other devices (heaters) in the room, \n\t\tshould be controlled based on temperature reading from Air Sensor"
                  roomHeatStatus:
                    type: boolean
                    description: >-
                      Heating status. True if at least one heater device in room
                      has power_status = true
                  roomOpenWindowStatus:
                    type: boolean
                    description: >-
                      Open window status. True if at least one heater device in
                      room has open_window_status = true
                  roomHumidity:
                    type: number
                    nullable: true
                    description: 'Measured humidity - Relative humidity percentage '
                  roomPredictiveHeatStatus:
                    type: boolean
                    description: >-
                      Predictive heating status. True if at least one heater
                      device in room has room_predictive_heat_status = true 
                  roomBusinessLockStatus:
                    type: boolean
                    description: >-
                      Business lock status. True if at least one heater device
                      in room has room_business_lock_status = true 
                  roomChildLockStatus:
                    type: boolean
                    description: >-
                      Child lock status. True if at least one heater device in
                      room has room_child_lock_status = true 
                  roomCoolingStatus:
                    type: boolean
                    description: >-
                      Cooling status. True if at least one heater device in room
                      has additional_socket_mode = cooling 
                  roomEnergyUsage:
                    type: number
                    description: Energy used in Wh. From all heater devices in room
                  roomEco2:
                    type: number
                    nullable: true
                    description: Eco2 in room
                  roomTvoc:
                    type: number
                    nullable: true
                    description: Tvoc in room
                  roomChargingStatus:
                    type: number
                    nullable: true
                    description: Room charging mode. True when sensor is in charging mode
                  tempStatus:
                    type: boolean
                    nullable: true
                    description: Shows if the temperature sensor is calibrated
                  tempCountdownTotal:
                    type: number
                    nullable: true
                    description: >-
                      Total time needed to perform temperature sensor
                      calibration
                  tempCountdownRemains:
                    type: number
                    nullable: true
                    description: >-
                      Time to finish calibration, if sensor calibrated then
                      equal to 00:00
                  humidityStatus:
                    type: boolean
                    nullable: true
                    description: Shows if the humidity sensor is calibrated
                  humidityCountdownTotal:
                    type: number
                    nullable: true
                    description: Total time needed to perform humidity sensor calibration
                  humidityCountdownRemains:
                    type: number
                    nullable: true
                    description: >-
                      Time to finish calibration, if sensor calibrated then
                      equal to 00:00
                  tvocStatus:
                    type: boolean
                    nullable: true
                    description: Shows if the tvoc sensor is calibrated
                  tvocCountdownTotal:
                    type: number
                    nullable: true
                    description: Total time needed to perform tvoc sensor calibration
                  tvocCountdownRemains:
                    type: number
                    nullable: true
                    description: >-
                      Time to finish calibration, if sensor calibrated then
                      equal to 00:00
                  eco2Status:
                    type: boolean
                    nullable: true
                    description: Shows if the eco2 sensor is calibrated
                  eco2CountdownTotal:
                    type: number
                    nullable: true
                    description: Total time needed to perform eco2 sensor calibration
                  eco2CountdownRemains:
                    type: number
                    nullable: true
                    description: >-
                      Time to finish calibration, if sensor calibrated then
                      equal to 00:00
                  roomTotalIndividualControlledDeviceIds:
                    type: array
                    items:
                      type: string
                    description: >-
                      Id of devices controlled individually. If device's
                      operation_mode is set to "control individually"
                  roomTotalIndividualControlledDevices:
                    type: number
                    description: >-
                      Number of devices controlled individually. If device's
                      operation_mode is set to "control individually"
                  controlSource:
                    type: object
                    additionalProperties:
                      type: number
                  devices:
                    type: array
                    items:
                      type: object
                      properties:
                        deviceId:
                          type: string
                          format: uuid
                          description: Device ID
                        macAddress:
                          type: string
                          description: MAC address of the device
                          example: '00:00:00:00:00:00'
                        deviceType:
                          type: object
                          properties:
                            childType:
                              type: object
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                  description: Device Type ID
                                name:
                                  type: string
                                  description: Name of type
                                  example: GL-Oil Heater G3
                              required:
                                - id
                                - name
                            parentType:
                              type: object
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                  description: Device Type ID
                                name:
                                  type: string
                                  description: Name of type
                                  example: GL-Oil Heater G3
                              required:
                                - id
                                - name
                          required:
                            - childType
                            - parentType
                        isConnected:
                          type: boolean
                          description: Whether the device is connected to the network
                        customName:
                          type: string
                          nullable: true
                          description: Custom name of the device
                          example: My device
                        houseId:
                          type: string
                          description: House ID where the device is located
                          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                          nullable: true
                        roomId:
                          type: string
                          description: Room ID where the device is located
                          example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
                          nullable: true
                        isArchived:
                          type: boolean
                          description: Whether the device is archived
                        isEnabled:
                          type: boolean
                          nullable: true
                          description: Whether the device is on/off
                        controlSource:
                          type: string
                          enum:
                            - mobile_api
                            - open_api
                            - tibber
                          description: >-
                            Control source of the device. By default it is
                            "mobile_api"
                          example: tibber
                        createdAt:
                          type: string
                          format: date-time
                          nullable: true
                          description: Device creation date
                        deviceSettings:
                          oneOf:
                            - type: object
                              properties:
                                reported:
                                  type: object
                                  properties:
                                    operation_mode:
                                      type: string
                                      enum:
                                        - weekly_program
                                        - 'off'
                                        - independent_device
                                        - control_individually
                                      nullable: true
                                      description: "\n\"off\"  - all control disable\n\t\t\n\"weekly_program\" - follow the weekly program, changing temperature by display buttons changes the temperature of the current temperature mode\n\t\t\n\"independent_device\"  - follow the single set value, with timers enabled\n\t\t\n\"control_individually\"  - follow the single set value, but not use any timers or weekly program"
                                    override_weekly_program:
                                      type: object
                                      properties:
                                        value_type:
                                          type: string
                                          enum:
                                            - comfort
                                            - sleep
                                            - away
                                            - normal
                                            - always_heating
                                            - 'off'
                                          nullable: true
                                        ends_at:
                                          type: number
                                          nullable: true
                                          description: >-
                                            UTC timestamp in seconds when the
                                            override mode ends
                                      required:
                                        - value_type
                                        - ends_at
                                      nullable: true
                                      description: >-
                                        Overwrite the currently running weekly
                                        program with a temporary change of a
                                        specific temperature type (e.g.
                                        comfort). Time value of 0 means weekly
                                        program overwrite is not active anymore
                                        (disabled). Time should be a UTC
                                        timestamp when the program should end
                                    non_repeatable_timers:
                                      type: object
                                      properties:
                                        timers:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              value_type:
                                                type: string
                                                enum:
                                                  - normal
                                                  - 'off'
                                                  - always_heating
                                              timestamp:
                                                type: number
                                            required:
                                              - value_type
                                              - timestamp
                                      required:
                                        - timers
                                      nullable: true
                                      description: >-
                                        A single pair represents time and value
                                        when the temperature mode should be
                                        changed. Time defines when to switch to
                                        a specific temperature type (set in the
                                        second field of the pair). Time is as
                                        local unix timestamp (so timezone is
                                        included), but in minutes, e.g. on
                                        17.05.2021 the time is 27020801. Allowed
                                        temperature types for timers: "normal",
                                        "off", "always_heating". Only used in
                                        independent mode
                                    temperature_normal:
                                      type: number
                                      minimum: 0
                                      maximum: 100
                                      nullable: true
                                      description: >-
                                        Set temperature value, used for
                                        operation modes "Independent device" and
                                        timers
                                    temperature_comfort:
                                      type: number
                                      minimum: 0
                                      maximum: 50
                                      nullable: true
                                    temperature_sleep:
                                      type: number
                                      minimum: 0
                                      maximum: 50
                                      nullable: true
                                    temperature_away:
                                      type: number
                                      minimum: 0
                                      maximum: 50
                                      nullable: true
                                    temperature_vacation:
                                      type: number
                                      minimum: 0
                                      maximum: 50
                                      nullable: true
                                    temperature_last_set:
                                      type: number
                                      minimum: 0
                                      maximum: 100
                                      nullable: true
                                      description: >-
                                        The temperature that the device is
                                        currently following
                                    vacation_mode:
                                      type: object
                                      properties:
                                        start_timestamp:
                                          type: number
                                          nullable: true
                                          description: >-
                                            UTC timestamp in minutes when the
                                            vacation mode starts
                                        end_timestamp:
                                          type: number
                                          nullable: true
                                          description: >-
                                            UTC timestamp in minutes when the
                                            vacation mode ends
                                        advanced:
                                          type: boolean
                                          nullable: true
                                          description: >-
                                            Advanced vacation mode - heaters will be
                                            regulated regarding "away" temperature
                                            by each room: false=OFF, true=ON
                                      required:
                                        - start_timestamp
                                        - end_timestamp
                                        - advanced
                                      nullable: true
                                    lock_status:
                                      type: string
                                      enum:
                                        - no_lock
                                        - child
                                        - commercial
                                      nullable: true
                                    predictive_heating_type:
                                      type: string
                                      enum:
                                        - 'off'
                                        - simple
                                        - advanced
                                      nullable: true
                                      description: "\n\"off\" - No predictive heating. Temperature will be change exactly with the weekly program timer\n\t\t\n\"simple\"  - Simple predictive heating. Temperature will be change before the timer, with a fixed time for each Celsius degree\n\t\t\n\"advanced\" - Advanced predictive heating. Temperature will be change before the timer, with a time based on the current room model. Model is estimated while running."
                                    open_window:
                                      type: object
                                      properties:
                                        drop_temperature_threshold:
                                          type: number
                                          description: >-
                                            Required temperature drop to trigger
                                            (activate) the open window
                                            functionality, in Celsius degrees
                                        drop_time_range:
                                          type: number
                                          description: >-
                                            Time range when a drop of temperature
                                            will be expected, in seconds
                                        increase_temperature_threshold:
                                          type: number
                                          description: >-
                                            Required temperature increase to
                                            deactivate open window functionality
                                        increase_time_range:
                                          type: number
                                          description: >-
                                            Time range when an increase of
                                            temperature will be expected, in seconds
                                        max_time:
                                          type: number
                                          description: >-
                                            Max time duration of the open window
                                            activeness
                                        enabled:
                                          type: boolean
                                          description: >-
                                            State of the open window functionality.
                                            True if open window functionality is
                                            enabled (that is whether the device can
                                            go into this mode while operating)
                                        activated:
                                          type: boolean
                                          description: >-
                                            Current state of the open window. True
                                            if open window is currently detected by
                                            device and is activated. You can
                                            deactivate currently detected open
                                            window by changing this value to false.
                                      required:
                                        - enabled
                                      nullable: true
                                    temperature_calibration_offset:
                                      type: number
                                      nullable: true
                                      description: Offset for ambient temperature
                                    display_unit:
                                      type: string
                                      enum:
                                        - celsius
                                        - fahrenheit
                                      nullable: true
                                      description: >-
                                        the temperature units: "celsius" or
                                        "fahrenheit" to set
                                    oil_heater_power_level:
                                      oneOf:
                                        - type: number
                                          enum:
                                            - 40
                                        - type: number
                                          enum:
                                            - 60
                                        - type: number
                                          enum:
                                            - 100
                                      nullable: true
                                      description: >-
                                        Set the max heating level in percentage
                                        of the nominal wattage. Oil heater
                                        allows setting 3 different max power
                                        settings (40, 60 or 100% of the power),
                                        done by selecting number of active
                                        heating elements.
                                    temperature_in_independent_mode:
                                      type: number
                                      minimum: 0
                                      maximum: 100
                                      nullable: true
                                      description: >-
                                        Change temperature in independent mode
                                        now. Use values 0.0 and 99.0 to set
                                        ALWAYS_ON and ALWAYS_OFF, respectively.
                                        Apart from changing value for some
                                        temperature type, in "Independent
                                        device" operation mode, one also needs
                                        to call this command to change the
                                        current temperature
                                    additional_socket_mode:
                                      type: string
                                      enum:
                                        - heating
                                        - cooling
                                        - always_on
                                        - always_off
                                      nullable: true
                                      description: "Command only for the socket heater, to select heating/cooling mode. ALWAYS_ON, ALWAYS_OFF modes just for convenience, as if these can be enabled also by other commands.\n\t\t"
                                    pid_parameters:
                                      type: object
                                      properties:
                                        kp:
                                          type: number
                                          description: The proportional part gain
                                        ki:
                                          type: number
                                          description: The integral part gain
                                        kd:
                                          type: number
                                          description: The derivative part gain
                                        kd_filter_N:
                                          type: number
                                          description: The derivative filter time coefficient
                                        windup_limit:
                                          type: number
                                          description: >-
                                            The windup limit for integral part from
                                            0 to 100
                                      required:
                                        - kp
                                        - ki
                                        - kd
                                        - kd_filter_N
                                        - windup_limit
                                      nullable: true
                                    max_heater_power:
                                      type: number
                                      nullable: true
                                      description: Set max heater power in Watts
                                    limited_heating_power:
                                      type: number
                                      minimum: 10
                                      maximum: 100
                                      nullable: true
                                      description: >-
                                        Only for heaters with triac
                                        (panel/storage). Allows to limit the
                                        heating percentage between 10 and 100
                                        percent.
                                    hysteresis:
                                      type: object
                                      properties:
                                        upper:
                                          type: number
                                          description: >-
                                            Set hysteresis parameters. Setting
                                            hysteresis parameters will change
                                            current regulator type to hysteresis.
                                            Upper offset (set temp + this -> stop
                                            heat)
                                        lower:
                                          type: number
                                          description: >-
                                            Set hysteresis parameters. Setting
                                            hysteresis parameters will change
                                            current regulator type to hysteresis.
                                            Lower offset (set temp - this -> start
                                            heat)
                                      required:
                                        - upper
                                        - lower
                                      nullable: true
                                    regulator_type:
                                      type: string
                                      enum:
                                        - pid
                                        - hysteresis_or_slow_pid
                                        - unknown
                                      nullable: true
                                    timezone:
                                      type: string
                                      nullable: true
                                    calibration_target_ambient_temperature:
                                      type: number
                                      nullable: true
                                      description: >-
                                        Target for calibrating ambient
                                        temperature for heaters gen.2
                                    fan_state:
                                      type: string
                                      enum:
                                        - 'on'
                                        - 'off'
                                      nullable: true
                                      description: Fan state of convection heaters gen.2
                                    weekly_program:
                                      type: object
                                      properties:
                                        timers:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              value_type:
                                                type: string
                                                enum:
                                                  - comfort
                                                  - sleep
                                                  - away
                                                  - normal
                                                  - always_heating
                                                  - 'off'
                                              timestamp:
                                                type: number
                                            required:
                                              - value_type
                                              - timestamp
                                      required:
                                        - timers
                                      nullable: true
                                      description: "The weekly program is a list of repeating pairs of values. A single pair represents time and value when the temperature mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific temperature type (set in the second field of the pair). Needs to be ordered ascending by time.\n\t\t\nFor mode \"independent device\" use only temperature types OFF and NORMAL, to avoid issues with changing the temperature by buttons from the heater"
                                  required:
                                    - operation_mode
                                    - override_weekly_program
                                    - non_repeatable_timers
                                    - temperature_normal
                                    - temperature_comfort
                                    - temperature_sleep
                                    - temperature_away
                                    - temperature_vacation
                                    - vacation_mode
                                    - lock_status
                                    - predictive_heating_type
                                    - open_window
                                    - temperature_calibration_offset
                                    - display_unit
                                    - oil_heater_power_level
                                    - temperature_in_independent_mode
                                    - additional_socket_mode
                                    - pid_parameters
                                    - max_heater_power
                                    - limited_heating_power
                                    - hysteresis
                                    - regulator_type
                                    - timezone
                                    - calibration_target_ambient_temperature
                                    - fan_state
                                    - weekly_program
                                  nullable: true
                                desired:
                                  type: object
                                  properties:
                                    operation_mode:
                                      type: string
                                      enum:
                                        - weekly_program
                                        - 'off'
                                        - independent_device
                                        - control_individually
                                      nullable: true
                                      description: "\n\"off\"  - all control disable\n\t\t\n\"weekly_program\" - follow the weekly program, changing temperature by display buttons changes the temperature of the current temperature mode\n\t\t\n\"independent_device\"  - follow the single set value, with timers enabled\n\t\t\n\"control_individually\"  - follow the single set value, but not use any timers or weekly program"
                                    override_weekly_program:
                                      type: object
                                      properties:
                                        value_type:
                                          type: string
                                          enum:
                                            - comfort
                                            - sleep
                                            - away
                                            - normal
                                            - always_heating
                                            - 'off'
                                          nullable: true
                                        ends_at:
                                          type: number
                                          nullable: true
                                          description: >-
                                            UTC timestamp in seconds when the
                                            override mode ends
                                      required:
                                        - value_type
                                        - ends_at
                                      nullable: true
                                      description: >-
                                        Overwrite the currently running weekly
                                        program with a temporary change of a
                                        specific temperature type (e.g.
                                        comfort). Time value of 0 means weekly
                                        program overwrite is not active anymore
                                        (disabled). Time should be a UTC
                                        timestamp when the program should end
                                    non_repeatable_timers:
                                      type: object
                                      properties:
                                        timers:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              value_type:
                                                type: string
                                                enum:
                                                  - normal
                                                  - 'off'
                                                  - always_heating
                                              timestamp:
                                                type: number
                                            required:
                                              - value_type
                                              - timestamp
                                      required:
                                        - timers
                                      nullable: true
                                      description: >-
                                        A single pair represents time and value
                                        when the temperature mode should be
                                        changed. Time defines when to switch to
                                        a specific temperature type (set in the
                                        second field of the pair). Time is as
                                        local unix timestamp (so timezone is
                                        included), but in minutes, e.g. on
                                        17.05.2021 the time is 27020801. Allowed
                                        temperature types for timers: "normal",
                                        "off", "always_heating". Only used in
                                        independent mode
                                    temperature_normal:
                                      type: number
                                      minimum: 0
                                      maximum: 100
                                      nullable: true
                                      description: >-
                                        Set temperature value, used for
                                        operation modes "Independent device" and
                                        timers
                                    temperature_comfort:
                                      type: number
                                      minimum: 0
                                      maximum: 50
                                      nullable: true
                                    temperature_sleep:
                                      type: number
                                      minimum: 0
                                      maximum: 50
                                      nullable: true
                                    temperature_away:
                                      type: number
                                      minimum: 0
                                      maximum: 50
                                      nullable: true
                                    temperature_vacation:
                                      type: number
                                      minimum: 0
                                      maximum: 50
                                      nullable: true
                                    temperature_last_set:
                                      type: number
                                      minimum: 0
                                      maximum: 100
                                      nullable: true
                                      description: >-
                                        The temperature that the device is
                                        currently following
                                    vacation_mode:
                                      type: object
                                      properties:
                                        start_timestamp:
                                          type: number
                                          nullable: true
                                          description: >-
                                            UTC timestamp in minutes when the
                                            vacation mode starts
                                        end_timestamp:
                                          type: number
                                          nullable: true
                                          description: >-
                                            UTC timestamp in minutes when the
                                            vacation mode ends
                                        advanced:
                                          type: boolean
                                          nullable: true
                                          description: >-
                                            Advanced vacation mode - heaters will be
                                            regulated regarding "away" temperature
                                            by each room: false=OFF, true=ON
                                      required:
                                        - start_timestamp
                                        - end_timestamp
                                        - advanced
                                      nullable: true
                                    lock_status:
                                      type: string
                                      enum:
                                        - no_lock
                                        - child
                                        - commercial
                                      nullable: true
                                    predictive_heating_type:
                                      type: string
                                      enum:
                                        - 'off'
                                        - simple
                                        - advanced
                                      nullable: true
                                      description: "\n\"off\" - No predictive heating. Temperature will be change exactly with the weekly program timer\n\t\t\n\"simple\"  - Simple predictive heating. Temperature will be change before the timer, with a fixed time for each Celsius degree\n\t\t\n\"advanced\" - Advanced predictive heating. Temperature will be change before the timer, with a time based on the current room model. Model is estimated while running."
                                    open_window:
                                      type: object
                                      properties:
                                        drop_temperature_threshold:
                                          type: number
                                          description: >-
                                            Required temperature drop to trigger
                                            (activate) the open window
                                            functionality, in Celsius degrees
                                        drop_time_range:
                                          type: number
                                          description: >-
                                            Time range when a drop of temperature
                                            will be expected, in seconds
                                        increase_temperature_threshold:
                                          type: number
                                          description: >-
                                            Required temperature increase to
                                            deactivate open window functionality
                                        increase_time_range:
                                          type: number
                                          description: >-
                                            Time range when an increase of
                                            temperature will be expected, in seconds
                                        max_time:
                                          type: number
                                          description: >-
                                            Max time duration of the open window
                                            activeness
                                        enabled:
                                          type: boolean
                                          description: >-
                                            State of the open window functionality.
                                            True if open window functionality is
                                            enabled (that is whether the device can
                                            go into this mode while operating)
                                        activated:
                                          type: boolean
                                          description: >-
                                            Current state of the open window. True
                                            if open window is currently detected by
                                            device and is activated. You can
                                            deactivate currently detected open
                                            window by changing this value to false.
                                      required:
                                        - enabled
                                      nullable: true
                                    temperature_calibration_offset:
                                      type: number
                                      nullable: true
                                      description: Offset for ambient temperature
                                    display_unit:
                                      type: string
                                      enum:
                                        - celsius
                                        - fahrenheit
                                      nullable: true
                                      description: >-
                                        the temperature units: "celsius" or
                                        "fahrenheit" to set
                                    oil_heater_power_level:
                                      oneOf:
                                        - type: number
                                          enum:
                                            - 40
                                        - type: number
                                          enum:
                                            - 60
                                        - type: number
                                          enum:
                                            - 100
                                      nullable: true
                                      description: >-
                                        Set the max heating level in percentage
                                        of the nominal wattage. Oil heater
                                        allows setting 3 different max power
                                        settings (40, 60 or 100% of the power),
                                        done by selecting number of active
                                        heating elements.
                                    temperature_in_independent_mode:
                                      type: number
                                      minimum: 0
                                      maximum: 100
                                      nullable: true
                                      description: >-
                                        Change temperature in independent mode
                                        now. Use values 0.0 and 99.0 to set
                                        ALWAYS_ON and ALWAYS_OFF, respectively.
                                        Apart from changing value for some
                                        temperature type, in "Independent
                                        device" operation mode, one also needs
                                        to call this command to change the
                                        current temperature
                                    additional_socket_mode:
                                      type: string
                                      enum:
                                        - heating
                                        - cooling
                                        - always_on
                                        - always_off
                                      nullable: true
                                      description: "Command only for the socket heater, to select heating/cooling mode. ALWAYS_ON, ALWAYS_OFF modes just for convenience, as if these can be enabled also by other commands.\n\t\t"
                                    pid_parameters:
                                      type: object
                                      properties:
                                        kp:
                                          type: number
                                          description: The proportional part gain
                                        ki:
                                          type: number
                                          description: The integral part gain
                                        kd:
                                          type: number
                                          description: The derivative part gain
                                        kd_filter_N:
                                          type: number
                                          description: The derivative filter time coefficient
                                        windup_limit:
                                          type: number
                                          description: >-
                                            The windup limit for integral part from
                                            0 to 100
                                      required:
                                        - kp
                                        - ki
                                        - kd
                                        - kd_filter_N
                                        - windup_limit
                                      nullable: true
                                    max_heater_power:
                                      type: number
                                      nullable: true
                                      description: Set max heater power in Watts
                                    limited_heating_power:
                                      type: number
                                      minimum: 10
                                      maximum: 100
                                      nullable: true
                                      description: >-
                                        Only for heaters with triac
                                        (panel/storage). Allows to limit the
                                        heating percentage between 10 and 100
                                        percent.
                                    hysteresis:
                                      type: object
                                      properties:
                                        upper:
                                          type: number
                                          description: >-
                                            Set hysteresis parameters. Setting
                                            hysteresis parameters will change
                                            current regulator type to hysteresis.
                                            Upper offset (set temp + this -> stop
                                            heat)
                                        lower:
                                          type: number
                                          description: >-
                                            Set hysteresis parameters. Setting
                                            hysteresis parameters will change
                                            current regulator type to hysteresis.
                                            Lower offset (set temp - this -> start
                                            heat)
                                      required:
                                        - upper
                                        - lower
                                      nullable: true
                                    regulator_type:
                                      type: string
                                      enum:
                                        - pid
                                        - hysteresis_or_slow_pid
                                        - unknown
                                      nullable: true
                                    timezone:
                                      type: string
                                      nullable: true
                                    calibration_target_ambient_temperature:
                                      type: number
                                      nullable: true
                                      description: >-
                                        Target for calibrating ambient
                                        temperature for heaters gen.2
                                    fan_state:
                                      type: string
                                      enum:
                                        - 'on'
                                        - 'off'
                                      nullable: true
                                      description: Fan state of convection heaters gen.2
                                    weekly_program:
                                      type: object
                                      properties:
                                        timers:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              value_type:
                                                type: string
                                                enum:
                                                  - comfort
                                                  - sleep
                                                  - away
                                                  - normal
                                                  - always_heating
                                                  - 'off'
                                              timestamp:
                                                type: number
                                            required:
                                              - value_type
                                              - timestamp
                                      required:
                                        - timers
                                      nullable: true
                                      description: "The weekly program is a list of repeating pairs of values. A single pair represents time and value when the temperature mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific temperature type (set in the second field of the pair). Needs to be ordered ascending by time.\n\t\t\nFor mode \"independent device\" use only temperature types OFF and NORMAL, to avoid issues with changing the temperature by buttons from the heater"
                                  required:
                                    - operation_mode
                                    - override_weekly_program
                                    - non_repeatable_timers
                                    - temperature_normal
                                    - temperature_comfort
                                    - temperature_sleep
                                    - temperature_away
                                    - temperature_vacation
                                    - vacation_mode
                                    - lock_status
                                    - predictive_heating_type
                                    - open_window
                                    - temperature_calibration_offset
                                    - display_unit
                                    - oil_heater_power_level
                                    - temperature_in_independent_mode
                                    - additional_socket_mode
                                    - pid_parameters
                                    - max_heater_power
                                    - limited_heating_power
                                    - hysteresis
                                    - regulator_type
                                    - timezone
                                    - calibration_target_ambient_temperature
                                    - fan_state
                                    - weekly_program
                                  nullable: true
                                delta:
                                  type: object
                                  properties:
                                    operation_mode:
                                      type: string
                                      enum:
                                        - weekly_program
                                        - 'off'
                                        - independent_device
                                        - control_individually
                                      nullable: true
                                      description: "\n\"off\"  - all control disable\n\t\t\n\"weekly_program\" - follow the weekly program, changing temperature by display buttons changes the temperature of the current temperature mode\n\t\t\n\"independent_device\"  - follow the single set value, with timers enabled\n\t\t\n\"control_individually\"  - follow the single set value, but not use any timers or weekly program"
                                    override_weekly_program:
                                      type: object
                                      properties:
                                        value_type:
                                          type: string
                                          enum:
                                            - comfort
                                            - sleep
                                            - away
                                            - normal
                                            - always_heating
                                            - 'off'
                                          nullable: true
                                        ends_at:
                                          type: number
                                          nullable: true
                                          description: >-
                                            UTC timestamp in seconds when the
                                            override mode ends
                                      required:
                                        - value_type
                                        - ends_at
                                      nullable: true
                                      description: >-
                                        Overwrite the currently running weekly
                                        program with a temporary change of a
                                        specific temperature type (e.g.
                                        comfort). Time value of 0 means weekly
                                        program overwrite is not active anymore
                                        (disabled). Time should be a UTC
                                        timestamp when the program should end
                                    non_repeatable_timers:
                                      type: object
                                      properties:
                                        timers:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              value_type:
                                                type: string
                                                enum:
                                                  - normal
                                                  - 'off'
                                                  - always_heating
                                              timestamp:
                                                type: number
                                            required:
                                              - value_type
                                              - timestamp
                                      required:
                                        - timers
                                      nullable: true
                                      description: >-
                                        A single pair represents time and value
                                        when the temperature mode should be
                                        changed. Time defines when to switch to
                                        a specific temperature type (set in the
                                        second field of the pair). Time is as
                                        local unix timestamp (so timezone is
                                        included), but in minutes, e.g. on
                                        17.05.2021 the time is 27020801. Allowed
                                        temperature types for timers: "normal",
                                        "off", "always_heating". Only used in
                                        independent mode
                                    temperature_normal:
                                      type: number
                                      minimum: 0
                                      maximum: 100
                                      nullable: true
                                      description: >-
                                        Set temperature value, used for
                                        operation modes "Independent device" and
                                        timers
                                    temperature_comfort:
                                      type: number
                                      minimum: 0
                                      maximum: 50
                                      nullable: true
                                    temperature_sleep:
                                      type: number
                                      minimum: 0
                                      maximum: 50
                                      nullable: true
                                    temperature_away:
                                      type: number
                                      minimum: 0
                                      maximum: 50
                                      nullable: true
                                    temperature_vacation:
                                      type: number
                                      minimum: 0
                                      maximum: 50
                                      nullable: true
                                    temperature_last_set:
                                      type: number
                                      minimum: 0
                                      maximum: 100
                                      nullable: true
                                      description: >-
                                        The temperature that the device is
                                        currently following
                                    vacation_mode:
                                      type: object
                                      properties:
                                        start_timestamp:
                                          type: number
                                          nullable: true
                                          description: >-
                                            UTC timestamp in minutes when the
                                            vacation mode starts
                                        end_timestamp:
                                          type: number
                                          nullable: true
                                          description: >-
                                            UTC timestamp in minutes when the
                                            vacation mode ends
                                        advanced:
                                          type: boolean
                                          nullable: true
                                          description: >-
                                            Advanced vacation mode - heaters will be
                                            regulated regarding "away" temperature
                                            by each room: false=OFF, true=ON
                                      nullable: true
                                    lock_status:
                                      type: string
                                      enum:
                                        - no_lock
                                        - child
                                        - commercial
                                      nullable: true
                                    predictive_heating_type:
                                      type: string
                                      enum:
                                        - 'off'
                                        - simple
                                        - advanced
                                      nullable: true
                                      description: "\n\"off\" - No predictive heating. Temperature will be change exactly with the weekly program timer\n\t\t\n\"simple\"  - Simple predictive heating. Temperature will be change before the timer, with a fixed time for each Celsius degree\n\t\t\n\"advanced\" - Advanced predictive heating. Temperature will be change before the timer, with a time based on the current room model. Model is estimated while running."
                                    open_window:
                                      type: object
                                      properties:
                                        drop_temperature_threshold:
                                          type: number
                                          description: >-
                                            Required temperature drop to trigger
                                            (activate) the open window
                                            functionality, in Celsius degrees
                                        drop_time_range:
                                          type: number
                                          description: >-
                                            Time range when a drop of temperature
                                            will be expected, in seconds
                                        increase_temperature_threshold:
                                          type: number
                                          description: >-
                                            Required temperature increase to
                                            deactivate open window functionality
                                        increase_time_range:
                                          type: number
                                          description: >-
                                            Time range when an increase of
                                            temperature will be expected, in seconds
                                        max_time:
                                          type: number
                                          description: >-
                                            Max time duration of the open window
                                            activeness
                                        enabled:
                                          type: boolean
                                          description: >-
                                            State of the open window functionality.
                                            True if open window functionality is
                                            enabled (that is whether the device can
                                            go into this mode while operating)
                                        activated:
                                          type: boolean
                                          description: >-
                                            Current state of the open window. True
                                            if open window is currently detected by
                                            device and is activated. You can
                                            deactivate currently detected open
                                            window by changing this value to false.
                                      nullable: true
                                    temperature_calibration_offset:
                                      type: number
                                      nullable: true
                                      description: Offset for ambient temperature
                                    display_unit:
                                      type: string
                                      enum:
                                        - celsius
                                        - fahrenheit
                                      nullable: true
                                      description: >-
                                        the temperature units: "celsius" or
                                        "fahrenheit" to set
                                    oil_heater_power_level:
                                      oneOf:
                                        - type: number
                                          enum:
                                            - 40
                                        - type: number
                                          enum:
                                            - 60
                                        - type: number
                                          enum:
                                            - 100
                                      nullable: true
                                      description: >-
                                        Set the max heating level in percentage
                                        of the nominal wattage. Oil heater
                                        allows setting 3 different max power
                                        settings (40, 60 or 100% of the power),
                                        done by selecting number of active
                                        heating elements.
                                    temperature_in_independent_mode:
                                      type: number
                                      minimum: 0
                                      maximum: 100
                                      nullable: true
                                      description: >-
                                        Change temperature in independent mode
                                        now. Use values 0.0 and 99.0 to set
                                        ALWAYS_ON and ALWAYS_OFF, respectively.
                                        Apart from changing value for some
                                        temperature type, in "Independent
                                        device" operation mode, one also needs
                                        to call this command to change the
                                        current temperature
                                    additional_socket_mode:
                                      type: string
                                      enum:
                                        - heating
                                        - cooling
                                        - always_on
                                        - always_off
                                      nullable: true
                                      description: "Command only for the socket heater, to select heating/cooling mode. ALWAYS_ON, ALWAYS_OFF modes just for convenience, as if these can be enabled also by other commands.\n\t\t"
                                    pid_parameters:
                                      type: object
                                      properties:
                                        kp:
                                          type: number
                                          description: The proportional part gain
                                        ki:
                                          type: number
                                          description: The integral part gain
                                        kd:
                                          type: number
                                          description: The derivative part gain
                                        kd_filter_N:
                                          type: number
                                          description: The derivative filter time coefficient
                                        windup_limit:
                                          type: number
                                          description: >-
                                            The windup limit for integral part from
                                            0 to 100
                                      nullable: true
                                    max_heater_power:
                                      type: number
                                      nullable: true
                                      description: Set max heater power in Watts
                                    limited_heating_power:
                                      type: number
                                      minimum: 10
                                      maximum: 100
                                      nullable: true
                                      description: >-
                                        Only for heaters with triac
                                        (panel/storage). Allows to limit the
                                        heating percentage between 10 and 100
                                        percent.
                                    hysteresis:
                                      type: object
                                      properties:
                                        upper:
                                          type: number
                                          description: >-
                                            Set hysteresis parameters. Setting
                                            hysteresis parameters will change
                                            current regulator type to hysteresis.
                                            Upper offset (set temp + this -> stop
                                            heat)
                                        lower:
                                          type: number
                                          description: >-
                                            Set hysteresis parameters. Setting
                                            hysteresis parameters will change
                                            current regulator type to hysteresis.
                                            Lower offset (set temp - this -> start
                                            heat)
                                      nullable: true
                                    regulator_type:
                                      type: string
                                      enum:
                                        - pid
                                        - hysteresis_or_slow_pid
                                        - unknown
                                      nullable: true
                                    timezone:
                                      type: string
                                      nullable: true
                                    calibration_target_ambient_temperature:
                                      type: number
                                      nullable: true
                                      description: >-
                                        Target for calibrating ambient
                                        temperature for heaters gen.2
                                    fan_state:
                                      type: string
                                      enum:
                                        - 'on'
                                        - 'off'
                                      nullable: true
                                      description: Fan state of convection heaters gen.2
                                    weekly_program:
                                      type: object
                                      properties:
                                        timers:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              value_type:
                                                type: string
                                                enum:
                                                  - comfort
                                                  - sleep
                                                  - away
                                                  - normal
                                                  - always_heating
                                                  - 'off'
                                              timestamp:
                                                type: number
                                            required:
                                              - value_type
                                              - timestamp
                                      required:
                                        - timers
                                      nullable: true
                                      description: "The weekly program is a list of repeating pairs of values. A single pair represents time and value when the temperature mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific temperature type (set in the second field of the pair). Needs to be ordered ascending by time.\n\t\t\nFor mode \"independent device\" use only temperature types OFF and NORMAL, to avoid issues with changing the temperature by buttons from the heater"
                                  nullable: true
                              required:
                                - reported
                                - desired
                                - delta
                              description: Heater or Socket AWS IoT Thing shadow object
                            - type: object
                              properties:
                                reported:
                                  type: object
                                  properties:
                                    lock_status:
                                      type: string
                                      enum:
                                        - no_lock
                                        - child
                                      nullable: true
                                    fan_speed_mode:
                                      type: string
                                      enum:
                                        - HARD_OFF
                                        - SOFT_OFF
                                        - AUTO
                                        - SLEEP
                                        - BOOST
                                        - TURN_ON
                                        - MANUAL
                                        - MANUAL_LEVEL1
                                        - MANUAL_LEVEL2
                                        - MANUAL_LEVEL3
                                        - MANUAL_LEVEL4
                                        - MANUAL_LEVEL5
                                        - MANUAL_LEVEL6
                                        - MANUAL_LEVEL7
                                        - MANUAL_LEVEL8
                                      nullable: true
                                      description: "\n\t\t\t\nHARD_OFF - disable fan, stop to gather data from sensors, disconnect from wifi, can be disabled only via \ndisplay\n\t\t\t\nSOFT_OFF - disable fan but device is still connected to the wifi and gather data from sensors\n\t\t\t\nAUTO - device automatically determine current fan speed level based on the measurements from sensors\n\t\t\t\nSLEEP - lower display brightness, low fan speed\n\t\t\t\nBOOST - maximum available fan speed\n\t\t\t\nTURN_ON - disable Soft/Hard OFF and enable mode which was before OFF\n\t\t\t\nMANUAL - switch to manual mode with level as for Auto Mode\n\t\t\t\nMANUAL_LEVEL1\n\t\t\t\nMANUAL_LEVEL2\n\t\t\t\nMANUAL_LEVEL3\n\t\t\t\nMANUAL_LEVEL4\n\t\t\t\nMANUAL_LEVEL5\n\t\t\t\nMANUAL_LEVEL6\n\t\t\t\nMANUAL_LEVEL7\n\t\t\t\nMANUAL_LEVEL8 (only for AP Large)"
                                    repeatable_timers:
                                      type: object
                                      properties:
                                        timers:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              fan_speed_mode:
                                                type: string
                                                enum:
                                                  - HARD_OFF
                                                  - SOFT_OFF
                                                  - AUTO
                                                  - SLEEP
                                                  - BOOST
                                                  - TURN_ON
                                                  - MANUAL
                                                  - MANUAL_LEVEL1
                                                  - MANUAL_LEVEL2
                                                  - MANUAL_LEVEL3
                                                  - MANUAL_LEVEL4
                                                  - MANUAL_LEVEL5
                                                  - MANUAL_LEVEL6
                                                  - MANUAL_LEVEL7
                                                  - MANUAL_LEVEL8
                                              timestamp:
                                                type: number
                                            required:
                                              - fan_speed_mode
                                              - timestamp
                                      required:
                                        - timers
                                      nullable: true
                                      description: "The repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                                    non_repeatable_timers:
                                      type: object
                                      properties:
                                        timers:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              fan_speed_mode:
                                                type: string
                                                enum:
                                                  - HARD_OFF
                                                  - SOFT_OFF
                                                  - AUTO
                                                  - SLEEP
                                                  - BOOST
                                                  - TURN_ON
                                                  - MANUAL
                                                  - MANUAL_LEVEL1
                                                  - MANUAL_LEVEL2
                                                  - MANUAL_LEVEL3
                                                  - MANUAL_LEVEL4
                                                  - MANUAL_LEVEL5
                                                  - MANUAL_LEVEL6
                                                  - MANUAL_LEVEL7
                                                  - MANUAL_LEVEL8
                                              timestamp:
                                                type: number
                                            required:
                                              - fan_speed_mode
                                              - timestamp
                                      required:
                                        - timers
                                      nullable: true
                                      description: "The non-repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is as local unix timestamp (so timezone is included), but in minutes, e.g. on 17.05.2021 the time is 27020801. when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                                    aiq_displaying_mode:
                                      type: boolean
                                      nullable: true
                                      description: "false - display AiQ Lights in Inactivity Mode only if red (default option)\n\t\t\t\t\t\ntrue - always display AiQ Lights in Inactivity Mode"
                                    sensor_type:
                                      type: string
                                      enum:
                                        - particles
                                        - TVOC
                                        - both
                                      nullable: true
                                    filter_state:
                                      type: string
                                      enum:
                                        - OK
                                        - MEDIUM_DIRTY
                                        - DIRTY
                                        - MUST_BE_CHANGED
                                      nullable: true
                                    is_particle_sensor_faulty:
                                      type: boolean
                                      nullable: true
                                    is_temp_sensor_faulty:
                                      type: boolean
                                      nullable: true
                                    is_tvoc_sensor_faulty:
                                      type: boolean
                                      nullable: true
                                    timezone:
                                      type: string
                                      nullable: true
                                    display_brightness:
                                      type: number
                                      nullable: true
                                    particles_trigger_values_threshold:
                                      type: object
                                      properties:
                                        particles_trigger_values_threshold_for_level1:
                                          type: number
                                        particles_trigger_values_threshold_for_level2:
                                          type: number
                                        particles_trigger_values_threshold_for_level3:
                                          type: number
                                        particles_trigger_values_threshold_for_level4:
                                          type: number
                                        particles_trigger_values_threshold_for_level5:
                                          type: number
                                        particles_trigger_values_threshold_for_level6:
                                          type: number
                                        particles_trigger_values_threshold_for_level7:
                                          type: number
                                      nullable: true
                                    tvoc_trigger_values_threshold:
                                      type: object
                                      properties:
                                        tvoc_trigger_values_threshold_for_level1:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level2:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level3:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level4:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level5:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level6:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level7:
                                          type: number
                                      nullable: true
                                    auto_mode_fan_rpm:
                                      type: object
                                      properties:
                                        auto_mode_fan_rpm_level1:
                                          type: number
                                        auto_mode_fan_rpm_level2:
                                          type: number
                                        auto_mode_fan_rpm_level3:
                                          type: number
                                        auto_mode_fan_rpm_level4:
                                          type: number
                                        auto_mode_fan_rpm_level5:
                                          type: number
                                        auto_mode_fan_rpm_level6:
                                          type: number
                                        auto_mode_fan_rpm_level7:
                                          type: number
                                        auto_mode_fan_rpm_level8:
                                          type: number
                                      nullable: true
                                    manual_sleep_boost_fan_rpm:
                                      type: object
                                      properties:
                                        manual_mode_fan_rpm_level1:
                                          type: number
                                        manual_mode_fan_rpm_level2:
                                          type: number
                                        manual_mode_fan_rpm_level3:
                                          type: number
                                        manual_mode_fan_rpm_level4:
                                          type: number
                                        manual_mode_fan_rpm_level5:
                                          type: number
                                        manual_mode_fan_rpm_level6:
                                          type: number
                                        manual_mode_fan_rpm_level7:
                                          type: number
                                        manual_mode_fan_rpm_level8:
                                          type: number
                                        boost_mode_fan_rpm:
                                          type: number
                                        sleep_mode_fan_rpm:
                                          type: number
                                      nullable: true
                                    auto_mode_fan_levels_states:
                                      type: object
                                      properties:
                                        auto_mode_fan_state_level1:
                                          type: boolean
                                        auto_mode_fan_state_level2:
                                          type: boolean
                                        auto_mode_fan_state_level3:
                                          type: boolean
                                        auto_mode_fan_state_level4:
                                          type: boolean
                                        auto_mode_fan_state_level5:
                                          type: boolean
                                        auto_mode_fan_state_level6:
                                          type: boolean
                                        auto_mode_fan_state_level7:
                                          type: boolean
                                        auto_mode_fan_state_level8:
                                          type: boolean
                                      nullable: true
                                  required:
                                    - lock_status
                                    - fan_speed_mode
                                    - repeatable_timers
                                    - non_repeatable_timers
                                    - aiq_displaying_mode
                                    - filter_state
                                    - is_particle_sensor_faulty
                                    - is_temp_sensor_faulty
                                    - is_tvoc_sensor_faulty
                                    - timezone
                                    - display_brightness
                                    - particles_trigger_values_threshold
                                    - auto_mode_fan_rpm
                                    - manual_sleep_boost_fan_rpm
                                    - auto_mode_fan_levels_states
                                  nullable: true
                                desired:
                                  type: object
                                  properties:
                                    lock_status:
                                      type: string
                                      enum:
                                        - no_lock
                                        - child
                                      nullable: true
                                    fan_speed_mode:
                                      type: string
                                      enum:
                                        - HARD_OFF
                                        - SOFT_OFF
                                        - AUTO
                                        - SLEEP
                                        - BOOST
                                        - TURN_ON
                                        - MANUAL
                                        - MANUAL_LEVEL1
                                        - MANUAL_LEVEL2
                                        - MANUAL_LEVEL3
                                        - MANUAL_LEVEL4
                                        - MANUAL_LEVEL5
                                        - MANUAL_LEVEL6
                                        - MANUAL_LEVEL7
                                        - MANUAL_LEVEL8
                                      nullable: true
                                      description: "\n\t\t\t\nHARD_OFF - disable fan, stop to gather data from sensors, disconnect from wifi, can be disabled only via \ndisplay\n\t\t\t\nSOFT_OFF - disable fan but device is still connected to the wifi and gather data from sensors\n\t\t\t\nAUTO - device automatically determine current fan speed level based on the measurements from sensors\n\t\t\t\nSLEEP - lower display brightness, low fan speed\n\t\t\t\nBOOST - maximum available fan speed\n\t\t\t\nTURN_ON - disable Soft/Hard OFF and enable mode which was before OFF\n\t\t\t\nMANUAL - switch to manual mode with level as for Auto Mode\n\t\t\t\nMANUAL_LEVEL1\n\t\t\t\nMANUAL_LEVEL2\n\t\t\t\nMANUAL_LEVEL3\n\t\t\t\nMANUAL_LEVEL4\n\t\t\t\nMANUAL_LEVEL5\n\t\t\t\nMANUAL_LEVEL6\n\t\t\t\nMANUAL_LEVEL7\n\t\t\t\nMANUAL_LEVEL8 (only for AP Large)"
                                    repeatable_timers:
                                      type: object
                                      properties:
                                        timers:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              fan_speed_mode:
                                                type: string
                                                enum:
                                                  - HARD_OFF
                                                  - SOFT_OFF
                                                  - AUTO
                                                  - SLEEP
                                                  - BOOST
                                                  - TURN_ON
                                                  - MANUAL
                                                  - MANUAL_LEVEL1
                                                  - MANUAL_LEVEL2
                                                  - MANUAL_LEVEL3
                                                  - MANUAL_LEVEL4
                                                  - MANUAL_LEVEL5
                                                  - MANUAL_LEVEL6
                                                  - MANUAL_LEVEL7
                                                  - MANUAL_LEVEL8
                                              timestamp:
                                                type: number
                                            required:
                                              - fan_speed_mode
                                              - timestamp
                                      required:
                                        - timers
                                      nullable: true
                                      description: "The repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                                    non_repeatable_timers:
                                      type: object
                                      properties:
                                        timers:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              fan_speed_mode:
                                                type: string
                                                enum:
                                                  - HARD_OFF
                                                  - SOFT_OFF
                                                  - AUTO
                                                  - SLEEP
                                                  - BOOST
                                                  - TURN_ON
                                                  - MANUAL
                                                  - MANUAL_LEVEL1
                                                  - MANUAL_LEVEL2
                                                  - MANUAL_LEVEL3
                                                  - MANUAL_LEVEL4
                                                  - MANUAL_LEVEL5
                                                  - MANUAL_LEVEL6
                                                  - MANUAL_LEVEL7
                                                  - MANUAL_LEVEL8
                                              timestamp:
                                                type: number
                                            required:
                                              - fan_speed_mode
                                              - timestamp
                                      required:
                                        - timers
                                      nullable: true
                                      description: "The non-repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is as local unix timestamp (so timezone is included), but in minutes, e.g. on 17.05.2021 the time is 27020801. when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                                    aiq_displaying_mode:
                                      type: boolean
                                      nullable: true
                                      description: "false - display AiQ Lights in Inactivity Mode only if red (default option)\n\t\t\t\t\t\ntrue - always display AiQ Lights in Inactivity Mode"
                                    sensor_type:
                                      type: string
                                      enum:
                                        - particles
                                        - TVOC
                                        - both
                                      nullable: true
                                    filter_state:
                                      type: string
                                      enum:
                                        - OK
                                        - MEDIUM_DIRTY
                                        - DIRTY
                                        - MUST_BE_CHANGED
                                      nullable: true
                                    is_particle_sensor_faulty:
                                      type: boolean
                                      nullable: true
                                    is_temp_sensor_faulty:
                                      type: boolean
                                      nullable: true
                                    is_tvoc_sensor_faulty:
                                      type: boolean
                                      nullable: true
                                    timezone:
                                      type: string
                                      nullable: true
                                    display_brightness:
                                      type: number
                                      nullable: true
                                    particles_trigger_values_threshold:
                                      type: object
                                      properties:
                                        particles_trigger_values_threshold_for_level1:
                                          type: number
                                        particles_trigger_values_threshold_for_level2:
                                          type: number
                                        particles_trigger_values_threshold_for_level3:
                                          type: number
                                        particles_trigger_values_threshold_for_level4:
                                          type: number
                                        particles_trigger_values_threshold_for_level5:
                                          type: number
                                        particles_trigger_values_threshold_for_level6:
                                          type: number
                                        particles_trigger_values_threshold_for_level7:
                                          type: number
                                      nullable: true
                                    tvoc_trigger_values_threshold:
                                      type: object
                                      properties:
                                        tvoc_trigger_values_threshold_for_level1:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level2:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level3:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level4:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level5:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level6:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level7:
                                          type: number
                                      nullable: true
                                    auto_mode_fan_rpm:
                                      type: object
                                      properties:
                                        auto_mode_fan_rpm_level1:
                                          type: number
                                        auto_mode_fan_rpm_level2:
                                          type: number
                                        auto_mode_fan_rpm_level3:
                                          type: number
                                        auto_mode_fan_rpm_level4:
                                          type: number
                                        auto_mode_fan_rpm_level5:
                                          type: number
                                        auto_mode_fan_rpm_level6:
                                          type: number
                                        auto_mode_fan_rpm_level7:
                                          type: number
                                        auto_mode_fan_rpm_level8:
                                          type: number
                                      nullable: true
                                    manual_sleep_boost_fan_rpm:
                                      type: object
                                      properties:
                                        manual_mode_fan_rpm_level1:
                                          type: number
                                        manual_mode_fan_rpm_level2:
                                          type: number
                                        manual_mode_fan_rpm_level3:
                                          type: number
                                        manual_mode_fan_rpm_level4:
                                          type: number
                                        manual_mode_fan_rpm_level5:
                                          type: number
                                        manual_mode_fan_rpm_level6:
                                          type: number
                                        manual_mode_fan_rpm_level7:
                                          type: number
                                        manual_mode_fan_rpm_level8:
                                          type: number
                                        boost_mode_fan_rpm:
                                          type: number
                                        sleep_mode_fan_rpm:
                                          type: number
                                      nullable: true
                                    auto_mode_fan_levels_states:
                                      type: object
                                      properties:
                                        auto_mode_fan_state_level1:
                                          type: boolean
                                        auto_mode_fan_state_level2:
                                          type: boolean
                                        auto_mode_fan_state_level3:
                                          type: boolean
                                        auto_mode_fan_state_level4:
                                          type: boolean
                                        auto_mode_fan_state_level5:
                                          type: boolean
                                        auto_mode_fan_state_level6:
                                          type: boolean
                                        auto_mode_fan_state_level7:
                                          type: boolean
                                        auto_mode_fan_state_level8:
                                          type: boolean
                                      nullable: true
                                  required:
                                    - lock_status
                                    - fan_speed_mode
                                    - repeatable_timers
                                    - non_repeatable_timers
                                    - aiq_displaying_mode
                                    - filter_state
                                    - is_particle_sensor_faulty
                                    - is_temp_sensor_faulty
                                    - is_tvoc_sensor_faulty
                                    - timezone
                                    - display_brightness
                                    - particles_trigger_values_threshold
                                    - auto_mode_fan_rpm
                                    - manual_sleep_boost_fan_rpm
                                    - auto_mode_fan_levels_states
                                  nullable: true
                                delta:
                                  type: object
                                  properties:
                                    lock_status:
                                      type: string
                                      enum:
                                        - no_lock
                                        - child
                                      nullable: true
                                    fan_speed_mode:
                                      type: string
                                      enum:
                                        - HARD_OFF
                                        - SOFT_OFF
                                        - AUTO
                                        - SLEEP
                                        - BOOST
                                        - TURN_ON
                                        - MANUAL
                                        - MANUAL_LEVEL1
                                        - MANUAL_LEVEL2
                                        - MANUAL_LEVEL3
                                        - MANUAL_LEVEL4
                                        - MANUAL_LEVEL5
                                        - MANUAL_LEVEL6
                                        - MANUAL_LEVEL7
                                        - MANUAL_LEVEL8
                                      nullable: true
                                      description: "\n\t\t\t\nHARD_OFF - disable fan, stop to gather data from sensors, disconnect from wifi, can be disabled only via \ndisplay\n\t\t\t\nSOFT_OFF - disable fan but device is still connected to the wifi and gather data from sensors\n\t\t\t\nAUTO - device automatically determine current fan speed level based on the measurements from sensors\n\t\t\t\nSLEEP - lower display brightness, low fan speed\n\t\t\t\nBOOST - maximum available fan speed\n\t\t\t\nTURN_ON - disable Soft/Hard OFF and enable mode which was before OFF\n\t\t\t\nMANUAL - switch to manual mode with level as for Auto Mode\n\t\t\t\nMANUAL_LEVEL1\n\t\t\t\nMANUAL_LEVEL2\n\t\t\t\nMANUAL_LEVEL3\n\t\t\t\nMANUAL_LEVEL4\n\t\t\t\nMANUAL_LEVEL5\n\t\t\t\nMANUAL_LEVEL6\n\t\t\t\nMANUAL_LEVEL7\n\t\t\t\nMANUAL_LEVEL8 (only for AP Large)"
                                    repeatable_timers:
                                      type: object
                                      properties:
                                        timers:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              fan_speed_mode:
                                                type: string
                                                enum:
                                                  - HARD_OFF
                                                  - SOFT_OFF
                                                  - AUTO
                                                  - SLEEP
                                                  - BOOST
                                                  - TURN_ON
                                                  - MANUAL
                                                  - MANUAL_LEVEL1
                                                  - MANUAL_LEVEL2
                                                  - MANUAL_LEVEL3
                                                  - MANUAL_LEVEL4
                                                  - MANUAL_LEVEL5
                                                  - MANUAL_LEVEL6
                                                  - MANUAL_LEVEL7
                                                  - MANUAL_LEVEL8
                                              timestamp:
                                                type: number
                                            required:
                                              - fan_speed_mode
                                              - timestamp
                                      required:
                                        - timers
                                      nullable: true
                                      description: "The repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                                    non_repeatable_timers:
                                      type: object
                                      properties:
                                        timers:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              fan_speed_mode:
                                                type: string
                                                enum:
                                                  - HARD_OFF
                                                  - SOFT_OFF
                                                  - AUTO
                                                  - SLEEP
                                                  - BOOST
                                                  - TURN_ON
                                                  - MANUAL
                                                  - MANUAL_LEVEL1
                                                  - MANUAL_LEVEL2
                                                  - MANUAL_LEVEL3
                                                  - MANUAL_LEVEL4
                                                  - MANUAL_LEVEL5
                                                  - MANUAL_LEVEL6
                                                  - MANUAL_LEVEL7
                                                  - MANUAL_LEVEL8
                                              timestamp:
                                                type: number
                                            required:
                                              - fan_speed_mode
                                              - timestamp
                                      required:
                                        - timers
                                      nullable: true
                                      description: "The non-repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is as local unix timestamp (so timezone is included), but in minutes, e.g. on 17.05.2021 the time is 27020801. when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                                    aiq_displaying_mode:
                                      type: boolean
                                      nullable: true
                                      description: "false - display AiQ Lights in Inactivity Mode only if red (default option)\n\t\t\t\t\t\ntrue - always display AiQ Lights in Inactivity Mode"
                                    sensor_type:
                                      type: string
                                      enum:
                                        - particles
                                        - TVOC
                                        - both
                                      nullable: true
                                    filter_state:
                                      type: string
                                      enum:
                                        - OK
                                        - MEDIUM_DIRTY
                                        - DIRTY
                                        - MUST_BE_CHANGED
                                      nullable: true
                                    is_particle_sensor_faulty:
                                      type: boolean
                                      nullable: true
                                    is_temp_sensor_faulty:
                                      type: boolean
                                      nullable: true
                                    is_tvoc_sensor_faulty:
                                      type: boolean
                                      nullable: true
                                    timezone:
                                      type: string
                                      nullable: true
                                    display_brightness:
                                      type: number
                                      nullable: true
                                    particles_trigger_values_threshold:
                                      type: object
                                      properties:
                                        particles_trigger_values_threshold_for_level1:
                                          type: number
                                        particles_trigger_values_threshold_for_level2:
                                          type: number
                                        particles_trigger_values_threshold_for_level3:
                                          type: number
                                        particles_trigger_values_threshold_for_level4:
                                          type: number
                                        particles_trigger_values_threshold_for_level5:
                                          type: number
                                        particles_trigger_values_threshold_for_level6:
                                          type: number
                                        particles_trigger_values_threshold_for_level7:
                                          type: number
                                      nullable: true
                                    tvoc_trigger_values_threshold:
                                      type: object
                                      properties:
                                        tvoc_trigger_values_threshold_for_level1:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level2:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level3:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level4:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level5:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level6:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level7:
                                          type: number
                                      nullable: true
                                    auto_mode_fan_rpm:
                                      type: object
                                      properties:
                                        auto_mode_fan_rpm_level1:
                                          type: number
                                        auto_mode_fan_rpm_level2:
                                          type: number
                                        auto_mode_fan_rpm_level3:
                                          type: number
                                        auto_mode_fan_rpm_level4:
                                          type: number
                                        auto_mode_fan_rpm_level5:
                                          type: number
                                        auto_mode_fan_rpm_level6:
                                          type: number
                                        auto_mode_fan_rpm_level7:
                                          type: number
                                        auto_mode_fan_rpm_level8:
                                          type: number
                                      nullable: true
                                    manual_sleep_boost_fan_rpm:
                                      type: object
                                      properties:
                                        manual_mode_fan_rpm_level1:
                                          type: number
                                        manual_mode_fan_rpm_level2:
                                          type: number
                                        manual_mode_fan_rpm_level3:
                                          type: number
                                        manual_mode_fan_rpm_level4:
                                          type: number
                                        manual_mode_fan_rpm_level5:
                                          type: number
                                        manual_mode_fan_rpm_level6:
                                          type: number
                                        manual_mode_fan_rpm_level7:
                                          type: number
                                        manual_mode_fan_rpm_level8:
                                          type: number
                                        boost_mode_fan_rpm:
                                          type: number
                                        sleep_mode_fan_rpm:
                                          type: number
                                      nullable: true
                                    auto_mode_fan_levels_states:
                                      type: object
                                      properties:
                                        auto_mode_fan_state_level1:
                                          type: boolean
                                        auto_mode_fan_state_level2:
                                          type: boolean
                                        auto_mode_fan_state_level3:
                                          type: boolean
                                        auto_mode_fan_state_level4:
                                          type: boolean
                                        auto_mode_fan_state_level5:
                                          type: boolean
                                        auto_mode_fan_state_level6:
                                          type: boolean
                                        auto_mode_fan_state_level7:
                                          type: boolean
                                        auto_mode_fan_state_level8:
                                          type: boolean
                                      nullable: true
                                  nullable: true
                              required:
                                - reported
                                - desired
                                - delta
                              description: Air Purifier AWS IoT Thing shadow object
                            - type: object
                              properties:
                                reported:
                                  type: object
                                  properties:
                                    ens210_ranges:
                                      type: object
                                      properties:
                                        temperature_green:
                                          type: number
                                        temperature_red:
                                          type: number
                                        humidity_yellow_low:
                                          type: number
                                        humidity_yellow_high:
                                          type: number
                                        humidity_red_low:
                                          type: number
                                        humidity_red_high:
                                          type: number
                                      required:
                                        - temperature_green
                                        - temperature_red
                                        - humidity_yellow_low
                                        - humidity_yellow_high
                                        - humidity_red_low
                                        - humidity_red_high
                                      nullable: true
                                    ccs811_ranges:
                                      type: object
                                      properties:
                                        eco2_red:
                                          type: number
                                        eco2_yellow:
                                          type: number
                                        tvoc_red:
                                          type: number
                                        tvoc_yellow:
                                          type: number
                                      required:
                                        - eco2_red
                                        - eco2_yellow
                                        - tvoc_red
                                        - tvoc_yellow
                                      nullable: true
                                    sampling_period:
                                      type: number
                                      nullable: true
                                    timezone:
                                      type: string
                                      nullable: true
                                  required:
                                    - ens210_ranges
                                    - ccs811_ranges
                                    - sampling_period
                                    - timezone
                                  nullable: true
                                desired:
                                  type: object
                                  properties:
                                    ens210_ranges:
                                      type: object
                                      properties:
                                        temperature_green:
                                          type: number
                                        temperature_red:
                                          type: number
                                        humidity_yellow_low:
                                          type: number
                                        humidity_yellow_high:
                                          type: number
                                        humidity_red_low:
                                          type: number
                                        humidity_red_high:
                                          type: number
                                      required:
                                        - temperature_green
                                        - temperature_red
                                        - humidity_yellow_low
                                        - humidity_yellow_high
                                        - humidity_red_low
                                        - humidity_red_high
                                      nullable: true
                                    ccs811_ranges:
                                      type: object
                                      properties:
                                        eco2_red:
                                          type: number
                                        eco2_yellow:
                                          type: number
                                        tvoc_red:
                                          type: number
                                        tvoc_yellow:
                                          type: number
                                      required:
                                        - eco2_red
                                        - eco2_yellow
                                        - tvoc_red
                                        - tvoc_yellow
                                      nullable: true
                                    sampling_period:
                                      type: number
                                      nullable: true
                                    timezone:
                                      type: string
                                      nullable: true
                                  required:
                                    - ens210_ranges
                                    - ccs811_ranges
                                    - sampling_period
                                    - timezone
                                  nullable: true
                                delta:
                                  type: object
                                  properties:
                                    ens210_ranges:
                                      type: object
                                      properties:
                                        temperature_green:
                                          type: number
                                        temperature_red:
                                          type: number
                                        humidity_yellow_low:
                                          type: number
                                        humidity_yellow_high:
                                          type: number
                                        humidity_red_low:
                                          type: number
                                        humidity_red_high:
                                          type: number
                                      nullable: true
                                    ccs811_ranges:
                                      type: object
                                      properties:
                                        eco2_red:
                                          type: number
                                        eco2_yellow:
                                          type: number
                                        tvoc_red:
                                          type: number
                                        tvoc_yellow:
                                          type: number
                                      nullable: true
                                    sampling_period:
                                      type: number
                                      nullable: true
                                    timezone:
                                      type: string
                                      nullable: true
                                  nullable: true
                              required:
                                - reported
                                - desired
                                - delta
                              description: Air Sensor AWS IoT Thing shadow object
                          nullable: true
                        lastMetrics:
                          oneOf:
                            - type: object
                              properties:
                                deviceId:
                                  type: string
                                time:
                                  type: number
                                  minimum: 0
                                  maximum: 9999999999
                                  description: Date in seconds since epoch (UTC time)
                                  example: 1579098983
                                temperature:
                                  type: number
                                  description: >-
                                    What is the current target temperature for
                                    the heater regulator. Temperature in Celsius
                                    degrees
                                humidity:
                                  type: number
                                  description: "SOCKET: Measured humidity - Relative humidity percentage multiplied by 100.\n\t\t\t\t\t\t\nValid ONLY FOR SOCKET HEATER. So for the panel heater, this field will be dummy bytes.\n\t\t\t\t\t\t\nCONVECTOR: Tilt sensor state. 1 = convector fallen and not heating"
                                temperatureAmbient:
                                  type: number
                                  description: >-
                                    Actual temperature after applying the
                                    calibration offset. If the temperature
                                    sensor is faulty, this field will be equal
                                    -100 C. Temperature in Celsius degrees
                                currentPower:
                                  type: number
                                  description: >-
                                    Power measured with the dedicated IC chip.
                                    In Watts. Due to the chip behavior, this
                                    value is filtered for a few seconds. To
                                    determine if the heater is heating RIGHT NOW
                                    use the control_signal field or heater_flag
                                controlSignal:
                                  type: number
                                  description: >-
                                    Current value of control signal - so the
                                    percentage of the maximum heater power.
                                    Value from 0 to 100. It is the value applied
                                    by the heater right now
                                currentOperationMode:
                                  type: number
                                  description: "0 - \"Off\"\n\t\t\t\t\t\t\n1 - \"Weekly program\"\n\t\t\t\t\t\t\n2 - \"Independent device\" (uses timers)\n\t\t\t\t\t\t\n3 - \"Control Individually\" (follows the single set temperature)"
                                energyUsage:
                                  type: number
                                  description: >-
                                    Energy used since the heater startup. In
                                    Wh. 
                                timeSinceHeaterStartup:
                                  type: number
                                  description: >-
                                    Time in seconds since heater startup.
                                    Knowing this information and energy_usage
                                    the cloud can calculate the energy usage in
                                    any time range (e.g. during last 24 hours)
                                openWindowsStatus:
                                  type: number
                                  description: "Whether the open window functionality is enabled (can be activated by opening a window) and active now (was triggered and the heater is not heating).\n\t\t\t\t 0 - disabled, not active now 3 - enabled, not active now 2 - enabled and active now!"
                                currentTemperatureTypeInWeeklyProgram:
                                  type: number
                                  description: "Current temperature type: 0=normal, 1=comfort, 2=sleep, 3=away, 4=vacation, 5=off\n\t\t\tTemperature type followed currently (only if weekly program is active).\n\t\t\tIf the heater is in other mode than \"Weekly program\" this field will contains value \"-1\".\n\t\t\tIf the NTP time is not synchronized this field will contain value \"-2\" (because when NTP time is not synchronized, current weekly program status cannot be determined"
                                heaterFlag:
                                  type: number
                                  description: 'Heating/Cooling status: 0=off, 1=on'
                                powerStatus:
                                  type: number
                                  description: >-
                                    If the device is on (not in operation mode
                                    off or temperature is not set to 0): 0=off,
                                    1=on
                              required:
                                - deviceId
                                - time
                                - temperature
                                - humidity
                                - temperatureAmbient
                                - currentPower
                                - controlSignal
                                - currentOperationMode
                                - energyUsage
                                - timeSinceHeaterStartup
                                - openWindowsStatus
                                - currentTemperatureTypeInWeeklyProgram
                                - heaterFlag
                                - powerStatus
                              description: >-
                                Heater last metrics. If null, no metrics were
                                found
                            - type: object
                              properties:
                                deviceId:
                                  type: string
                                  description: AWS IoT Thing Name (UUID)
                                time:
                                  type: number
                                  minimum: 0
                                  maximum: 9999999999
                                  description: Date in seconds since epoch (UTC time)
                                  example: 1579098983
                                setFanLevelInAuto:
                                  type: number
                                  description: >-
                                    Current fan speed level, relevant only when
                                    operation_mode=auto. Level1=0, Level8=7
                                controlSignal:
                                  type: number
                                  description: >-
                                    Current value of control signal applied to
                                    the device motor. So it is the percentage of
                                    maximum motor input signal.
                                massPm_10:
                                  type: number
                                  description: >-
                                    Mass of particles with diameter < 1
                                    micrometers in volume of one cubic meter
                                    [µg/m3] in range <0,1000>
                                particles10Level:
                                  type: number
                                  description: >-
                                    Warning level of mass of particles with
                                    diameter < 1 micrometers
                                massPm_25:
                                  type: number
                                  description: >-
                                    Mass of particles with diameter < 2.5
                                    micrometers in volume of one cubic meter
                                    [µg/m3] in range <0,1000>
                                particles25Level:
                                  type: number
                                  description: >-
                                    Warning level of mass of particles with
                                    diameter < 2.5 micrometers
                                massPm_100:
                                  type: number
                                  description: >-
                                    Mass of particles with diameter < 10.0
                                    micrometers in volume of one cubic meter
                                    [µg/m3] in range <0,1000>
                                particles100Level:
                                  type: number
                                  description: >-
                                    Warning level of mass of particles with
                                    diameter < 10 micrometers
                                numberPm_05:
                                  type: number
                                  description: >-
                                    Total number of particles wit diameter < 0.5
                                    micrometers in cubic centimeter [#/cm3] in
                                    range <0,3000>
                                numberPm_10:
                                  type: number
                                  description: >-
                                    Total number of particles wit diameter < 1
                                    micrometers in cubic centimeter [#/cm3] in
                                    range <0,3000>
                                numberPm_25:
                                  type: number
                                  description: >-
                                    Total number of particles wit diameter < 2.5
                                    micrometers in cubic centimeter [#/cm3] in
                                    range <0,3000>
                                numberPm_50:
                                  type: number
                                  description: >-
                                    Total number of particles wit diameter < 5
                                    micrometers in cubic centimeter [#/cm3] in
                                    range <0,3000>
                                numberPm_100:
                                  type: number
                                  description: >-
                                    Total number of particles wit diameter < 10
                                    micrometers in cubic centimeter [#/cm3] in
                                    range <0,3000>
                                temperature:
                                  type: number
                                  description: Temperature in Celsius degrees
                                temperatureLevel:
                                  type: number
                                  description: Warning level of temperature
                                humidity:
                                  type: number
                                  description: >-
                                    Relative humidity in percents %, multiplied
                                    by 100
                                humidityLevel:
                                  type: number
                                  description: Warning level of humidity
                                runtimeLevelSleepMs:
                                  type: number
                                  description: >-
                                    Number of milliseconds, during which the
                                    device works in sleep mode
                                runtimeLevelBoostMs:
                                  type: number
                                  description: >-
                                    Number of milliseconds, during which the
                                    device works in boost mode
                                runtimeLevelLevel1Ms:
                                  type: number
                                  description: >-
                                    Number of milliseconds, during which the
                                    device using Level1 fan speed (in auto and
                                    manual)
                                runtimeLevelLevel2Ms:
                                  type: number
                                  description: >-
                                    Number of milliseconds, during which the
                                    device using Level2 fan speed (in auto and
                                    manual)
                                runtimeLevelLevel3Ms:
                                  type: number
                                  description: >-
                                    Number of milliseconds, during which the
                                    device using Level3 fan speed (in auto and
                                    manual)
                                runtimeLevelLevel4Ms:
                                  type: number
                                  description: >-
                                    Number of milliseconds, during which the
                                    device using Level4 fan speed (in auto and
                                    manual)
                                runtimeLevelLevel5Ms:
                                  type: number
                                  description: >-
                                    Number of milliseconds, during which the
                                    device using Level5 fan speed (in auto and
                                    manual)
                                runtimeLevelLevel6Ms:
                                  type: number
                                  description: >-
                                    Number of milliseconds, during which the
                                    device using Level6 fan speed (in auto and
                                    manual)
                                runtimeLevelLevel7Ms:
                                  type: number
                                  description: >-
                                    Number of milliseconds, during which the
                                    device using Level7 fan speed (in auto and
                                    manual)
                                runtimeLevelLevel8Ms:
                                  type: number
                                  description: >-
                                    Number of milliseconds, during which the
                                    device using Level8 fan speed (in auto and
                                    manual)
                                airQualityIndex:
                                  type: number
                                  description: >-
                                    Air Quality Index calculated from TVOC and
                                    eCO2 measurements by sensor, in range <1,5>
                                eco2:
                                  type: number
                                  description: >-
                                    Equivalent CO2 in range <400-65000> [parts
                                    per million CO2 equiv.]
                                eco2Level:
                                  type: number
                                  description: Warning level of CO2
                                tvoc:
                                  type: number
                                  description: >-
                                    Total Volatile Organic Compounds in range
                                    <0-65000> [part per billion]
                                tvocLevel:
                                  type: number
                                  description: >-
                                    Warning level of Total Volatile Organic
                                    Compounds
                              required:
                                - deviceId
                                - time
                                - setFanLevelInAuto
                                - controlSignal
                                - massPm_10
                                - particles10Level
                                - massPm_25
                                - particles25Level
                                - massPm_100
                                - particles100Level
                                - numberPm_05
                                - numberPm_10
                                - numberPm_25
                                - numberPm_50
                                - numberPm_100
                                - temperature
                                - temperatureLevel
                                - humidity
                                - humidityLevel
                                - runtimeLevelSleepMs
                                - runtimeLevelBoostMs
                                - runtimeLevelLevel1Ms
                                - runtimeLevelLevel2Ms
                                - runtimeLevelLevel3Ms
                                - runtimeLevelLevel4Ms
                                - runtimeLevelLevel5Ms
                                - runtimeLevelLevel6Ms
                                - runtimeLevelLevel7Ms
                                - runtimeLevelLevel8Ms
                                - airQualityIndex
                                - eco2
                                - eco2Level
                                - tvoc
                                - tvocLevel
                              description: >-
                                Air purifier last metrics. If null, no metrics
                                were found
                            - type: object
                              properties:
                                deviceId:
                                  type: string
                                time:
                                  type: number
                                  minimum: 0
                                  maximum: 9999999999
                                  description: Date in seconds since epoch (UTC time)
                                  example: 1579098983
                                temperature:
                                  type: number
                                  description: Temperature in Celsius degrees
                                humidity:
                                  type: number
                                  description: 2 - bytes [ unsigned integer ] [ 100 x 1%]
                                eco2:
                                  type: number
                                  description: >-
                                    2 - bytes [ unsigned integer ] [ parts per
                                    million ]
                                tvoc:
                                  type: number
                                  description: >-
                                    2 - bytes [ unsigned integer ] [ parts per
                                    million ]
                                batteryPercentage:
                                  type: number
                                  description: 2 - bytes [ unsigned integer ] [ 10 x 1% ]
                                batteryVoltage:
                                  type: number
                                  description: >-
                                    2 - bytes [ unsigned integer ] [ millivolts
                                    ]
                                chargingStatus:
                                  type: number
                                  description: >-
                                    0 - not charging ; 1 - charging with LED
                                    turn Off; 2 - charging with LED turn On (
                                    updated 2 - 30 s after change )
                                tvocSensorCalibrated:
                                  type: boolean
                                  description: false - not calibrated, true - calibrated
                                tvocSensorCountdownRemainingTime:
                                  type: number
                                  description: >-
                                    Seconds to finish calibration, if sensor
                                    calibrated then equal to 0
                                tvocSensorCountdownRemainingTimeTo:
                                  type: number
                                  description: >-
                                    Seconds to finish calibration, if sensor
                                    calibrated then equal to 0
                                tvocSensorCountdownTotalTime:
                                  type: number
                                  description: >-
                                    Total time needed to perform tvoc sensor
                                    calibration
                                ens210SensorCalibrated:
                                  type: boolean
                                  description: false - not calibrated, true - calibrated
                                ens210SensorCountdownRemainingTime:
                                  type: number
                                  description: >-
                                    Seconds to finish calibration, if sensor
                                    calibrated then equal to 0
                                ens210SensorCountdownRemainingTimeTo:
                                  type: number
                                  description: Seconds to finish calibration
                                ens210SensorCountdownTotalTime:
                                  type: number
                                  description: >-
                                    Total time needed to perform ens210 sensor
                                    calibration
                              required:
                                - deviceId
                                - time
                                - temperature
                                - humidity
                                - eco2
                                - tvoc
                                - batteryPercentage
                                - batteryVoltage
                                - chargingStatus
                                - tvocSensorCalibrated
                                - tvocSensorCountdownRemainingTime
                                - tvocSensorCountdownRemainingTimeTo
                                - tvocSensorCountdownTotalTime
                                - ens210SensorCalibrated
                                - ens210SensorCountdownRemainingTime
                                - ens210SensorCountdownRemainingTimeTo
                                - ens210SensorCountdownTotalTime
                              description: >-
                                Air sensor last metrics. If null, no metrics
                                were found
                          nullable: true
                          description: >-
                            Last metrics sent by device. Type of object matches
                            to device type. If null, no metrics were found
                        energyUsageForCurrentDay:
                          type: number
                          description: >-
                            Energy usage for current calendar day. Measured in
                            Wh
                        airSensorAdditionalItems:
                          type: object
                          properties:
                            tempColor:
                              type: number
                              description: >-
                                Temperature color, 1=red, 2=yellow, 3=green,
                                4=blue
                            humidityColor:
                              type: number
                              description: Humidity color, 1=red, 2=yellow, 3=green, 4=blue
                            tvocColor:
                              type: number
                              description: TVOC color, 1=red, 2=yellow, 3=green, 4=blue
                            eco2Color:
                              type: number
                              description: ECO2 color, 1=red, 2=yellow, 3=green, 4=blue
                            maxTvoc:
                              type: number
                              description: Maximum TVOC for the progress bar
                            changePeriod:
                              type: boolean
                              nullable: true
                              description: Is it possible to change the Period
                          required:
                            - tempColor
                            - humidityColor
                            - tvocColor
                            - eco2Color
                            - maxTvoc
                            - changePeriod
                          description: Air sensor additional items.
                          nullable: true
                      required:
                        - deviceId
                        - macAddress
                        - deviceType
                        - isConnected
                        - customName
                        - houseId
                        - roomId
                        - isArchived
                        - isEnabled
                        - controlSource
                        - createdAt
                        - deviceSettings
                        - lastMetrics
                        - energyUsageForCurrentDay
                        - airSensorAdditionalItems
                required:
                  - id
                  - name
                  - houseId
                  - roomComfortTemperature
                  - roomSleepTemperature
                  - roomAwayTemperature
                  - overrideModeType
                  - overrideEndDate
                  - roomProgramId
                  - roomControlSource
                  - mode
                  - createdAt
                  - roomProgramName
                  - activeModeFromWeeklyProgram
                  - averageTemperature
                  - vacationTemperature
                  - vacationStartDate
                  - vacationEndDate
                  - vacationModeType
                  - roomOnlineDevicesNumber
                  - roomOfflineDevicesNumber
                  - isRoomOnline
                  - roomTotalDevicesNumber
                  - roomOnlineSensorDevicesNumber
                  - roomMaxTemperature
                  - changeTemperature
                  - roomSensorId
                  - bindFlag
                  - tempFlag
                  - roomHeatStatus
                  - roomOpenWindowStatus
                  - roomHumidity
                  - roomPredictiveHeatStatus
                  - roomBusinessLockStatus
                  - roomChildLockStatus
                  - roomCoolingStatus
                  - roomEnergyUsage
                  - roomEco2
                  - roomTvoc
                  - roomChargingStatus
                  - tempStatus
                  - tempCountdownTotal
                  - tempCountdownRemains
                  - humidityStatus
                  - humidityCountdownTotal
                  - humidityCountdownRemains
                  - tvocStatus
                  - tvocCountdownTotal
                  - tvocCountdownRemains
                  - eco2Status
                  - eco2CountdownTotal
                  - eco2CountdownRemains
                  - roomTotalIndividualControlledDeviceIds
                  - roomTotalIndividualControlledDevices
                  - controlSource
                  - devices
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/HouseNotFoundError'
                  - $ref: '#/components/schemas/RoomNotFoundError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: getRoomInfo
      summary: Get room info
      description: Returns a room general metrics and a list of devices placed in this room
    parameters:
      - schema:
          type: string
          description: Room ID
          example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
        name: roomId
        in: path
        required: true
        description: Room ID
  /houses/{houseId}/devices:
    get:
      tags:
        - house
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    roomId:
                      type: string
                      description: Room ID
                      example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
                    roomName:
                      type: string
                      description: Room name
                      example: Living room
                    devices:
                      type: array
                      items:
                        type: object
                        properties:
                          deviceId:
                            type: string
                            format: uuid
                            description: Device ID
                          macAddress:
                            type: string
                            description: MAC address of the device
                            example: '00:00:00:00:00:00'
                          deviceType:
                            type: object
                            properties:
                              childType:
                                type: object
                                properties:
                                  id:
                                    type: string
                                    format: uuid
                                    description: Device Type ID
                                  name:
                                    type: string
                                    description: Name of type
                                    example: GL-Oil Heater G3
                                required:
                                  - id
                                  - name
                              parentType:
                                type: object
                                properties:
                                  id:
                                    type: string
                                    format: uuid
                                    description: Device Type ID
                                  name:
                                    type: string
                                    description: Name of type
                                    example: GL-Oil Heater G3
                                required:
                                  - id
                                  - name
                            required:
                              - childType
                              - parentType
                          isConnected:
                            type: boolean
                            description: Whether the device is connected to the network
                          customName:
                            type: string
                            nullable: true
                            description: Custom name of the device
                            example: My device
                          houseId:
                            type: string
                            description: House ID where the device is located
                            example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                            nullable: true
                          roomId:
                            type: string
                            description: Room ID where the device is located
                            example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
                            nullable: true
                          isArchived:
                            type: boolean
                            description: Whether the device is archived
                          isEnabled:
                            type: boolean
                            nullable: true
                            description: Whether the device is on/off
                          controlSource:
                            type: string
                            enum:
                              - mobile_api
                              - open_api
                              - tibber
                            description: >-
                              Control source of the device. By default it is
                              "mobile_api"
                            example: tibber
                          createdAt:
                            type: string
                            format: date-time
                            nullable: true
                            description: Device creation date
                          deviceSettings:
                            oneOf:
                              - type: object
                                properties:
                                  reported:
                                    type: object
                                    properties:
                                      operation_mode:
                                        type: string
                                        enum:
                                          - weekly_program
                                          - 'off'
                                          - independent_device
                                          - control_individually
                                        nullable: true
                                        description: "\n\"off\"  - all control disable\n\t\t\n\"weekly_program\" - follow the weekly program, changing temperature by display buttons changes the temperature of the current temperature mode\n\t\t\n\"independent_device\"  - follow the single set value, with timers enabled\n\t\t\n\"control_individually\"  - follow the single set value, but not use any timers or weekly program"
                                      override_weekly_program:
                                        type: object
                                        properties:
                                          value_type:
                                            type: string
                                            enum:
                                              - comfort
                                              - sleep
                                              - away
                                              - normal
                                              - always_heating
                                              - 'off'
                                            nullable: true
                                          ends_at:
                                            type: number
                                            nullable: true
                                            description: >-
                                              UTC timestamp in seconds when the
                                              override mode ends
                                        required:
                                          - value_type
                                          - ends_at
                                        nullable: true
                                        description: >-
                                          Overwrite the currently running weekly
                                          program with a temporary change of a
                                          specific temperature type (e.g.
                                          comfort). Time value of 0 means weekly
                                          program overwrite is not active anymore
                                          (disabled). Time should be a UTC
                                          timestamp when the program should end
                                      non_repeatable_timers:
                                        type: object
                                        properties:
                                          timers:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                value_type:
                                                  type: string
                                                  enum:
                                                    - normal
                                                    - 'off'
                                                    - always_heating
                                                timestamp:
                                                  type: number
                                              required:
                                                - value_type
                                                - timestamp
                                        required:
                                          - timers
                                        nullable: true
                                        description: >-
                                          A single pair represents time and value
                                          when the temperature mode should be
                                          changed. Time defines when to switch to
                                          a specific temperature type (set in the
                                          second field of the pair). Time is as
                                          local unix timestamp (so timezone is
                                          included), but in minutes, e.g. on
                                          17.05.2021 the time is 27020801. Allowed
                                          temperature types for timers: "normal",
                                          "off", "always_heating". Only used in
                                          independent mode
                                      temperature_normal:
                                        type: number
                                        minimum: 0
                                        maximum: 100
                                        nullable: true
                                        description: >-
                                          Set temperature value, used for
                                          operation modes "Independent device" and
                                          timers
                                      temperature_comfort:
                                        type: number
                                        minimum: 0
                                        maximum: 50
                                        nullable: true
                                      temperature_sleep:
                                        type: number
                                        minimum: 0
                                        maximum: 50
                                        nullable: true
                                      temperature_away:
                                        type: number
                                        minimum: 0
                                        maximum: 50
                                        nullable: true
                                      temperature_vacation:
                                        type: number
                                        minimum: 0
                                        maximum: 50
                                        nullable: true
                                      temperature_last_set:
                                        type: number
                                        minimum: 0
                                        maximum: 100
                                        nullable: true
                                        description: >-
                                          The temperature that the device is
                                          currently following
                                      vacation_mode:
                                        type: object
                                        properties:
                                          start_timestamp:
                                            type: number
                                            nullable: true
                                            description: >-
                                              UTC timestamp in minutes when the
                                              vacation mode starts
                                          end_timestamp:
                                            type: number
                                            nullable: true
                                            description: >-
                                              UTC timestamp in minutes when the
                                              vacation mode ends
                                          advanced:
                                            type: boolean
                                            nullable: true
                                            description: >-
                                              Advanced vacation mode - heaters will be
                                              regulated regarding "away" temperature
                                              by each room: false=OFF, true=ON
                                        required:
                                          - start_timestamp
                                          - end_timestamp
                                          - advanced
                                        nullable: true
                                      lock_status:
                                        type: string
                                        enum:
                                          - no_lock
                                          - child
                                          - commercial
                                        nullable: true
                                      predictive_heating_type:
                                        type: string
                                        enum:
                                          - 'off'
                                          - simple
                                          - advanced
                                        nullable: true
                                        description: "\n\"off\" - No predictive heating. Temperature will be change exactly with the weekly program timer\n\t\t\n\"simple\"  - Simple predictive heating. Temperature will be change before the timer, with a fixed time for each Celsius degree\n\t\t\n\"advanced\" - Advanced predictive heating. Temperature will be change before the timer, with a time based on the current room model. Model is estimated while running."
                                      open_window:
                                        type: object
                                        properties:
                                          drop_temperature_threshold:
                                            type: number
                                            description: >-
                                              Required temperature drop to trigger
                                              (activate) the open window
                                              functionality, in Celsius degrees
                                          drop_time_range:
                                            type: number
                                            description: >-
                                              Time range when a drop of temperature
                                              will be expected, in seconds
                                          increase_temperature_threshold:
                                            type: number
                                            description: >-
                                              Required temperature increase to
                                              deactivate open window functionality
                                          increase_time_range:
                                            type: number
                                            description: >-
                                              Time range when an increase of
                                              temperature will be expected, in seconds
                                          max_time:
                                            type: number
                                            description: >-
                                              Max time duration of the open window
                                              activeness
                                          enabled:
                                            type: boolean
                                            description: >-
                                              State of the open window functionality.
                                              True if open window functionality is
                                              enabled (that is whether the device can
                                              go into this mode while operating)
                                          activated:
                                            type: boolean
                                            description: >-
                                              Current state of the open window. True
                                              if open window is currently detected by
                                              device and is activated. You can
                                              deactivate currently detected open
                                              window by changing this value to false.
                                        required:
                                          - enabled
                                        nullable: true
                                      temperature_calibration_offset:
                                        type: number
                                        nullable: true
                                        description: Offset for ambient temperature
                                      display_unit:
                                        type: string
                                        enum:
                                          - celsius
                                          - fahrenheit
                                        nullable: true
                                        description: >-
                                          the temperature units: "celsius" or
                                          "fahrenheit" to set
                                      oil_heater_power_level:
                                        oneOf:
                                          - type: number
                                            enum:
                                              - 40
                                          - type: number
                                            enum:
                                              - 60
                                          - type: number
                                            enum:
                                              - 100
                                        nullable: true
                                        description: >-
                                          Set the max heating level in percentage
                                          of the nominal wattage. Oil heater
                                          allows setting 3 different max power
                                          settings (40, 60 or 100% of the power),
                                          done by selecting number of active
                                          heating elements.
                                      temperature_in_independent_mode:
                                        type: number
                                        minimum: 0
                                        maximum: 100
                                        nullable: true
                                        description: >-
                                          Change temperature in independent mode
                                          now. Use values 0.0 and 99.0 to set
                                          ALWAYS_ON and ALWAYS_OFF, respectively.
                                          Apart from changing value for some
                                          temperature type, in "Independent
                                          device" operation mode, one also needs
                                          to call this command to change the
                                          current temperature
                                      additional_socket_mode:
                                        type: string
                                        enum:
                                          - heating
                                          - cooling
                                          - always_on
                                          - always_off
                                        nullable: true
                                        description: "Command only for the socket heater, to select heating/cooling mode. ALWAYS_ON, ALWAYS_OFF modes just for convenience, as if these can be enabled also by other commands.\n\t\t"
                                      pid_parameters:
                                        type: object
                                        properties:
                                          kp:
                                            type: number
                                            description: The proportional part gain
                                          ki:
                                            type: number
                                            description: The integral part gain
                                          kd:
                                            type: number
                                            description: The derivative part gain
                                          kd_filter_N:
                                            type: number
                                            description: The derivative filter time coefficient
                                          windup_limit:
                                            type: number
                                            description: >-
                                              The windup limit for integral part from
                                              0 to 100
                                        required:
                                          - kp
                                          - ki
                                          - kd
                                          - kd_filter_N
                                          - windup_limit
                                        nullable: true
                                      max_heater_power:
                                        type: number
                                        nullable: true
                                        description: Set max heater power in Watts
                                      limited_heating_power:
                                        type: number
                                        minimum: 10
                                        maximum: 100
                                        nullable: true
                                        description: >-
                                          Only for heaters with triac
                                          (panel/storage). Allows to limit the
                                          heating percentage between 10 and 100
                                          percent.
                                      hysteresis:
                                        type: object
                                        properties:
                                          upper:
                                            type: number
                                            description: >-
                                              Set hysteresis parameters. Setting
                                              hysteresis parameters will change
                                              current regulator type to hysteresis.
                                              Upper offset (set temp + this -> stop
                                              heat)
                                          lower:
                                            type: number
                                            description: >-
                                              Set hysteresis parameters. Setting
                                              hysteresis parameters will change
                                              current regulator type to hysteresis.
                                              Lower offset (set temp - this -> start
                                              heat)
                                        required:
                                          - upper
                                          - lower
                                        nullable: true
                                      regulator_type:
                                        type: string
                                        enum:
                                          - pid
                                          - hysteresis_or_slow_pid
                                          - unknown
                                        nullable: true
                                      timezone:
                                        type: string
                                        nullable: true
                                      calibration_target_ambient_temperature:
                                        type: number
                                        nullable: true
                                        description: >-
                                          Target for calibrating ambient
                                          temperature for heaters gen.2
                                      fan_state:
                                        type: string
                                        enum:
                                          - 'on'
                                          - 'off'
                                        nullable: true
                                        description: Fan state of convection heaters gen.2
                                      weekly_program:
                                        type: object
                                        properties:
                                          timers:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                value_type:
                                                  type: string
                                                  enum:
                                                    - comfort
                                                    - sleep
                                                    - away
                                                    - normal
                                                    - always_heating
                                                    - 'off'
                                                timestamp:
                                                  type: number
                                              required:
                                                - value_type
                                                - timestamp
                                        required:
                                          - timers
                                        nullable: true
                                        description: "The weekly program is a list of repeating pairs of values. A single pair represents time and value when the temperature mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific temperature type (set in the second field of the pair). Needs to be ordered ascending by time.\n\t\t\nFor mode \"independent device\" use only temperature types OFF and NORMAL, to avoid issues with changing the temperature by buttons from the heater"
                                    required:
                                      - operation_mode
                                      - override_weekly_program
                                      - non_repeatable_timers
                                      - temperature_normal
                                      - temperature_comfort
                                      - temperature_sleep
                                      - temperature_away
                                      - temperature_vacation
                                      - vacation_mode
                                      - lock_status
                                      - predictive_heating_type
                                      - open_window
                                      - temperature_calibration_offset
                                      - display_unit
                                      - oil_heater_power_level
                                      - temperature_in_independent_mode
                                      - additional_socket_mode
                                      - pid_parameters
                                      - max_heater_power
                                      - limited_heating_power
                                      - hysteresis
                                      - regulator_type
                                      - timezone
                                      - calibration_target_ambient_temperature
                                      - fan_state
                                      - weekly_program
                                    nullable: true
                                  desired:
                                    type: object
                                    properties:
                                      operation_mode:
                                        type: string
                                        enum:
                                          - weekly_program
                                          - 'off'
                                          - independent_device
                                          - control_individually
                                        nullable: true
                                        description: "\n\"off\"  - all control disable\n\t\t\n\"weekly_program\" - follow the weekly program, changing temperature by display buttons changes the temperature of the current temperature mode\n\t\t\n\"independent_device\"  - follow the single set value, with timers enabled\n\t\t\n\"control_individually\"  - follow the single set value, but not use any timers or weekly program"
                                      override_weekly_program:
                                        type: object
                                        properties:
                                          value_type:
                                            type: string
                                            enum:
                                              - comfort
                                              - sleep
                                              - away
                                              - normal
                                              - always_heating
                                              - 'off'
                                            nullable: true
                                          ends_at:
                                            type: number
                                            nullable: true
                                            description: >-
                                              UTC timestamp in seconds when the
                                              override mode ends
                                        required:
                                          - value_type
                                          - ends_at
                                        nullable: true
                                        description: >-
                                          Overwrite the currently running weekly
                                          program with a temporary change of a
                                          specific temperature type (e.g.
                                          comfort). Time value of 0 means weekly
                                          program overwrite is not active anymore
                                          (disabled). Time should be a UTC
                                          timestamp when the program should end
                                      non_repeatable_timers:
                                        type: object
                                        properties:
                                          timers:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                value_type:
                                                  type: string
                                                  enum:
                                                    - normal
                                                    - 'off'
                                                    - always_heating
                                                timestamp:
                                                  type: number
                                              required:
                                                - value_type
                                                - timestamp
                                        required:
                                          - timers
                                        nullable: true
                                        description: >-
                                          A single pair represents time and value
                                          when the temperature mode should be
                                          changed. Time defines when to switch to
                                          a specific temperature type (set in the
                                          second field of the pair). Time is as
                                          local unix timestamp (so timezone is
                                          included), but in minutes, e.g. on
                                          17.05.2021 the time is 27020801. Allowed
                                          temperature types for timers: "normal",
                                          "off", "always_heating". Only used in
                                          independent mode
                                      temperature_normal:
                                        type: number
                                        minimum: 0
                                        maximum: 100
                                        nullable: true
                                        description: >-
                                          Set temperature value, used for
                                          operation modes "Independent device" and
                                          timers
                                      temperature_comfort:
                                        type: number
                                        minimum: 0
                                        maximum: 50
                                        nullable: true
                                      temperature_sleep:
                                        type: number
                                        minimum: 0
                                        maximum: 50
                                        nullable: true
                                      temperature_away:
                                        type: number
                                        minimum: 0
                                        maximum: 50
                                        nullable: true
                                      temperature_vacation:
                                        type: number
                                        minimum: 0
                                        maximum: 50
                                        nullable: true
                                      temperature_last_set:
                                        type: number
                                        minimum: 0
                                        maximum: 100
                                        nullable: true
                                        description: >-
                                          The temperature that the device is
                                          currently following
                                      vacation_mode:
                                        type: object
                                        properties:
                                          start_timestamp:
                                            type: number
                                            nullable: true
                                            description: >-
                                              UTC timestamp in minutes when the
                                              vacation mode starts
                                          end_timestamp:
                                            type: number
                                            nullable: true
                                            description: >-
                                              UTC timestamp in minutes when the
                                              vacation mode ends
                                          advanced:
                                            type: boolean
                                            nullable: true
                                            description: >-
                                              Advanced vacation mode - heaters will be
                                              regulated regarding "away" temperature
                                              by each room: false=OFF, true=ON
                                        required:
                                          - start_timestamp
                                          - end_timestamp
                                          - advanced
                                        nullable: true
                                      lock_status:
                                        type: string
                                        enum:
                                          - no_lock
                                          - child
                                          - commercial
                                        nullable: true
                                      predictive_heating_type:
                                        type: string
                                        enum:
                                          - 'off'
                                          - simple
                                          - advanced
                                        nullable: true
                                        description: "\n\"off\" - No predictive heating. Temperature will be change exactly with the weekly program timer\n\t\t\n\"simple\"  - Simple predictive heating. Temperature will be change before the timer, with a fixed time for each Celsius degree\n\t\t\n\"advanced\" - Advanced predictive heating. Temperature will be change before the timer, with a time based on the current room model. Model is estimated while running."
                                      open_window:
                                        type: object
                                        properties:
                                          drop_temperature_threshold:
                                            type: number
                                            description: >-
                                              Required temperature drop to trigger
                                              (activate) the open window
                                              functionality, in Celsius degrees
                                          drop_time_range:
                                            type: number
                                            description: >-
                                              Time range when a drop of temperature
                                              will be expected, in seconds
                                          increase_temperature_threshold:
                                            type: number
                                            description: >-
                                              Required temperature increase to
                                              deactivate open window functionality
                                          increase_time_range:
                                            type: number
                                            description: >-
                                              Time range when an increase of
                                              temperature will be expected, in seconds
                                          max_time:
                                            type: number
                                            description: >-
                                              Max time duration of the open window
                                              activeness
                                          enabled:
                                            type: boolean
                                            description: >-
                                              State of the open window functionality.
                                              True if open window functionality is
                                              enabled (that is whether the device can
                                              go into this mode while operating)
                                          activated:
                                            type: boolean
                                            description: >-
                                              Current state of the open window. True
                                              if open window is currently detected by
                                              device and is activated. You can
                                              deactivate currently detected open
                                              window by changing this value to false.
                                        required:
                                          - enabled
                                        nullable: true
                                      temperature_calibration_offset:
                                        type: number
                                        nullable: true
                                        description: Offset for ambient temperature
                                      display_unit:
                                        type: string
                                        enum:
                                          - celsius
                                          - fahrenheit
                                        nullable: true
                                        description: >-
                                          the temperature units: "celsius" or
                                          "fahrenheit" to set
                                      oil_heater_power_level:
                                        oneOf:
                                          - type: number
                                            enum:
                                              - 40
                                          - type: number
                                            enum:
                                              - 60
                                          - type: number
                                            enum:
                                              - 100
                                        nullable: true
                                        description: >-
                                          Set the max heating level in percentage
                                          of the nominal wattage. Oil heater
                                          allows setting 3 different max power
                                          settings (40, 60 or 100% of the power),
                                          done by selecting number of active
                                          heating elements.
                                      temperature_in_independent_mode:
                                        type: number
                                        minimum: 0
                                        maximum: 100
                                        nullable: true
                                        description: >-
                                          Change temperature in independent mode
                                          now. Use values 0.0 and 99.0 to set
                                          ALWAYS_ON and ALWAYS_OFF, respectively.
                                          Apart from changing value for some
                                          temperature type, in "Independent
                                          device" operation mode, one also needs
                                          to call this command to change the
                                          current temperature
                                      additional_socket_mode:
                                        type: string
                                        enum:
                                          - heating
                                          - cooling
                                          - always_on
                                          - always_off
                                        nullable: true
                                        description: "Command only for the socket heater, to select heating/cooling mode. ALWAYS_ON, ALWAYS_OFF modes just for convenience, as if these can be enabled also by other commands.\n\t\t"
                                      pid_parameters:
                                        type: object
                                        properties:
                                          kp:
                                            type: number
                                            description: The proportional part gain
                                          ki:
                                            type: number
                                            description: The integral part gain
                                          kd:
                                            type: number
                                            description: The derivative part gain
                                          kd_filter_N:
                                            type: number
                                            description: The derivative filter time coefficient
                                          windup_limit:
                                            type: number
                                            description: >-
                                              The windup limit for integral part from
                                              0 to 100
                                        required:
                                          - kp
                                          - ki
                                          - kd
                                          - kd_filter_N
                                          - windup_limit
                                        nullable: true
                                      max_heater_power:
                                        type: number
                                        nullable: true
                                        description: Set max heater power in Watts
                                      limited_heating_power:
                                        type: number
                                        minimum: 10
                                        maximum: 100
                                        nullable: true
                                        description: >-
                                          Only for heaters with triac
                                          (panel/storage). Allows to limit the
                                          heating percentage between 10 and 100
                                          percent.
                                      hysteresis:
                                        type: object
                                        properties:
                                          upper:
                                            type: number
                                            description: >-
                                              Set hysteresis parameters. Setting
                                              hysteresis parameters will change
                                              current regulator type to hysteresis.
                                              Upper offset (set temp + this -> stop
                                              heat)
                                          lower:
                                            type: number
                                            description: >-
                                              Set hysteresis parameters. Setting
                                              hysteresis parameters will change
                                              current regulator type to hysteresis.
                                              Lower offset (set temp - this -> start
                                              heat)
                                        required:
                                          - upper
                                          - lower
                                        nullable: true
                                      regulator_type:
                                        type: string
                                        enum:
                                          - pid
                                          - hysteresis_or_slow_pid
                                          - unknown
                                        nullable: true
                                      timezone:
                                        type: string
                                        nullable: true
                                      calibration_target_ambient_temperature:
                                        type: number
                                        nullable: true
                                        description: >-
                                          Target for calibrating ambient
                                          temperature for heaters gen.2
                                      fan_state:
                                        type: string
                                        enum:
                                          - 'on'
                                          - 'off'
                                        nullable: true
                                        description: Fan state of convection heaters gen.2
                                      weekly_program:
                                        type: object
                                        properties:
                                          timers:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                value_type:
                                                  type: string
                                                  enum:
                                                    - comfort
                                                    - sleep
                                                    - away
                                                    - normal
                                                    - always_heating
                                                    - 'off'
                                                timestamp:
                                                  type: number
                                              required:
                                                - value_type
                                                - timestamp
                                        required:
                                          - timers
                                        nullable: true
                                        description: "The weekly program is a list of repeating pairs of values. A single pair represents time and value when the temperature mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific temperature type (set in the second field of the pair). Needs to be ordered ascending by time.\n\t\t\nFor mode \"independent device\" use only temperature types OFF and NORMAL, to avoid issues with changing the temperature by buttons from the heater"
                                    required:
                                      - operation_mode
                                      - override_weekly_program
                                      - non_repeatable_timers
                                      - temperature_normal
                                      - temperature_comfort
                                      - temperature_sleep
                                      - temperature_away
                                      - temperature_vacation
                                      - vacation_mode
                                      - lock_status
                                      - predictive_heating_type
                                      - open_window
                                      - temperature_calibration_offset
                                      - display_unit
                                      - oil_heater_power_level
                                      - temperature_in_independent_mode
                                      - additional_socket_mode
                                      - pid_parameters
                                      - max_heater_power
                                      - limited_heating_power
                                      - hysteresis
                                      - regulator_type
                                      - timezone
                                      - calibration_target_ambient_temperature
                                      - fan_state
                                      - weekly_program
                                    nullable: true
                                  delta:
                                    type: object
                                    properties:
                                      operation_mode:
                                        type: string
                                        enum:
                                          - weekly_program
                                          - 'off'
                                          - independent_device
                                          - control_individually
                                        nullable: true
                                        description: "\n\"off\"  - all control disable\n\t\t\n\"weekly_program\" - follow the weekly program, changing temperature by display buttons changes the temperature of the current temperature mode\n\t\t\n\"independent_device\"  - follow the single set value, with timers enabled\n\t\t\n\"control_individually\"  - follow the single set value, but not use any timers or weekly program"
                                      override_weekly_program:
                                        type: object
                                        properties:
                                          value_type:
                                            type: string
                                            enum:
                                              - comfort
                                              - sleep
                                              - away
                                              - normal
                                              - always_heating
                                              - 'off'
                                            nullable: true
                                          ends_at:
                                            type: number
                                            nullable: true
                                            description: >-
                                              UTC timestamp in seconds when the
                                              override mode ends
                                        required:
                                          - value_type
                                          - ends_at
                                        nullable: true
                                        description: >-
                                          Overwrite the currently running weekly
                                          program with a temporary change of a
                                          specific temperature type (e.g.
                                          comfort). Time value of 0 means weekly
                                          program overwrite is not active anymore
                                          (disabled). Time should be a UTC
                                          timestamp when the program should end
                                      non_repeatable_timers:
                                        type: object
                                        properties:
                                          timers:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                value_type:
                                                  type: string
                                                  enum:
                                                    - normal
                                                    - 'off'
                                                    - always_heating
                                                timestamp:
                                                  type: number
                                              required:
                                                - value_type
                                                - timestamp
                                        required:
                                          - timers
                                        nullable: true
                                        description: >-
                                          A single pair represents time and value
                                          when the temperature mode should be
                                          changed. Time defines when to switch to
                                          a specific temperature type (set in the
                                          second field of the pair). Time is as
                                          local unix timestamp (so timezone is
                                          included), but in minutes, e.g. on
                                          17.05.2021 the time is 27020801. Allowed
                                          temperature types for timers: "normal",
                                          "off", "always_heating". Only used in
                                          independent mode
                                      temperature_normal:
                                        type: number
                                        minimum: 0
                                        maximum: 100
                                        nullable: true
                                        description: >-
                                          Set temperature value, used for
                                          operation modes "Independent device" and
                                          timers
                                      temperature_comfort:
                                        type: number
                                        minimum: 0
                                        maximum: 50
                                        nullable: true
                                      temperature_sleep:
                                        type: number
                                        minimum: 0
                                        maximum: 50
                                        nullable: true
                                      temperature_away:
                                        type: number
                                        minimum: 0
                                        maximum: 50
                                        nullable: true
                                      temperature_vacation:
                                        type: number
                                        minimum: 0
                                        maximum: 50
                                        nullable: true
                                      temperature_last_set:
                                        type: number
                                        minimum: 0
                                        maximum: 100
                                        nullable: true
                                        description: >-
                                          The temperature that the device is
                                          currently following
                                      vacation_mode:
                                        type: object
                                        properties:
                                          start_timestamp:
                                            type: number
                                            nullable: true
                                            description: >-
                                              UTC timestamp in minutes when the
                                              vacation mode starts
                                          end_timestamp:
                                            type: number
                                            nullable: true
                                            description: >-
                                              UTC timestamp in minutes when the
                                              vacation mode ends
                                          advanced:
                                            type: boolean
                                            nullable: true
                                            description: >-
                                              Advanced vacation mode - heaters will be
                                              regulated regarding "away" temperature
                                              by each room: false=OFF, true=ON
                                        nullable: true
                                      lock_status:
                                        type: string
                                        enum:
                                          - no_lock
                                          - child
                                          - commercial
                                        nullable: true
                                      predictive_heating_type:
                                        type: string
                                        enum:
                                          - 'off'
                                          - simple
                                          - advanced
                                        nullable: true
                                        description: "\n\"off\" - No predictive heating. Temperature will be change exactly with the weekly program timer\n\t\t\n\"simple\"  - Simple predictive heating. Temperature will be change before the timer, with a fixed time for each Celsius degree\n\t\t\n\"advanced\" - Advanced predictive heating. Temperature will be change before the timer, with a time based on the current room model. Model is estimated while running."
                                      open_window:
                                        type: object
                                        properties:
                                          drop_temperature_threshold:
                                            type: number
                                            description: >-
                                              Required temperature drop to trigger
                                              (activate) the open window
                                              functionality, in Celsius degrees
                                          drop_time_range:
                                            type: number
                                            description: >-
                                              Time range when a drop of temperature
                                              will be expected, in seconds
                                          increase_temperature_threshold:
                                            type: number
                                            description: >-
                                              Required temperature increase to
                                              deactivate open window functionality
                                          increase_time_range:
                                            type: number
                                            description: >-
                                              Time range when an increase of
                                              temperature will be expected, in seconds
                                          max_time:
                                            type: number
                                            description: >-
                                              Max time duration of the open window
                                              activeness
                                          enabled:
                                            type: boolean
                                            description: >-
                                              State of the open window functionality.
                                              True if open window functionality is
                                              enabled (that is whether the device can
                                              go into this mode while operating)
                                          activated:
                                            type: boolean
                                            description: >-
                                              Current state of the open window. True
                                              if open window is currently detected by
                                              device and is activated. You can
                                              deactivate currently detected open
                                              window by changing this value to false.
                                        nullable: true
                                      temperature_calibration_offset:
                                        type: number
                                        nullable: true
                                        description: Offset for ambient temperature
                                      display_unit:
                                        type: string
                                        enum:
                                          - celsius
                                          - fahrenheit
                                        nullable: true
                                        description: >-
                                          the temperature units: "celsius" or
                                          "fahrenheit" to set
                                      oil_heater_power_level:
                                        oneOf:
                                          - type: number
                                            enum:
                                              - 40
                                          - type: number
                                            enum:
                                              - 60
                                          - type: number
                                            enum:
                                              - 100
                                        nullable: true
                                        description: >-
                                          Set the max heating level in percentage
                                          of the nominal wattage. Oil heater
                                          allows setting 3 different max power
                                          settings (40, 60 or 100% of the power),
                                          done by selecting number of active
                                          heating elements.
                                      temperature_in_independent_mode:
                                        type: number
                                        minimum: 0
                                        maximum: 100
                                        nullable: true
                                        description: >-
                                          Change temperature in independent mode
                                          now. Use values 0.0 and 99.0 to set
                                          ALWAYS_ON and ALWAYS_OFF, respectively.
                                          Apart from changing value for some
                                          temperature type, in "Independent
                                          device" operation mode, one also needs
                                          to call this command to change the
                                          current temperature
                                      additional_socket_mode:
                                        type: string
                                        enum:
                                          - heating
                                          - cooling
                                          - always_on
                                          - always_off
                                        nullable: true
                                        description: "Command only for the socket heater, to select heating/cooling mode. ALWAYS_ON, ALWAYS_OFF modes just for convenience, as if these can be enabled also by other commands.\n\t\t"
                                      pid_parameters:
                                        type: object
                                        properties:
                                          kp:
                                            type: number
                                            description: The proportional part gain
                                          ki:
                                            type: number
                                            description: The integral part gain
                                          kd:
                                            type: number
                                            description: The derivative part gain
                                          kd_filter_N:
                                            type: number
                                            description: The derivative filter time coefficient
                                          windup_limit:
                                            type: number
                                            description: >-
                                              The windup limit for integral part from
                                              0 to 100
                                        nullable: true
                                      max_heater_power:
                                        type: number
                                        nullable: true
                                        description: Set max heater power in Watts
                                      limited_heating_power:
                                        type: number
                                        minimum: 10
                                        maximum: 100
                                        nullable: true
                                        description: >-
                                          Only for heaters with triac
                                          (panel/storage). Allows to limit the
                                          heating percentage between 10 and 100
                                          percent.
                                      hysteresis:
                                        type: object
                                        properties:
                                          upper:
                                            type: number
                                            description: >-
                                              Set hysteresis parameters. Setting
                                              hysteresis parameters will change
                                              current regulator type to hysteresis.
                                              Upper offset (set temp + this -> stop
                                              heat)
                                          lower:
                                            type: number
                                            description: >-
                                              Set hysteresis parameters. Setting
                                              hysteresis parameters will change
                                              current regulator type to hysteresis.
                                              Lower offset (set temp - this -> start
                                              heat)
                                        nullable: true
                                      regulator_type:
                                        type: string
                                        enum:
                                          - pid
                                          - hysteresis_or_slow_pid
                                          - unknown
                                        nullable: true
                                      timezone:
                                        type: string
                                        nullable: true
                                      calibration_target_ambient_temperature:
                                        type: number
                                        nullable: true
                                        description: >-
                                          Target for calibrating ambient
                                          temperature for heaters gen.2
                                      fan_state:
                                        type: string
                                        enum:
                                          - 'on'
                                          - 'off'
                                        nullable: true
                                        description: Fan state of convection heaters gen.2
                                      weekly_program:
                                        type: object
                                        properties:
                                          timers:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                value_type:
                                                  type: string
                                                  enum:
                                                    - comfort
                                                    - sleep
                                                    - away
                                                    - normal
                                                    - always_heating
                                                    - 'off'
                                                timestamp:
                                                  type: number
                                              required:
                                                - value_type
                                                - timestamp
                                        required:
                                          - timers
                                        nullable: true
                                        description: "The weekly program is a list of repeating pairs of values. A single pair represents time and value when the temperature mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific temperature type (set in the second field of the pair). Needs to be ordered ascending by time.\n\t\t\nFor mode \"independent device\" use only temperature types OFF and NORMAL, to avoid issues with changing the temperature by buttons from the heater"
                                    nullable: true
                                required:
                                  - reported
                                  - desired
                                  - delta
                                description: Heater or Socket AWS IoT Thing shadow object
                              - type: object
                                properties:
                                  reported:
                                    type: object
                                    properties:
                                      lock_status:
                                        type: string
                                        enum:
                                          - no_lock
                                          - child
                                        nullable: true
                                      fan_speed_mode:
                                        type: string
                                        enum:
                                          - HARD_OFF
                                          - SOFT_OFF
                                          - AUTO
                                          - SLEEP
                                          - BOOST
                                          - TURN_ON
                                          - MANUAL
                                          - MANUAL_LEVEL1
                                          - MANUAL_LEVEL2
                                          - MANUAL_LEVEL3
                                          - MANUAL_LEVEL4
                                          - MANUAL_LEVEL5
                                          - MANUAL_LEVEL6
                                          - MANUAL_LEVEL7
                                          - MANUAL_LEVEL8
                                        nullable: true
                                        description: "\n\t\t\t\nHARD_OFF - disable fan, stop to gather data from sensors, disconnect from wifi, can be disabled only via \ndisplay\n\t\t\t\nSOFT_OFF - disable fan but device is still connected to the wifi and gather data from sensors\n\t\t\t\nAUTO - device automatically determine current fan speed level based on the measurements from sensors\n\t\t\t\nSLEEP - lower display brightness, low fan speed\n\t\t\t\nBOOST - maximum available fan speed\n\t\t\t\nTURN_ON - disable Soft/Hard OFF and enable mode which was before OFF\n\t\t\t\nMANUAL - switch to manual mode with level as for Auto Mode\n\t\t\t\nMANUAL_LEVEL1\n\t\t\t\nMANUAL_LEVEL2\n\t\t\t\nMANUAL_LEVEL3\n\t\t\t\nMANUAL_LEVEL4\n\t\t\t\nMANUAL_LEVEL5\n\t\t\t\nMANUAL_LEVEL6\n\t\t\t\nMANUAL_LEVEL7\n\t\t\t\nMANUAL_LEVEL8 (only for AP Large)"
                                      repeatable_timers:
                                        type: object
                                        properties:
                                          timers:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                fan_speed_mode:
                                                  type: string
                                                  enum:
                                                    - HARD_OFF
                                                    - SOFT_OFF
                                                    - AUTO
                                                    - SLEEP
                                                    - BOOST
                                                    - TURN_ON
                                                    - MANUAL
                                                    - MANUAL_LEVEL1
                                                    - MANUAL_LEVEL2
                                                    - MANUAL_LEVEL3
                                                    - MANUAL_LEVEL4
                                                    - MANUAL_LEVEL5
                                                    - MANUAL_LEVEL6
                                                    - MANUAL_LEVEL7
                                                    - MANUAL_LEVEL8
                                                timestamp:
                                                  type: number
                                              required:
                                                - fan_speed_mode
                                                - timestamp
                                        required:
                                          - timers
                                        nullable: true
                                        description: "The repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                                      non_repeatable_timers:
                                        type: object
                                        properties:
                                          timers:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                fan_speed_mode:
                                                  type: string
                                                  enum:
                                                    - HARD_OFF
                                                    - SOFT_OFF
                                                    - AUTO
                                                    - SLEEP
                                                    - BOOST
                                                    - TURN_ON
                                                    - MANUAL
                                                    - MANUAL_LEVEL1
                                                    - MANUAL_LEVEL2
                                                    - MANUAL_LEVEL3
                                                    - MANUAL_LEVEL4
                                                    - MANUAL_LEVEL5
                                                    - MANUAL_LEVEL6
                                                    - MANUAL_LEVEL7
                                                    - MANUAL_LEVEL8
                                                timestamp:
                                                  type: number
                                              required:
                                                - fan_speed_mode
                                                - timestamp
                                        required:
                                          - timers
                                        nullable: true
                                        description: "The non-repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is as local unix timestamp (so timezone is included), but in minutes, e.g. on 17.05.2021 the time is 27020801. when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                                      aiq_displaying_mode:
                                        type: boolean
                                        nullable: true
                                        description: "false - display AiQ Lights in Inactivity Mode only if red (default option)\n\t\t\t\t\t\ntrue - always display AiQ Lights in Inactivity Mode"
                                      sensor_type:
                                        type: string
                                        enum:
                                          - particles
                                          - TVOC
                                          - both
                                        nullable: true
                                      filter_state:
                                        type: string
                                        enum:
                                          - OK
                                          - MEDIUM_DIRTY
                                          - DIRTY
                                          - MUST_BE_CHANGED
                                        nullable: true
                                      is_particle_sensor_faulty:
                                        type: boolean
                                        nullable: true
                                      is_temp_sensor_faulty:
                                        type: boolean
                                        nullable: true
                                      is_tvoc_sensor_faulty:
                                        type: boolean
                                        nullable: true
                                      timezone:
                                        type: string
                                        nullable: true
                                      display_brightness:
                                        type: number
                                        nullable: true
                                      particles_trigger_values_threshold:
                                        type: object
                                        properties:
                                          particles_trigger_values_threshold_for_level1:
                                            type: number
                                          particles_trigger_values_threshold_for_level2:
                                            type: number
                                          particles_trigger_values_threshold_for_level3:
                                            type: number
                                          particles_trigger_values_threshold_for_level4:
                                            type: number
                                          particles_trigger_values_threshold_for_level5:
                                            type: number
                                          particles_trigger_values_threshold_for_level6:
                                            type: number
                                          particles_trigger_values_threshold_for_level7:
                                            type: number
                                        nullable: true
                                      tvoc_trigger_values_threshold:
                                        type: object
                                        properties:
                                          tvoc_trigger_values_threshold_for_level1:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level2:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level3:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level4:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level5:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level6:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level7:
                                            type: number
                                        nullable: true
                                      auto_mode_fan_rpm:
                                        type: object
                                        properties:
                                          auto_mode_fan_rpm_level1:
                                            type: number
                                          auto_mode_fan_rpm_level2:
                                            type: number
                                          auto_mode_fan_rpm_level3:
                                            type: number
                                          auto_mode_fan_rpm_level4:
                                            type: number
                                          auto_mode_fan_rpm_level5:
                                            type: number
                                          auto_mode_fan_rpm_level6:
                                            type: number
                                          auto_mode_fan_rpm_level7:
                                            type: number
                                          auto_mode_fan_rpm_level8:
                                            type: number
                                        nullable: true
                                      manual_sleep_boost_fan_rpm:
                                        type: object
                                        properties:
                                          manual_mode_fan_rpm_level1:
                                            type: number
                                          manual_mode_fan_rpm_level2:
                                            type: number
                                          manual_mode_fan_rpm_level3:
                                            type: number
                                          manual_mode_fan_rpm_level4:
                                            type: number
                                          manual_mode_fan_rpm_level5:
                                            type: number
                                          manual_mode_fan_rpm_level6:
                                            type: number
                                          manual_mode_fan_rpm_level7:
                                            type: number
                                          manual_mode_fan_rpm_level8:
                                            type: number
                                          boost_mode_fan_rpm:
                                            type: number
                                          sleep_mode_fan_rpm:
                                            type: number
                                        nullable: true
                                      auto_mode_fan_levels_states:
                                        type: object
                                        properties:
                                          auto_mode_fan_state_level1:
                                            type: boolean
                                          auto_mode_fan_state_level2:
                                            type: boolean
                                          auto_mode_fan_state_level3:
                                            type: boolean
                                          auto_mode_fan_state_level4:
                                            type: boolean
                                          auto_mode_fan_state_level5:
                                            type: boolean
                                          auto_mode_fan_state_level6:
                                            type: boolean
                                          auto_mode_fan_state_level7:
                                            type: boolean
                                          auto_mode_fan_state_level8:
                                            type: boolean
                                        nullable: true
                                    required:
                                      - lock_status
                                      - fan_speed_mode
                                      - repeatable_timers
                                      - non_repeatable_timers
                                      - aiq_displaying_mode
                                      - filter_state
                                      - is_particle_sensor_faulty
                                      - is_temp_sensor_faulty
                                      - is_tvoc_sensor_faulty
                                      - timezone
                                      - display_brightness
                                      - particles_trigger_values_threshold
                                      - auto_mode_fan_rpm
                                      - manual_sleep_boost_fan_rpm
                                      - auto_mode_fan_levels_states
                                    nullable: true
                                  desired:
                                    type: object
                                    properties:
                                      lock_status:
                                        type: string
                                        enum:
                                          - no_lock
                                          - child
                                        nullable: true
                                      fan_speed_mode:
                                        type: string
                                        enum:
                                          - HARD_OFF
                                          - SOFT_OFF
                                          - AUTO
                                          - SLEEP
                                          - BOOST
                                          - TURN_ON
                                          - MANUAL
                                          - MANUAL_LEVEL1
                                          - MANUAL_LEVEL2
                                          - MANUAL_LEVEL3
                                          - MANUAL_LEVEL4
                                          - MANUAL_LEVEL5
                                          - MANUAL_LEVEL6
                                          - MANUAL_LEVEL7
                                          - MANUAL_LEVEL8
                                        nullable: true
                                        description: "\n\t\t\t\nHARD_OFF - disable fan, stop to gather data from sensors, disconnect from wifi, can be disabled only via \ndisplay\n\t\t\t\nSOFT_OFF - disable fan but device is still connected to the wifi and gather data from sensors\n\t\t\t\nAUTO - device automatically determine current fan speed level based on the measurements from sensors\n\t\t\t\nSLEEP - lower display brightness, low fan speed\n\t\t\t\nBOOST - maximum available fan speed\n\t\t\t\nTURN_ON - disable Soft/Hard OFF and enable mode which was before OFF\n\t\t\t\nMANUAL - switch to manual mode with level as for Auto Mode\n\t\t\t\nMANUAL_LEVEL1\n\t\t\t\nMANUAL_LEVEL2\n\t\t\t\nMANUAL_LEVEL3\n\t\t\t\nMANUAL_LEVEL4\n\t\t\t\nMANUAL_LEVEL5\n\t\t\t\nMANUAL_LEVEL6\n\t\t\t\nMANUAL_LEVEL7\n\t\t\t\nMANUAL_LEVEL8 (only for AP Large)"
                                      repeatable_timers:
                                        type: object
                                        properties:
                                          timers:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                fan_speed_mode:
                                                  type: string
                                                  enum:
                                                    - HARD_OFF
                                                    - SOFT_OFF
                                                    - AUTO
                                                    - SLEEP
                                                    - BOOST
                                                    - TURN_ON
                                                    - MANUAL
                                                    - MANUAL_LEVEL1
                                                    - MANUAL_LEVEL2
                                                    - MANUAL_LEVEL3
                                                    - MANUAL_LEVEL4
                                                    - MANUAL_LEVEL5
                                                    - MANUAL_LEVEL6
                                                    - MANUAL_LEVEL7
                                                    - MANUAL_LEVEL8
                                                timestamp:
                                                  type: number
                                              required:
                                                - fan_speed_mode
                                                - timestamp
                                        required:
                                          - timers
                                        nullable: true
                                        description: "The repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                                      non_repeatable_timers:
                                        type: object
                                        properties:
                                          timers:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                fan_speed_mode:
                                                  type: string
                                                  enum:
                                                    - HARD_OFF
                                                    - SOFT_OFF
                                                    - AUTO
                                                    - SLEEP
                                                    - BOOST
                                                    - TURN_ON
                                                    - MANUAL
                                                    - MANUAL_LEVEL1
                                                    - MANUAL_LEVEL2
                                                    - MANUAL_LEVEL3
                                                    - MANUAL_LEVEL4
                                                    - MANUAL_LEVEL5
                                                    - MANUAL_LEVEL6
                                                    - MANUAL_LEVEL7
                                                    - MANUAL_LEVEL8
                                                timestamp:
                                                  type: number
                                              required:
                                                - fan_speed_mode
                                                - timestamp
                                        required:
                                          - timers
                                        nullable: true
                                        description: "The non-repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is as local unix timestamp (so timezone is included), but in minutes, e.g. on 17.05.2021 the time is 27020801. when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                                      aiq_displaying_mode:
                                        type: boolean
                                        nullable: true
                                        description: "false - display AiQ Lights in Inactivity Mode only if red (default option)\n\t\t\t\t\t\ntrue - always display AiQ Lights in Inactivity Mode"
                                      sensor_type:
                                        type: string
                                        enum:
                                          - particles
                                          - TVOC
                                          - both
                                        nullable: true
                                      filter_state:
                                        type: string
                                        enum:
                                          - OK
                                          - MEDIUM_DIRTY
                                          - DIRTY
                                          - MUST_BE_CHANGED
                                        nullable: true
                                      is_particle_sensor_faulty:
                                        type: boolean
                                        nullable: true
                                      is_temp_sensor_faulty:
                                        type: boolean
                                        nullable: true
                                      is_tvoc_sensor_faulty:
                                        type: boolean
                                        nullable: true
                                      timezone:
                                        type: string
                                        nullable: true
                                      display_brightness:
                                        type: number
                                        nullable: true
                                      particles_trigger_values_threshold:
                                        type: object
                                        properties:
                                          particles_trigger_values_threshold_for_level1:
                                            type: number
                                          particles_trigger_values_threshold_for_level2:
                                            type: number
                                          particles_trigger_values_threshold_for_level3:
                                            type: number
                                          particles_trigger_values_threshold_for_level4:
                                            type: number
                                          particles_trigger_values_threshold_for_level5:
                                            type: number
                                          particles_trigger_values_threshold_for_level6:
                                            type: number
                                          particles_trigger_values_threshold_for_level7:
                                            type: number
                                        nullable: true
                                      tvoc_trigger_values_threshold:
                                        type: object
                                        properties:
                                          tvoc_trigger_values_threshold_for_level1:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level2:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level3:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level4:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level5:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level6:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level7:
                                            type: number
                                        nullable: true
                                      auto_mode_fan_rpm:
                                        type: object
                                        properties:
                                          auto_mode_fan_rpm_level1:
                                            type: number
                                          auto_mode_fan_rpm_level2:
                                            type: number
                                          auto_mode_fan_rpm_level3:
                                            type: number
                                          auto_mode_fan_rpm_level4:
                                            type: number
                                          auto_mode_fan_rpm_level5:
                                            type: number
                                          auto_mode_fan_rpm_level6:
                                            type: number
                                          auto_mode_fan_rpm_level7:
                                            type: number
                                          auto_mode_fan_rpm_level8:
                                            type: number
                                        nullable: true
                                      manual_sleep_boost_fan_rpm:
                                        type: object
                                        properties:
                                          manual_mode_fan_rpm_level1:
                                            type: number
                                          manual_mode_fan_rpm_level2:
                                            type: number
                                          manual_mode_fan_rpm_level3:
                                            type: number
                                          manual_mode_fan_rpm_level4:
                                            type: number
                                          manual_mode_fan_rpm_level5:
                                            type: number
                                          manual_mode_fan_rpm_level6:
                                            type: number
                                          manual_mode_fan_rpm_level7:
                                            type: number
                                          manual_mode_fan_rpm_level8:
                                            type: number
                                          boost_mode_fan_rpm:
                                            type: number
                                          sleep_mode_fan_rpm:
                                            type: number
                                        nullable: true
                                      auto_mode_fan_levels_states:
                                        type: object
                                        properties:
                                          auto_mode_fan_state_level1:
                                            type: boolean
                                          auto_mode_fan_state_level2:
                                            type: boolean
                                          auto_mode_fan_state_level3:
                                            type: boolean
                                          auto_mode_fan_state_level4:
                                            type: boolean
                                          auto_mode_fan_state_level5:
                                            type: boolean
                                          auto_mode_fan_state_level6:
                                            type: boolean
                                          auto_mode_fan_state_level7:
                                            type: boolean
                                          auto_mode_fan_state_level8:
                                            type: boolean
                                        nullable: true
                                    required:
                                      - lock_status
                                      - fan_speed_mode
                                      - repeatable_timers
                                      - non_repeatable_timers
                                      - aiq_displaying_mode
                                      - filter_state
                                      - is_particle_sensor_faulty
                                      - is_temp_sensor_faulty
                                      - is_tvoc_sensor_faulty
                                      - timezone
                                      - display_brightness
                                      - particles_trigger_values_threshold
                                      - auto_mode_fan_rpm
                                      - manual_sleep_boost_fan_rpm
                                      - auto_mode_fan_levels_states
                                    nullable: true
                                  delta:
                                    type: object
                                    properties:
                                      lock_status:
                                        type: string
                                        enum:
                                          - no_lock
                                          - child
                                        nullable: true
                                      fan_speed_mode:
                                        type: string
                                        enum:
                                          - HARD_OFF
                                          - SOFT_OFF
                                          - AUTO
                                          - SLEEP
                                          - BOOST
                                          - TURN_ON
                                          - MANUAL
                                          - MANUAL_LEVEL1
                                          - MANUAL_LEVEL2
                                          - MANUAL_LEVEL3
                                          - MANUAL_LEVEL4
                                          - MANUAL_LEVEL5
                                          - MANUAL_LEVEL6
                                          - MANUAL_LEVEL7
                                          - MANUAL_LEVEL8
                                        nullable: true
                                        description: "\n\t\t\t\nHARD_OFF - disable fan, stop to gather data from sensors, disconnect from wifi, can be disabled only via \ndisplay\n\t\t\t\nSOFT_OFF - disable fan but device is still connected to the wifi and gather data from sensors\n\t\t\t\nAUTO - device automatically determine current fan speed level based on the measurements from sensors\n\t\t\t\nSLEEP - lower display brightness, low fan speed\n\t\t\t\nBOOST - maximum available fan speed\n\t\t\t\nTURN_ON - disable Soft/Hard OFF and enable mode which was before OFF\n\t\t\t\nMANUAL - switch to manual mode with level as for Auto Mode\n\t\t\t\nMANUAL_LEVEL1\n\t\t\t\nMANUAL_LEVEL2\n\t\t\t\nMANUAL_LEVEL3\n\t\t\t\nMANUAL_LEVEL4\n\t\t\t\nMANUAL_LEVEL5\n\t\t\t\nMANUAL_LEVEL6\n\t\t\t\nMANUAL_LEVEL7\n\t\t\t\nMANUAL_LEVEL8 (only for AP Large)"
                                      repeatable_timers:
                                        type: object
                                        properties:
                                          timers:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                fan_speed_mode:
                                                  type: string
                                                  enum:
                                                    - HARD_OFF
                                                    - SOFT_OFF
                                                    - AUTO
                                                    - SLEEP
                                                    - BOOST
                                                    - TURN_ON
                                                    - MANUAL
                                                    - MANUAL_LEVEL1
                                                    - MANUAL_LEVEL2
                                                    - MANUAL_LEVEL3
                                                    - MANUAL_LEVEL4
                                                    - MANUAL_LEVEL5
                                                    - MANUAL_LEVEL6
                                                    - MANUAL_LEVEL7
                                                    - MANUAL_LEVEL8
                                                timestamp:
                                                  type: number
                                              required:
                                                - fan_speed_mode
                                                - timestamp
                                        required:
                                          - timers
                                        nullable: true
                                        description: "The repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                                      non_repeatable_timers:
                                        type: object
                                        properties:
                                          timers:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                fan_speed_mode:
                                                  type: string
                                                  enum:
                                                    - HARD_OFF
                                                    - SOFT_OFF
                                                    - AUTO
                                                    - SLEEP
                                                    - BOOST
                                                    - TURN_ON
                                                    - MANUAL
                                                    - MANUAL_LEVEL1
                                                    - MANUAL_LEVEL2
                                                    - MANUAL_LEVEL3
                                                    - MANUAL_LEVEL4
                                                    - MANUAL_LEVEL5
                                                    - MANUAL_LEVEL6
                                                    - MANUAL_LEVEL7
                                                    - MANUAL_LEVEL8
                                                timestamp:
                                                  type: number
                                              required:
                                                - fan_speed_mode
                                                - timestamp
                                        required:
                                          - timers
                                        nullable: true
                                        description: "The non-repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is as local unix timestamp (so timezone is included), but in minutes, e.g. on 17.05.2021 the time is 27020801. when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                                      aiq_displaying_mode:
                                        type: boolean
                                        nullable: true
                                        description: "false - display AiQ Lights in Inactivity Mode only if red (default option)\n\t\t\t\t\t\ntrue - always display AiQ Lights in Inactivity Mode"
                                      sensor_type:
                                        type: string
                                        enum:
                                          - particles
                                          - TVOC
                                          - both
                                        nullable: true
                                      filter_state:
                                        type: string
                                        enum:
                                          - OK
                                          - MEDIUM_DIRTY
                                          - DIRTY
                                          - MUST_BE_CHANGED
                                        nullable: true
                                      is_particle_sensor_faulty:
                                        type: boolean
                                        nullable: true
                                      is_temp_sensor_faulty:
                                        type: boolean
                                        nullable: true
                                      is_tvoc_sensor_faulty:
                                        type: boolean
                                        nullable: true
                                      timezone:
                                        type: string
                                        nullable: true
                                      display_brightness:
                                        type: number
                                        nullable: true
                                      particles_trigger_values_threshold:
                                        type: object
                                        properties:
                                          particles_trigger_values_threshold_for_level1:
                                            type: number
                                          particles_trigger_values_threshold_for_level2:
                                            type: number
                                          particles_trigger_values_threshold_for_level3:
                                            type: number
                                          particles_trigger_values_threshold_for_level4:
                                            type: number
                                          particles_trigger_values_threshold_for_level5:
                                            type: number
                                          particles_trigger_values_threshold_for_level6:
                                            type: number
                                          particles_trigger_values_threshold_for_level7:
                                            type: number
                                        nullable: true
                                      tvoc_trigger_values_threshold:
                                        type: object
                                        properties:
                                          tvoc_trigger_values_threshold_for_level1:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level2:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level3:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level4:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level5:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level6:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level7:
                                            type: number
                                        nullable: true
                                      auto_mode_fan_rpm:
                                        type: object
                                        properties:
                                          auto_mode_fan_rpm_level1:
                                            type: number
                                          auto_mode_fan_rpm_level2:
                                            type: number
                                          auto_mode_fan_rpm_level3:
                                            type: number
                                          auto_mode_fan_rpm_level4:
                                            type: number
                                          auto_mode_fan_rpm_level5:
                                            type: number
                                          auto_mode_fan_rpm_level6:
                                            type: number
                                          auto_mode_fan_rpm_level7:
                                            type: number
                                          auto_mode_fan_rpm_level8:
                                            type: number
                                        nullable: true
                                      manual_sleep_boost_fan_rpm:
                                        type: object
                                        properties:
                                          manual_mode_fan_rpm_level1:
                                            type: number
                                          manual_mode_fan_rpm_level2:
                                            type: number
                                          manual_mode_fan_rpm_level3:
                                            type: number
                                          manual_mode_fan_rpm_level4:
                                            type: number
                                          manual_mode_fan_rpm_level5:
                                            type: number
                                          manual_mode_fan_rpm_level6:
                                            type: number
                                          manual_mode_fan_rpm_level7:
                                            type: number
                                          manual_mode_fan_rpm_level8:
                                            type: number
                                          boost_mode_fan_rpm:
                                            type: number
                                          sleep_mode_fan_rpm:
                                            type: number
                                        nullable: true
                                      auto_mode_fan_levels_states:
                                        type: object
                                        properties:
                                          auto_mode_fan_state_level1:
                                            type: boolean
                                          auto_mode_fan_state_level2:
                                            type: boolean
                                          auto_mode_fan_state_level3:
                                            type: boolean
                                          auto_mode_fan_state_level4:
                                            type: boolean
                                          auto_mode_fan_state_level5:
                                            type: boolean
                                          auto_mode_fan_state_level6:
                                            type: boolean
                                          auto_mode_fan_state_level7:
                                            type: boolean
                                          auto_mode_fan_state_level8:
                                            type: boolean
                                        nullable: true
                                    nullable: true
                                required:
                                  - reported
                                  - desired
                                  - delta
                                description: Air Purifier AWS IoT Thing shadow object
                              - type: object
                                properties:
                                  reported:
                                    type: object
                                    properties:
                                      ens210_ranges:
                                        type: object
                                        properties:
                                          temperature_green:
                                            type: number
                                          temperature_red:
                                            type: number
                                          humidity_yellow_low:
                                            type: number
                                          humidity_yellow_high:
                                            type: number
                                          humidity_red_low:
                                            type: number
                                          humidity_red_high:
                                            type: number
                                        required:
                                          - temperature_green
                                          - temperature_red
                                          - humidity_yellow_low
                                          - humidity_yellow_high
                                          - humidity_red_low
                                          - humidity_red_high
                                        nullable: true
                                      ccs811_ranges:
                                        type: object
                                        properties:
                                          eco2_red:
                                            type: number
                                          eco2_yellow:
                                            type: number
                                          tvoc_red:
                                            type: number
                                          tvoc_yellow:
                                            type: number
                                        required:
                                          - eco2_red
                                          - eco2_yellow
                                          - tvoc_red
                                          - tvoc_yellow
                                        nullable: true
                                      sampling_period:
                                        type: number
                                        nullable: true
                                      timezone:
                                        type: string
                                        nullable: true
                                    required:
                                      - ens210_ranges
                                      - ccs811_ranges
                                      - sampling_period
                                      - timezone
                                    nullable: true
                                  desired:
                                    type: object
                                    properties:
                                      ens210_ranges:
                                        type: object
                                        properties:
                                          temperature_green:
                                            type: number
                                          temperature_red:
                                            type: number
                                          humidity_yellow_low:
                                            type: number
                                          humidity_yellow_high:
                                            type: number
                                          humidity_red_low:
                                            type: number
                                          humidity_red_high:
                                            type: number
                                        required:
                                          - temperature_green
                                          - temperature_red
                                          - humidity_yellow_low
                                          - humidity_yellow_high
                                          - humidity_red_low
                                          - humidity_red_high
                                        nullable: true
                                      ccs811_ranges:
                                        type: object
                                        properties:
                                          eco2_red:
                                            type: number
                                          eco2_yellow:
                                            type: number
                                          tvoc_red:
                                            type: number
                                          tvoc_yellow:
                                            type: number
                                        required:
                                          - eco2_red
                                          - eco2_yellow
                                          - tvoc_red
                                          - tvoc_yellow
                                        nullable: true
                                      sampling_period:
                                        type: number
                                        nullable: true
                                      timezone:
                                        type: string
                                        nullable: true
                                    required:
                                      - ens210_ranges
                                      - ccs811_ranges
                                      - sampling_period
                                      - timezone
                                    nullable: true
                                  delta:
                                    type: object
                                    properties:
                                      ens210_ranges:
                                        type: object
                                        properties:
                                          temperature_green:
                                            type: number
                                          temperature_red:
                                            type: number
                                          humidity_yellow_low:
                                            type: number
                                          humidity_yellow_high:
                                            type: number
                                          humidity_red_low:
                                            type: number
                                          humidity_red_high:
                                            type: number
                                        nullable: true
                                      ccs811_ranges:
                                        type: object
                                        properties:
                                          eco2_red:
                                            type: number
                                          eco2_yellow:
                                            type: number
                                          tvoc_red:
                                            type: number
                                          tvoc_yellow:
                                            type: number
                                        nullable: true
                                      sampling_period:
                                        type: number
                                        nullable: true
                                      timezone:
                                        type: string
                                        nullable: true
                                    nullable: true
                                required:
                                  - reported
                                  - desired
                                  - delta
                                description: Air Sensor AWS IoT Thing shadow object
                            nullable: true
                          lastMetrics:
                            oneOf:
                              - type: object
                                properties:
                                  deviceId:
                                    type: string
                                  time:
                                    type: number
                                    minimum: 0
                                    maximum: 9999999999
                                    description: Date in seconds since epoch (UTC time)
                                    example: 1579098983
                                  temperature:
                                    type: number
                                    description: >-
                                      What is the current target temperature for
                                      the heater regulator. Temperature in
                                      Celsius degrees
                                  humidity:
                                    type: number
                                    description: "SOCKET: Measured humidity - Relative humidity percentage multiplied by 100.\n\t\t\t\t\t\t\nValid ONLY FOR SOCKET HEATER. So for the panel heater, this field will be dummy bytes.\n\t\t\t\t\t\t\nCONVECTOR: Tilt sensor state. 1 = convector fallen and not heating"
                                  temperatureAmbient:
                                    type: number
                                    description: >-
                                      Actual temperature after applying the
                                      calibration offset. If the temperature
                                      sensor is faulty, this field will be equal
                                      -100 C. Temperature in Celsius degrees
                                  currentPower:
                                    type: number
                                    description: >-
                                      Power measured with the dedicated IC chip.
                                      In Watts. Due to the chip behavior, this
                                      value is filtered for a few seconds. To
                                      determine if the heater is heating RIGHT
                                      NOW use the control_signal field or
                                      heater_flag
                                  controlSignal:
                                    type: number
                                    description: >-
                                      Current value of control signal - so the
                                      percentage of the maximum heater power.
                                      Value from 0 to 100. It is the value
                                      applied by the heater right now
                                  currentOperationMode:
                                    type: number
                                    description: "0 - \"Off\"\n\t\t\t\t\t\t\n1 - \"Weekly program\"\n\t\t\t\t\t\t\n2 - \"Independent device\" (uses timers)\n\t\t\t\t\t\t\n3 - \"Control Individually\" (follows the single set temperature)"
                                  energyUsage:
                                    type: number
                                    description: >-
                                      Energy used since the heater startup. In
                                      Wh. 
                                  timeSinceHeaterStartup:
                                    type: number
                                    description: >-
                                      Time in seconds since heater startup.
                                      Knowing this information and energy_usage
                                      the cloud can calculate the energy usage
                                      in any time range (e.g. during last 24
                                      hours)
                                  openWindowsStatus:
                                    type: number
                                    description: "Whether the open window functionality is enabled (can be activated by opening a window) and active now (was triggered and the heater is not heating).\n\t\t\t\t 0 - disabled, not active now 3 - enabled, not active now 2 - enabled and active now!"
                                  currentTemperatureTypeInWeeklyProgram:
                                    type: number
                                    description: "Current temperature type: 0=normal, 1=comfort, 2=sleep, 3=away, 4=vacation, 5=off\n\t\t\tTemperature type followed currently (only if weekly program is active).\n\t\t\tIf the heater is in other mode than \"Weekly program\" this field will contains value \"-1\".\n\t\t\tIf the NTP time is not synchronized this field will contain value \"-2\" (because when NTP time is not synchronized, current weekly program status cannot be determined"
                                  heaterFlag:
                                    type: number
                                    description: 'Heating/Cooling status: 0=off, 1=on'
                                  powerStatus:
                                    type: number
                                    description: >-
                                      If the device is on (not in operation mode
                                      off or temperature is not set to 0):
                                      0=off, 1=on
                                required:
                                  - deviceId
                                  - time
                                  - temperature
                                  - humidity
                                  - temperatureAmbient
                                  - currentPower
                                  - controlSignal
                                  - currentOperationMode
                                  - energyUsage
                                  - timeSinceHeaterStartup
                                  - openWindowsStatus
                                  - currentTemperatureTypeInWeeklyProgram
                                  - heaterFlag
                                  - powerStatus
                                description: >-
                                  Heater last metrics. If null, no metrics were
                                  found
                              - type: object
                                properties:
                                  deviceId:
                                    type: string
                                    description: AWS IoT Thing Name (UUID)
                                  time:
                                    type: number
                                    minimum: 0
                                    maximum: 9999999999
                                    description: Date in seconds since epoch (UTC time)
                                    example: 1579098983
                                  setFanLevelInAuto:
                                    type: number
                                    description: >-
                                      Current fan speed level, relevant only
                                      when operation_mode=auto. Level1=0,
                                      Level8=7
                                  controlSignal:
                                    type: number
                                    description: >-
                                      Current value of control signal applied to
                                      the device motor. So it is the percentage
                                      of maximum motor input signal.
                                  massPm_10:
                                    type: number
                                    description: >-
                                      Mass of particles with diameter < 1
                                      micrometers in volume of one cubic meter
                                      [µg/m3] in range <0,1000>
                                  particles10Level:
                                    type: number
                                    description: >-
                                      Warning level of mass of particles with
                                      diameter < 1 micrometers
                                  massPm_25:
                                    type: number
                                    description: >-
                                      Mass of particles with diameter < 2.5
                                      micrometers in volume of one cubic meter
                                      [µg/m3] in range <0,1000>
                                  particles25Level:
                                    type: number
                                    description: >-
                                      Warning level of mass of particles with
                                      diameter < 2.5 micrometers
                                  massPm_100:
                                    type: number
                                    description: >-
                                      Mass of particles with diameter < 10.0
                                      micrometers in volume of one cubic meter
                                      [µg/m3] in range <0,1000>
                                  particles100Level:
                                    type: number
                                    description: >-
                                      Warning level of mass of particles with
                                      diameter < 10 micrometers
                                  numberPm_05:
                                    type: number
                                    description: >-
                                      Total number of particles wit diameter <
                                      0.5 micrometers in cubic centimeter
                                      [#/cm3] in range <0,3000>
                                  numberPm_10:
                                    type: number
                                    description: >-
                                      Total number of particles wit diameter < 1
                                      micrometers in cubic centimeter [#/cm3] in
                                      range <0,3000>
                                  numberPm_25:
                                    type: number
                                    description: >-
                                      Total number of particles wit diameter <
                                      2.5 micrometers in cubic centimeter
                                      [#/cm3] in range <0,3000>
                                  numberPm_50:
                                    type: number
                                    description: >-
                                      Total number of particles wit diameter < 5
                                      micrometers in cubic centimeter [#/cm3] in
                                      range <0,3000>
                                  numberPm_100:
                                    type: number
                                    description: >-
                                      Total number of particles wit diameter <
                                      10 micrometers in cubic centimeter [#/cm3]
                                      in range <0,3000>
                                  temperature:
                                    type: number
                                    description: Temperature in Celsius degrees
                                  temperatureLevel:
                                    type: number
                                    description: Warning level of temperature
                                  humidity:
                                    type: number
                                    description: >-
                                      Relative humidity in percents %,
                                      multiplied by 100
                                  humidityLevel:
                                    type: number
                                    description: Warning level of humidity
                                  runtimeLevelSleepMs:
                                    type: number
                                    description: >-
                                      Number of milliseconds, during which the
                                      device works in sleep mode
                                  runtimeLevelBoostMs:
                                    type: number
                                    description: >-
                                      Number of milliseconds, during which the
                                      device works in boost mode
                                  runtimeLevelLevel1Ms:
                                    type: number
                                    description: >-
                                      Number of milliseconds, during which the
                                      device using Level1 fan speed (in auto and
                                      manual)
                                  runtimeLevelLevel2Ms:
                                    type: number
                                    description: >-
                                      Number of milliseconds, during which the
                                      device using Level2 fan speed (in auto and
                                      manual)
                                  runtimeLevelLevel3Ms:
                                    type: number
                                    description: >-
                                      Number of milliseconds, during which the
                                      device using Level3 fan speed (in auto and
                                      manual)
                                  runtimeLevelLevel4Ms:
                                    type: number
                                    description: >-
                                      Number of milliseconds, during which the
                                      device using Level4 fan speed (in auto and
                                      manual)
                                  runtimeLevelLevel5Ms:
                                    type: number
                                    description: >-
                                      Number of milliseconds, during which the
                                      device using Level5 fan speed (in auto and
                                      manual)
                                  runtimeLevelLevel6Ms:
                                    type: number
                                    description: >-
                                      Number of milliseconds, during which the
                                      device using Level6 fan speed (in auto and
                                      manual)
                                  runtimeLevelLevel7Ms:
                                    type: number
                                    description: >-
                                      Number of milliseconds, during which the
                                      device using Level7 fan speed (in auto and
                                      manual)
                                  runtimeLevelLevel8Ms:
                                    type: number
                                    description: >-
                                      Number of milliseconds, during which the
                                      device using Level8 fan speed (in auto and
                                      manual)
                                  airQualityIndex:
                                    type: number
                                    description: >-
                                      Air Quality Index calculated from TVOC and
                                      eCO2 measurements by sensor, in range
                                      <1,5>
                                  eco2:
                                    type: number
                                    description: >-
                                      Equivalent CO2 in range <400-65000> [parts
                                      per million CO2 equiv.]
                                  eco2Level:
                                    type: number
                                    description: Warning level of CO2
                                  tvoc:
                                    type: number
                                    description: >-
                                      Total Volatile Organic Compounds in range
                                      <0-65000> [part per billion]
                                  tvocLevel:
                                    type: number
                                    description: >-
                                      Warning level of Total Volatile Organic
                                      Compounds
                                required:
                                  - deviceId
                                  - time
                                  - setFanLevelInAuto
                                  - controlSignal
                                  - massPm_10
                                  - particles10Level
                                  - massPm_25
                                  - particles25Level
                                  - massPm_100
                                  - particles100Level
                                  - numberPm_05
                                  - numberPm_10
                                  - numberPm_25
                                  - numberPm_50
                                  - numberPm_100
                                  - temperature
                                  - temperatureLevel
                                  - humidity
                                  - humidityLevel
                                  - runtimeLevelSleepMs
                                  - runtimeLevelBoostMs
                                  - runtimeLevelLevel1Ms
                                  - runtimeLevelLevel2Ms
                                  - runtimeLevelLevel3Ms
                                  - runtimeLevelLevel4Ms
                                  - runtimeLevelLevel5Ms
                                  - runtimeLevelLevel6Ms
                                  - runtimeLevelLevel7Ms
                                  - runtimeLevelLevel8Ms
                                  - airQualityIndex
                                  - eco2
                                  - eco2Level
                                  - tvoc
                                  - tvocLevel
                                description: >-
                                  Air purifier last metrics. If null, no metrics
                                  were found
                              - type: object
                                properties:
                                  deviceId:
                                    type: string
                                  time:
                                    type: number
                                    minimum: 0
                                    maximum: 9999999999
                                    description: Date in seconds since epoch (UTC time)
                                    example: 1579098983
                                  temperature:
                                    type: number
                                    description: Temperature in Celsius degrees
                                  humidity:
                                    type: number
                                    description: 2 - bytes [ unsigned integer ] [ 100 x 1%]
                                  eco2:
                                    type: number
                                    description: >-
                                      2 - bytes [ unsigned integer ] [ parts per
                                      million ]
                                  tvoc:
                                    type: number
                                    description: >-
                                      2 - bytes [ unsigned integer ] [ parts per
                                      million ]
                                  batteryPercentage:
                                    type: number
                                    description: 2 - bytes [ unsigned integer ] [ 10 x 1% ]
                                  batteryVoltage:
                                    type: number
                                    description: >-
                                      2 - bytes [ unsigned integer ] [
                                      millivolts ]
                                  chargingStatus:
                                    type: number
                                    description: >-
                                      0 - not charging ; 1 - charging with LED
                                      turn Off; 2 - charging with LED turn On (
                                      updated 2 - 30 s after change )
                                  tvocSensorCalibrated:
                                    type: boolean
                                    description: false - not calibrated, true - calibrated
                                  tvocSensorCountdownRemainingTime:
                                    type: number
                                    description: >-
                                      Seconds to finish calibration, if sensor
                                      calibrated then equal to 0
                                  tvocSensorCountdownRemainingTimeTo:
                                    type: number
                                    description: >-
                                      Seconds to finish calibration, if sensor
                                      calibrated then equal to 0
                                  tvocSensorCountdownTotalTime:
                                    type: number
                                    description: >-
                                      Total time needed to perform tvoc sensor
                                      calibration
                                  ens210SensorCalibrated:
                                    type: boolean
                                    description: false - not calibrated, true - calibrated
                                  ens210SensorCountdownRemainingTime:
                                    type: number
                                    description: >-
                                      Seconds to finish calibration, if sensor
                                      calibrated then equal to 0
                                  ens210SensorCountdownRemainingTimeTo:
                                    type: number
                                    description: Seconds to finish calibration
                                  ens210SensorCountdownTotalTime:
                                    type: number
                                    description: >-
                                      Total time needed to perform ens210 sensor
                                      calibration
                                required:
                                  - deviceId
                                  - time
                                  - temperature
                                  - humidity
                                  - eco2
                                  - tvoc
                                  - batteryPercentage
                                  - batteryVoltage
                                  - chargingStatus
                                  - tvocSensorCalibrated
                                  - tvocSensorCountdownRemainingTime
                                  - tvocSensorCountdownRemainingTimeTo
                                  - tvocSensorCountdownTotalTime
                                  - ens210SensorCalibrated
                                  - ens210SensorCountdownRemainingTime
                                  - ens210SensorCountdownRemainingTimeTo
                                  - ens210SensorCountdownTotalTime
                                description: >-
                                  Air sensor last metrics. If null, no metrics
                                  were found
                            nullable: true
                            description: >-
                              Last metrics sent by device. Type of object
                              matches to device type. If null, no metrics were
                              found
                          energyUsageForCurrentDay:
                            type: number
                            description: >-
                              Energy usage for current calendar day. Measured in
                              Wh
                        required:
                          - deviceId
                          - macAddress
                          - deviceType
                          - isConnected
                          - customName
                          - houseId
                          - roomId
                          - isArchived
                          - isEnabled
                          - controlSource
                          - createdAt
                          - deviceSettings
                          - lastMetrics
                          - energyUsageForCurrentDay
                  required:
                    - roomId
                    - roomName
                    - devices
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HouseNotFoundError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: getHouseDevices
      summary: Get house devices
      description: Returns a list of devices from chosen house grouped by room
    parameters:
      - schema:
          type: string
          description: House ID
          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
        name: houseId
        in: path
        required: true
        description: House ID
  /houses/{houseId}/devices/independent:
    get:
      tags:
        - house
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        deviceId:
                          type: string
                          format: uuid
                          description: Device ID
                        macAddress:
                          type: string
                          description: MAC address of the device
                          example: '00:00:00:00:00:00'
                        deviceType:
                          type: object
                          properties:
                            childType:
                              type: object
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                  description: Device Type ID
                                name:
                                  type: string
                                  description: Name of type
                                  example: GL-Oil Heater G3
                              required:
                                - id
                                - name
                            parentType:
                              type: object
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                  description: Device Type ID
                                name:
                                  type: string
                                  description: Name of type
                                  example: GL-Oil Heater G3
                              required:
                                - id
                                - name
                          required:
                            - childType
                            - parentType
                        isConnected:
                          type: boolean
                          description: Whether the device is connected to the network
                        customName:
                          type: string
                          nullable: true
                          description: Custom name of the device
                          example: My device
                        houseId:
                          type: string
                          description: House ID where the device is located
                          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                          nullable: true
                        roomId:
                          type: string
                          description: Room ID where the device is located
                          example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
                          nullable: true
                        isArchived:
                          type: boolean
                          description: Whether the device is archived
                        isEnabled:
                          type: boolean
                          nullable: true
                          description: Whether the device is on/off
                        controlSource:
                          type: string
                          enum:
                            - mobile_api
                            - open_api
                            - tibber
                          description: >-
                            Control source of the device. By default it is
                            "mobile_api"
                          example: tibber
                        createdAt:
                          type: string
                          format: date-time
                          nullable: true
                          description: Device creation date
                        deviceSettings:
                          oneOf:
                            - type: object
                              properties:
                                reported:
                                  type: object
                                  properties:
                                    operation_mode:
                                      type: string
                                      enum:
                                        - weekly_program
                                        - 'off'
                                        - independent_device
                                        - control_individually
                                      nullable: true
                                      description: "\n\"off\"  - all control disable\n\t\t\n\"weekly_program\" - follow the weekly program, changing temperature by display buttons changes the temperature of the current temperature mode\n\t\t\n\"independent_device\"  - follow the single set value, with timers enabled\n\t\t\n\"control_individually\"  - follow the single set value, but not use any timers or weekly program"
                                    override_weekly_program:
                                      type: object
                                      properties:
                                        value_type:
                                          type: string
                                          enum:
                                            - comfort
                                            - sleep
                                            - away
                                            - normal
                                            - always_heating
                                            - 'off'
                                          nullable: true
                                        ends_at:
                                          type: number
                                          nullable: true
                                          description: >-
                                            UTC timestamp in seconds when the
                                            override mode ends
                                      required:
                                        - value_type
                                        - ends_at
                                      nullable: true
                                      description: >-
                                        Overwrite the currently running weekly
                                        program with a temporary change of a
                                        specific temperature type (e.g.
                                        comfort). Time value of 0 means weekly
                                        program overwrite is not active anymore
                                        (disabled). Time should be a UTC
                                        timestamp when the program should end
                                    non_repeatable_timers:
                                      type: object
                                      properties:
                                        timers:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              value_type:
                                                type: string
                                                enum:
                                                  - normal
                                                  - 'off'
                                                  - always_heating
                                              timestamp:
                                                type: number
                                            required:
                                              - value_type
                                              - timestamp
                                      required:
                                        - timers
                                      nullable: true
                                      description: >-
                                        A single pair represents time and value
                                        when the temperature mode should be
                                        changed. Time defines when to switch to
                                        a specific temperature type (set in the
                                        second field of the pair). Time is as
                                        local unix timestamp (so timezone is
                                        included), but in minutes, e.g. on
                                        17.05.2021 the time is 27020801. Allowed
                                        temperature types for timers: "normal",
                                        "off", "always_heating". Only used in
                                        independent mode
                                    temperature_normal:
                                      type: number
                                      minimum: 0
                                      maximum: 100
                                      nullable: true
                                      description: >-
                                        Set temperature value, used for
                                        operation modes "Independent device" and
                                        timers
                                    temperature_comfort:
                                      type: number
                                      minimum: 0
                                      maximum: 50
                                      nullable: true
                                    temperature_sleep:
                                      type: number
                                      minimum: 0
                                      maximum: 50
                                      nullable: true
                                    temperature_away:
                                      type: number
                                      minimum: 0
                                      maximum: 50
                                      nullable: true
                                    temperature_vacation:
                                      type: number
                                      minimum: 0
                                      maximum: 50
                                      nullable: true
                                    temperature_last_set:
                                      type: number
                                      minimum: 0
                                      maximum: 100
                                      nullable: true
                                      description: >-
                                        The temperature that the device is
                                        currently following
                                    vacation_mode:
                                      type: object
                                      properties:
                                        start_timestamp:
                                          type: number
                                          nullable: true
                                          description: >-
                                            UTC timestamp in minutes when the
                                            vacation mode starts
                                        end_timestamp:
                                          type: number
                                          nullable: true
                                          description: >-
                                            UTC timestamp in minutes when the
                                            vacation mode ends
                                        advanced:
                                          type: boolean
                                          nullable: true
                                          description: >-
                                            Advanced vacation mode - heaters will be
                                            regulated regarding "away" temperature
                                            by each room: false=OFF, true=ON
                                      required:
                                        - start_timestamp
                                        - end_timestamp
                                        - advanced
                                      nullable: true
                                    lock_status:
                                      type: string
                                      enum:
                                        - no_lock
                                        - child
                                        - commercial
                                      nullable: true
                                    predictive_heating_type:
                                      type: string
                                      enum:
                                        - 'off'
                                        - simple
                                        - advanced
                                      nullable: true
                                      description: "\n\"off\" - No predictive heating. Temperature will be change exactly with the weekly program timer\n\t\t\n\"simple\"  - Simple predictive heating. Temperature will be change before the timer, with a fixed time for each Celsius degree\n\t\t\n\"advanced\" - Advanced predictive heating. Temperature will be change before the timer, with a time based on the current room model. Model is estimated while running."
                                    open_window:
                                      type: object
                                      properties:
                                        drop_temperature_threshold:
                                          type: number
                                          description: >-
                                            Required temperature drop to trigger
                                            (activate) the open window
                                            functionality, in Celsius degrees
                                        drop_time_range:
                                          type: number
                                          description: >-
                                            Time range when a drop of temperature
                                            will be expected, in seconds
                                        increase_temperature_threshold:
                                          type: number
                                          description: >-
                                            Required temperature increase to
                                            deactivate open window functionality
                                        increase_time_range:
                                          type: number
                                          description: >-
                                            Time range when an increase of
                                            temperature will be expected, in seconds
                                        max_time:
                                          type: number
                                          description: >-
                                            Max time duration of the open window
                                            activeness
                                        enabled:
                                          type: boolean
                                          description: >-
                                            State of the open window functionality.
                                            True if open window functionality is
                                            enabled (that is whether the device can
                                            go into this mode while operating)
                                        activated:
                                          type: boolean
                                          description: >-
                                            Current state of the open window. True
                                            if open window is currently detected by
                                            device and is activated. You can
                                            deactivate currently detected open
                                            window by changing this value to false.
                                      required:
                                        - enabled
                                      nullable: true
                                    temperature_calibration_offset:
                                      type: number
                                      nullable: true
                                      description: Offset for ambient temperature
                                    display_unit:
                                      type: string
                                      enum:
                                        - celsius
                                        - fahrenheit
                                      nullable: true
                                      description: >-
                                        the temperature units: "celsius" or
                                        "fahrenheit" to set
                                    oil_heater_power_level:
                                      oneOf:
                                        - type: number
                                          enum:
                                            - 40
                                        - type: number
                                          enum:
                                            - 60
                                        - type: number
                                          enum:
                                            - 100
                                      nullable: true
                                      description: >-
                                        Set the max heating level in percentage
                                        of the nominal wattage. Oil heater
                                        allows setting 3 different max power
                                        settings (40, 60 or 100% of the power),
                                        done by selecting number of active
                                        heating elements.
                                    temperature_in_independent_mode:
                                      type: number
                                      minimum: 0
                                      maximum: 100
                                      nullable: true
                                      description: >-
                                        Change temperature in independent mode
                                        now. Use values 0.0 and 99.0 to set
                                        ALWAYS_ON and ALWAYS_OFF, respectively.
                                        Apart from changing value for some
                                        temperature type, in "Independent
                                        device" operation mode, one also needs
                                        to call this command to change the
                                        current temperature
                                    additional_socket_mode:
                                      type: string
                                      enum:
                                        - heating
                                        - cooling
                                        - always_on
                                        - always_off
                                      nullable: true
                                      description: "Command only for the socket heater, to select heating/cooling mode. ALWAYS_ON, ALWAYS_OFF modes just for convenience, as if these can be enabled also by other commands.\n\t\t"
                                    pid_parameters:
                                      type: object
                                      properties:
                                        kp:
                                          type: number
                                          description: The proportional part gain
                                        ki:
                                          type: number
                                          description: The integral part gain
                                        kd:
                                          type: number
                                          description: The derivative part gain
                                        kd_filter_N:
                                          type: number
                                          description: The derivative filter time coefficient
                                        windup_limit:
                                          type: number
                                          description: >-
                                            The windup limit for integral part from
                                            0 to 100
                                      required:
                                        - kp
                                        - ki
                                        - kd
                                        - kd_filter_N
                                        - windup_limit
                                      nullable: true
                                    max_heater_power:
                                      type: number
                                      nullable: true
                                      description: Set max heater power in Watts
                                    limited_heating_power:
                                      type: number
                                      minimum: 10
                                      maximum: 100
                                      nullable: true
                                      description: >-
                                        Only for heaters with triac
                                        (panel/storage). Allows to limit the
                                        heating percentage between 10 and 100
                                        percent.
                                    hysteresis:
                                      type: object
                                      properties:
                                        upper:
                                          type: number
                                          description: >-
                                            Set hysteresis parameters. Setting
                                            hysteresis parameters will change
                                            current regulator type to hysteresis.
                                            Upper offset (set temp + this -> stop
                                            heat)
                                        lower:
                                          type: number
                                          description: >-
                                            Set hysteresis parameters. Setting
                                            hysteresis parameters will change
                                            current regulator type to hysteresis.
                                            Lower offset (set temp - this -> start
                                            heat)
                                      required:
                                        - upper
                                        - lower
                                      nullable: true
                                    regulator_type:
                                      type: string
                                      enum:
                                        - pid
                                        - hysteresis_or_slow_pid
                                        - unknown
                                      nullable: true
                                    timezone:
                                      type: string
                                      nullable: true
                                    calibration_target_ambient_temperature:
                                      type: number
                                      nullable: true
                                      description: >-
                                        Target for calibrating ambient
                                        temperature for heaters gen.2
                                    fan_state:
                                      type: string
                                      enum:
                                        - 'on'
                                        - 'off'
                                      nullable: true
                                      description: Fan state of convection heaters gen.2
                                    weekly_program:
                                      type: object
                                      properties:
                                        timers:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              value_type:
                                                type: string
                                                enum:
                                                  - comfort
                                                  - sleep
                                                  - away
                                                  - normal
                                                  - always_heating
                                                  - 'off'
                                              timestamp:
                                                type: number
                                            required:
                                              - value_type
                                              - timestamp
                                      required:
                                        - timers
                                      nullable: true
                                      description: "The weekly program is a list of repeating pairs of values. A single pair represents time and value when the temperature mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific temperature type (set in the second field of the pair). Needs to be ordered ascending by time.\n\t\t\nFor mode \"independent device\" use only temperature types OFF and NORMAL, to avoid issues with changing the temperature by buttons from the heater"
                                  required:
                                    - operation_mode
                                    - override_weekly_program
                                    - non_repeatable_timers
                                    - temperature_normal
                                    - temperature_comfort
                                    - temperature_sleep
                                    - temperature_away
                                    - temperature_vacation
                                    - vacation_mode
                                    - lock_status
                                    - predictive_heating_type
                                    - open_window
                                    - temperature_calibration_offset
                                    - display_unit
                                    - oil_heater_power_level
                                    - temperature_in_independent_mode
                                    - additional_socket_mode
                                    - pid_parameters
                                    - max_heater_power
                                    - limited_heating_power
                                    - hysteresis
                                    - regulator_type
                                    - timezone
                                    - calibration_target_ambient_temperature
                                    - fan_state
                                    - weekly_program
                                  nullable: true
                                desired:
                                  type: object
                                  properties:
                                    operation_mode:
                                      type: string
                                      enum:
                                        - weekly_program
                                        - 'off'
                                        - independent_device
                                        - control_individually
                                      nullable: true
                                      description: "\n\"off\"  - all control disable\n\t\t\n\"weekly_program\" - follow the weekly program, changing temperature by display buttons changes the temperature of the current temperature mode\n\t\t\n\"independent_device\"  - follow the single set value, with timers enabled\n\t\t\n\"control_individually\"  - follow the single set value, but not use any timers or weekly program"
                                    override_weekly_program:
                                      type: object
                                      properties:
                                        value_type:
                                          type: string
                                          enum:
                                            - comfort
                                            - sleep
                                            - away
                                            - normal
                                            - always_heating
                                            - 'off'
                                          nullable: true
                                        ends_at:
                                          type: number
                                          nullable: true
                                          description: >-
                                            UTC timestamp in seconds when the
                                            override mode ends
                                      required:
                                        - value_type
                                        - ends_at
                                      nullable: true
                                      description: >-
                                        Overwrite the currently running weekly
                                        program with a temporary change of a
                                        specific temperature type (e.g.
                                        comfort). Time value of 0 means weekly
                                        program overwrite is not active anymore
                                        (disabled). Time should be a UTC
                                        timestamp when the program should end
                                    non_repeatable_timers:
                                      type: object
                                      properties:
                                        timers:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              value_type:
                                                type: string
                                                enum:
                                                  - normal
                                                  - 'off'
                                                  - always_heating
                                              timestamp:
                                                type: number
                                            required:
                                              - value_type
                                              - timestamp
                                      required:
                                        - timers
                                      nullable: true
                                      description: >-
                                        A single pair represents time and value
                                        when the temperature mode should be
                                        changed. Time defines when to switch to
                                        a specific temperature type (set in the
                                        second field of the pair). Time is as
                                        local unix timestamp (so timezone is
                                        included), but in minutes, e.g. on
                                        17.05.2021 the time is 27020801. Allowed
                                        temperature types for timers: "normal",
                                        "off", "always_heating". Only used in
                                        independent mode
                                    temperature_normal:
                                      type: number
                                      minimum: 0
                                      maximum: 100
                                      nullable: true
                                      description: >-
                                        Set temperature value, used for
                                        operation modes "Independent device" and
                                        timers
                                    temperature_comfort:
                                      type: number
                                      minimum: 0
                                      maximum: 50
                                      nullable: true
                                    temperature_sleep:
                                      type: number
                                      minimum: 0
                                      maximum: 50
                                      nullable: true
                                    temperature_away:
                                      type: number
                                      minimum: 0
                                      maximum: 50
                                      nullable: true
                                    temperature_vacation:
                                      type: number
                                      minimum: 0
                                      maximum: 50
                                      nullable: true
                                    temperature_last_set:
                                      type: number
                                      minimum: 0
                                      maximum: 100
                                      nullable: true
                                      description: >-
                                        The temperature that the device is
                                        currently following
                                    vacation_mode:
                                      type: object
                                      properties:
                                        start_timestamp:
                                          type: number
                                          nullable: true
                                          description: >-
                                            UTC timestamp in minutes when the
                                            vacation mode starts
                                        end_timestamp:
                                          type: number
                                          nullable: true
                                          description: >-
                                            UTC timestamp in minutes when the
                                            vacation mode ends
                                        advanced:
                                          type: boolean
                                          nullable: true
                                          description: >-
                                            Advanced vacation mode - heaters will be
                                            regulated regarding "away" temperature
                                            by each room: false=OFF, true=ON
                                      required:
                                        - start_timestamp
                                        - end_timestamp
                                        - advanced
                                      nullable: true
                                    lock_status:
                                      type: string
                                      enum:
                                        - no_lock
                                        - child
                                        - commercial
                                      nullable: true
                                    predictive_heating_type:
                                      type: string
                                      enum:
                                        - 'off'
                                        - simple
                                        - advanced
                                      nullable: true
                                      description: "\n\"off\" - No predictive heating. Temperature will be change exactly with the weekly program timer\n\t\t\n\"simple\"  - Simple predictive heating. Temperature will be change before the timer, with a fixed time for each Celsius degree\n\t\t\n\"advanced\" - Advanced predictive heating. Temperature will be change before the timer, with a time based on the current room model. Model is estimated while running."
                                    open_window:
                                      type: object
                                      properties:
                                        drop_temperature_threshold:
                                          type: number
                                          description: >-
                                            Required temperature drop to trigger
                                            (activate) the open window
                                            functionality, in Celsius degrees
                                        drop_time_range:
                                          type: number
                                          description: >-
                                            Time range when a drop of temperature
                                            will be expected, in seconds
                                        increase_temperature_threshold:
                                          type: number
                                          description: >-
                                            Required temperature increase to
                                            deactivate open window functionality
                                        increase_time_range:
                                          type: number
                                          description: >-
                                            Time range when an increase of
                                            temperature will be expected, in seconds
                                        max_time:
                                          type: number
                                          description: >-
                                            Max time duration of the open window
                                            activeness
                                        enabled:
                                          type: boolean
                                          description: >-
                                            State of the open window functionality.
                                            True if open window functionality is
                                            enabled (that is whether the device can
                                            go into this mode while operating)
                                        activated:
                                          type: boolean
                                          description: >-
                                            Current state of the open window. True
                                            if open window is currently detected by
                                            device and is activated. You can
                                            deactivate currently detected open
                                            window by changing this value to false.
                                      required:
                                        - enabled
                                      nullable: true
                                    temperature_calibration_offset:
                                      type: number
                                      nullable: true
                                      description: Offset for ambient temperature
                                    display_unit:
                                      type: string
                                      enum:
                                        - celsius
                                        - fahrenheit
                                      nullable: true
                                      description: >-
                                        the temperature units: "celsius" or
                                        "fahrenheit" to set
                                    oil_heater_power_level:
                                      oneOf:
                                        - type: number
                                          enum:
                                            - 40
                                        - type: number
                                          enum:
                                            - 60
                                        - type: number
                                          enum:
                                            - 100
                                      nullable: true
                                      description: >-
                                        Set the max heating level in percentage
                                        of the nominal wattage. Oil heater
                                        allows setting 3 different max power
                                        settings (40, 60 or 100% of the power),
                                        done by selecting number of active
                                        heating elements.
                                    temperature_in_independent_mode:
                                      type: number
                                      minimum: 0
                                      maximum: 100
                                      nullable: true
                                      description: >-
                                        Change temperature in independent mode
                                        now. Use values 0.0 and 99.0 to set
                                        ALWAYS_ON and ALWAYS_OFF, respectively.
                                        Apart from changing value for some
                                        temperature type, in "Independent
                                        device" operation mode, one also needs
                                        to call this command to change the
                                        current temperature
                                    additional_socket_mode:
                                      type: string
                                      enum:
                                        - heating
                                        - cooling
                                        - always_on
                                        - always_off
                                      nullable: true
                                      description: "Command only for the socket heater, to select heating/cooling mode. ALWAYS_ON, ALWAYS_OFF modes just for convenience, as if these can be enabled also by other commands.\n\t\t"
                                    pid_parameters:
                                      type: object
                                      properties:
                                        kp:
                                          type: number
                                          description: The proportional part gain
                                        ki:
                                          type: number
                                          description: The integral part gain
                                        kd:
                                          type: number
                                          description: The derivative part gain
                                        kd_filter_N:
                                          type: number
                                          description: The derivative filter time coefficient
                                        windup_limit:
                                          type: number
                                          description: >-
                                            The windup limit for integral part from
                                            0 to 100
                                      required:
                                        - kp
                                        - ki
                                        - kd
                                        - kd_filter_N
                                        - windup_limit
                                      nullable: true
                                    max_heater_power:
                                      type: number
                                      nullable: true
                                      description: Set max heater power in Watts
                                    limited_heating_power:
                                      type: number
                                      minimum: 10
                                      maximum: 100
                                      nullable: true
                                      description: >-
                                        Only for heaters with triac
                                        (panel/storage). Allows to limit the
                                        heating percentage between 10 and 100
                                        percent.
                                    hysteresis:
                                      type: object
                                      properties:
                                        upper:
                                          type: number
                                          description: >-
                                            Set hysteresis parameters. Setting
                                            hysteresis parameters will change
                                            current regulator type to hysteresis.
                                            Upper offset (set temp + this -> stop
                                            heat)
                                        lower:
                                          type: number
                                          description: >-
                                            Set hysteresis parameters. Setting
                                            hysteresis parameters will change
                                            current regulator type to hysteresis.
                                            Lower offset (set temp - this -> start
                                            heat)
                                      required:
                                        - upper
                                        - lower
                                      nullable: true
                                    regulator_type:
                                      type: string
                                      enum:
                                        - pid
                                        - hysteresis_or_slow_pid
                                        - unknown
                                      nullable: true
                                    timezone:
                                      type: string
                                      nullable: true
                                    calibration_target_ambient_temperature:
                                      type: number
                                      nullable: true
                                      description: >-
                                        Target for calibrating ambient
                                        temperature for heaters gen.2
                                    fan_state:
                                      type: string
                                      enum:
                                        - 'on'
                                        - 'off'
                                      nullable: true
                                      description: Fan state of convection heaters gen.2
                                    weekly_program:
                                      type: object
                                      properties:
                                        timers:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              value_type:
                                                type: string
                                                enum:
                                                  - comfort
                                                  - sleep
                                                  - away
                                                  - normal
                                                  - always_heating
                                                  - 'off'
                                              timestamp:
                                                type: number
                                            required:
                                              - value_type
                                              - timestamp
                                      required:
                                        - timers
                                      nullable: true
                                      description: "The weekly program is a list of repeating pairs of values. A single pair represents time and value when the temperature mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific temperature type (set in the second field of the pair). Needs to be ordered ascending by time.\n\t\t\nFor mode \"independent device\" use only temperature types OFF and NORMAL, to avoid issues with changing the temperature by buttons from the heater"
                                  required:
                                    - operation_mode
                                    - override_weekly_program
                                    - non_repeatable_timers
                                    - temperature_normal
                                    - temperature_comfort
                                    - temperature_sleep
                                    - temperature_away
                                    - temperature_vacation
                                    - vacation_mode
                                    - lock_status
                                    - predictive_heating_type
                                    - open_window
                                    - temperature_calibration_offset
                                    - display_unit
                                    - oil_heater_power_level
                                    - temperature_in_independent_mode
                                    - additional_socket_mode
                                    - pid_parameters
                                    - max_heater_power
                                    - limited_heating_power
                                    - hysteresis
                                    - regulator_type
                                    - timezone
                                    - calibration_target_ambient_temperature
                                    - fan_state
                                    - weekly_program
                                  nullable: true
                                delta:
                                  type: object
                                  properties:
                                    operation_mode:
                                      type: string
                                      enum:
                                        - weekly_program
                                        - 'off'
                                        - independent_device
                                        - control_individually
                                      nullable: true
                                      description: "\n\"off\"  - all control disable\n\t\t\n\"weekly_program\" - follow the weekly program, changing temperature by display buttons changes the temperature of the current temperature mode\n\t\t\n\"independent_device\"  - follow the single set value, with timers enabled\n\t\t\n\"control_individually\"  - follow the single set value, but not use any timers or weekly program"
                                    override_weekly_program:
                                      type: object
                                      properties:
                                        value_type:
                                          type: string
                                          enum:
                                            - comfort
                                            - sleep
                                            - away
                                            - normal
                                            - always_heating
                                            - 'off'
                                          nullable: true
                                        ends_at:
                                          type: number
                                          nullable: true
                                          description: >-
                                            UTC timestamp in seconds when the
                                            override mode ends
                                      required:
                                        - value_type
                                        - ends_at
                                      nullable: true
                                      description: >-
                                        Overwrite the currently running weekly
                                        program with a temporary change of a
                                        specific temperature type (e.g.
                                        comfort). Time value of 0 means weekly
                                        program overwrite is not active anymore
                                        (disabled). Time should be a UTC
                                        timestamp when the program should end
                                    non_repeatable_timers:
                                      type: object
                                      properties:
                                        timers:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              value_type:
                                                type: string
                                                enum:
                                                  - normal
                                                  - 'off'
                                                  - always_heating
                                              timestamp:
                                                type: number
                                            required:
                                              - value_type
                                              - timestamp
                                      required:
                                        - timers
                                      nullable: true
                                      description: >-
                                        A single pair represents time and value
                                        when the temperature mode should be
                                        changed. Time defines when to switch to
                                        a specific temperature type (set in the
                                        second field of the pair). Time is as
                                        local unix timestamp (so timezone is
                                        included), but in minutes, e.g. on
                                        17.05.2021 the time is 27020801. Allowed
                                        temperature types for timers: "normal",
                                        "off", "always_heating". Only used in
                                        independent mode
                                    temperature_normal:
                                      type: number
                                      minimum: 0
                                      maximum: 100
                                      nullable: true
                                      description: >-
                                        Set temperature value, used for
                                        operation modes "Independent device" and
                                        timers
                                    temperature_comfort:
                                      type: number
                                      minimum: 0
                                      maximum: 50
                                      nullable: true
                                    temperature_sleep:
                                      type: number
                                      minimum: 0
                                      maximum: 50
                                      nullable: true
                                    temperature_away:
                                      type: number
                                      minimum: 0
                                      maximum: 50
                                      nullable: true
                                    temperature_vacation:
                                      type: number
                                      minimum: 0
                                      maximum: 50
                                      nullable: true
                                    temperature_last_set:
                                      type: number
                                      minimum: 0
                                      maximum: 100
                                      nullable: true
                                      description: >-
                                        The temperature that the device is
                                        currently following
                                    vacation_mode:
                                      type: object
                                      properties:
                                        start_timestamp:
                                          type: number
                                          nullable: true
                                          description: >-
                                            UTC timestamp in minutes when the
                                            vacation mode starts
                                        end_timestamp:
                                          type: number
                                          nullable: true
                                          description: >-
                                            UTC timestamp in minutes when the
                                            vacation mode ends
                                        advanced:
                                          type: boolean
                                          nullable: true
                                          description: >-
                                            Advanced vacation mode - heaters will be
                                            regulated regarding "away" temperature
                                            by each room: false=OFF, true=ON
                                      nullable: true
                                    lock_status:
                                      type: string
                                      enum:
                                        - no_lock
                                        - child
                                        - commercial
                                      nullable: true
                                    predictive_heating_type:
                                      type: string
                                      enum:
                                        - 'off'
                                        - simple
                                        - advanced
                                      nullable: true
                                      description: "\n\"off\" - No predictive heating. Temperature will be change exactly with the weekly program timer\n\t\t\n\"simple\"  - Simple predictive heating. Temperature will be change before the timer, with a fixed time for each Celsius degree\n\t\t\n\"advanced\" - Advanced predictive heating. Temperature will be change before the timer, with a time based on the current room model. Model is estimated while running."
                                    open_window:
                                      type: object
                                      properties:
                                        drop_temperature_threshold:
                                          type: number
                                          description: >-
                                            Required temperature drop to trigger
                                            (activate) the open window
                                            functionality, in Celsius degrees
                                        drop_time_range:
                                          type: number
                                          description: >-
                                            Time range when a drop of temperature
                                            will be expected, in seconds
                                        increase_temperature_threshold:
                                          type: number
                                          description: >-
                                            Required temperature increase to
                                            deactivate open window functionality
                                        increase_time_range:
                                          type: number
                                          description: >-
                                            Time range when an increase of
                                            temperature will be expected, in seconds
                                        max_time:
                                          type: number
                                          description: >-
                                            Max time duration of the open window
                                            activeness
                                        enabled:
                                          type: boolean
                                          description: >-
                                            State of the open window functionality.
                                            True if open window functionality is
                                            enabled (that is whether the device can
                                            go into this mode while operating)
                                        activated:
                                          type: boolean
                                          description: >-
                                            Current state of the open window. True
                                            if open window is currently detected by
                                            device and is activated. You can
                                            deactivate currently detected open
                                            window by changing this value to false.
                                      nullable: true
                                    temperature_calibration_offset:
                                      type: number
                                      nullable: true
                                      description: Offset for ambient temperature
                                    display_unit:
                                      type: string
                                      enum:
                                        - celsius
                                        - fahrenheit
                                      nullable: true
                                      description: >-
                                        the temperature units: "celsius" or
                                        "fahrenheit" to set
                                    oil_heater_power_level:
                                      oneOf:
                                        - type: number
                                          enum:
                                            - 40
                                        - type: number
                                          enum:
                                            - 60
                                        - type: number
                                          enum:
                                            - 100
                                      nullable: true
                                      description: >-
                                        Set the max heating level in percentage
                                        of the nominal wattage. Oil heater
                                        allows setting 3 different max power
                                        settings (40, 60 or 100% of the power),
                                        done by selecting number of active
                                        heating elements.
                                    temperature_in_independent_mode:
                                      type: number
                                      minimum: 0
                                      maximum: 100
                                      nullable: true
                                      description: >-
                                        Change temperature in independent mode
                                        now. Use values 0.0 and 99.0 to set
                                        ALWAYS_ON and ALWAYS_OFF, respectively.
                                        Apart from changing value for some
                                        temperature type, in "Independent
                                        device" operation mode, one also needs
                                        to call this command to change the
                                        current temperature
                                    additional_socket_mode:
                                      type: string
                                      enum:
                                        - heating
                                        - cooling
                                        - always_on
                                        - always_off
                                      nullable: true
                                      description: "Command only for the socket heater, to select heating/cooling mode. ALWAYS_ON, ALWAYS_OFF modes just for convenience, as if these can be enabled also by other commands.\n\t\t"
                                    pid_parameters:
                                      type: object
                                      properties:
                                        kp:
                                          type: number
                                          description: The proportional part gain
                                        ki:
                                          type: number
                                          description: The integral part gain
                                        kd:
                                          type: number
                                          description: The derivative part gain
                                        kd_filter_N:
                                          type: number
                                          description: The derivative filter time coefficient
                                        windup_limit:
                                          type: number
                                          description: >-
                                            The windup limit for integral part from
                                            0 to 100
                                      nullable: true
                                    max_heater_power:
                                      type: number
                                      nullable: true
                                      description: Set max heater power in Watts
                                    limited_heating_power:
                                      type: number
                                      minimum: 10
                                      maximum: 100
                                      nullable: true
                                      description: >-
                                        Only for heaters with triac
                                        (panel/storage). Allows to limit the
                                        heating percentage between 10 and 100
                                        percent.
                                    hysteresis:
                                      type: object
                                      properties:
                                        upper:
                                          type: number
                                          description: >-
                                            Set hysteresis parameters. Setting
                                            hysteresis parameters will change
                                            current regulator type to hysteresis.
                                            Upper offset (set temp + this -> stop
                                            heat)
                                        lower:
                                          type: number
                                          description: >-
                                            Set hysteresis parameters. Setting
                                            hysteresis parameters will change
                                            current regulator type to hysteresis.
                                            Lower offset (set temp - this -> start
                                            heat)
                                      nullable: true
                                    regulator_type:
                                      type: string
                                      enum:
                                        - pid
                                        - hysteresis_or_slow_pid
                                        - unknown
                                      nullable: true
                                    timezone:
                                      type: string
                                      nullable: true
                                    calibration_target_ambient_temperature:
                                      type: number
                                      nullable: true
                                      description: >-
                                        Target for calibrating ambient
                                        temperature for heaters gen.2
                                    fan_state:
                                      type: string
                                      enum:
                                        - 'on'
                                        - 'off'
                                      nullable: true
                                      description: Fan state of convection heaters gen.2
                                    weekly_program:
                                      type: object
                                      properties:
                                        timers:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              value_type:
                                                type: string
                                                enum:
                                                  - comfort
                                                  - sleep
                                                  - away
                                                  - normal
                                                  - always_heating
                                                  - 'off'
                                              timestamp:
                                                type: number
                                            required:
                                              - value_type
                                              - timestamp
                                      required:
                                        - timers
                                      nullable: true
                                      description: "The weekly program is a list of repeating pairs of values. A single pair represents time and value when the temperature mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific temperature type (set in the second field of the pair). Needs to be ordered ascending by time.\n\t\t\nFor mode \"independent device\" use only temperature types OFF and NORMAL, to avoid issues with changing the temperature by buttons from the heater"
                                  nullable: true
                              required:
                                - reported
                                - desired
                                - delta
                              description: Heater or Socket AWS IoT Thing shadow object
                            - type: object
                              properties:
                                reported:
                                  type: object
                                  properties:
                                    lock_status:
                                      type: string
                                      enum:
                                        - no_lock
                                        - child
                                      nullable: true
                                    fan_speed_mode:
                                      type: string
                                      enum:
                                        - HARD_OFF
                                        - SOFT_OFF
                                        - AUTO
                                        - SLEEP
                                        - BOOST
                                        - TURN_ON
                                        - MANUAL
                                        - MANUAL_LEVEL1
                                        - MANUAL_LEVEL2
                                        - MANUAL_LEVEL3
                                        - MANUAL_LEVEL4
                                        - MANUAL_LEVEL5
                                        - MANUAL_LEVEL6
                                        - MANUAL_LEVEL7
                                        - MANUAL_LEVEL8
                                      nullable: true
                                      description: "\n\t\t\t\nHARD_OFF - disable fan, stop to gather data from sensors, disconnect from wifi, can be disabled only via \ndisplay\n\t\t\t\nSOFT_OFF - disable fan but device is still connected to the wifi and gather data from sensors\n\t\t\t\nAUTO - device automatically determine current fan speed level based on the measurements from sensors\n\t\t\t\nSLEEP - lower display brightness, low fan speed\n\t\t\t\nBOOST - maximum available fan speed\n\t\t\t\nTURN_ON - disable Soft/Hard OFF and enable mode which was before OFF\n\t\t\t\nMANUAL - switch to manual mode with level as for Auto Mode\n\t\t\t\nMANUAL_LEVEL1\n\t\t\t\nMANUAL_LEVEL2\n\t\t\t\nMANUAL_LEVEL3\n\t\t\t\nMANUAL_LEVEL4\n\t\t\t\nMANUAL_LEVEL5\n\t\t\t\nMANUAL_LEVEL6\n\t\t\t\nMANUAL_LEVEL7\n\t\t\t\nMANUAL_LEVEL8 (only for AP Large)"
                                    repeatable_timers:
                                      type: object
                                      properties:
                                        timers:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              fan_speed_mode:
                                                type: string
                                                enum:
                                                  - HARD_OFF
                                                  - SOFT_OFF
                                                  - AUTO
                                                  - SLEEP
                                                  - BOOST
                                                  - TURN_ON
                                                  - MANUAL
                                                  - MANUAL_LEVEL1
                                                  - MANUAL_LEVEL2
                                                  - MANUAL_LEVEL3
                                                  - MANUAL_LEVEL4
                                                  - MANUAL_LEVEL5
                                                  - MANUAL_LEVEL6
                                                  - MANUAL_LEVEL7
                                                  - MANUAL_LEVEL8
                                              timestamp:
                                                type: number
                                            required:
                                              - fan_speed_mode
                                              - timestamp
                                      required:
                                        - timers
                                      nullable: true
                                      description: "The repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                                    non_repeatable_timers:
                                      type: object
                                      properties:
                                        timers:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              fan_speed_mode:
                                                type: string
                                                enum:
                                                  - HARD_OFF
                                                  - SOFT_OFF
                                                  - AUTO
                                                  - SLEEP
                                                  - BOOST
                                                  - TURN_ON
                                                  - MANUAL
                                                  - MANUAL_LEVEL1
                                                  - MANUAL_LEVEL2
                                                  - MANUAL_LEVEL3
                                                  - MANUAL_LEVEL4
                                                  - MANUAL_LEVEL5
                                                  - MANUAL_LEVEL6
                                                  - MANUAL_LEVEL7
                                                  - MANUAL_LEVEL8
                                              timestamp:
                                                type: number
                                            required:
                                              - fan_speed_mode
                                              - timestamp
                                      required:
                                        - timers
                                      nullable: true
                                      description: "The non-repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is as local unix timestamp (so timezone is included), but in minutes, e.g. on 17.05.2021 the time is 27020801. when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                                    aiq_displaying_mode:
                                      type: boolean
                                      nullable: true
                                      description: "false - display AiQ Lights in Inactivity Mode only if red (default option)\n\t\t\t\t\t\ntrue - always display AiQ Lights in Inactivity Mode"
                                    sensor_type:
                                      type: string
                                      enum:
                                        - particles
                                        - TVOC
                                        - both
                                      nullable: true
                                    filter_state:
                                      type: string
                                      enum:
                                        - OK
                                        - MEDIUM_DIRTY
                                        - DIRTY
                                        - MUST_BE_CHANGED
                                      nullable: true
                                    is_particle_sensor_faulty:
                                      type: boolean
                                      nullable: true
                                    is_temp_sensor_faulty:
                                      type: boolean
                                      nullable: true
                                    is_tvoc_sensor_faulty:
                                      type: boolean
                                      nullable: true
                                    timezone:
                                      type: string
                                      nullable: true
                                    display_brightness:
                                      type: number
                                      nullable: true
                                    particles_trigger_values_threshold:
                                      type: object
                                      properties:
                                        particles_trigger_values_threshold_for_level1:
                                          type: number
                                        particles_trigger_values_threshold_for_level2:
                                          type: number
                                        particles_trigger_values_threshold_for_level3:
                                          type: number
                                        particles_trigger_values_threshold_for_level4:
                                          type: number
                                        particles_trigger_values_threshold_for_level5:
                                          type: number
                                        particles_trigger_values_threshold_for_level6:
                                          type: number
                                        particles_trigger_values_threshold_for_level7:
                                          type: number
                                      nullable: true
                                    tvoc_trigger_values_threshold:
                                      type: object
                                      properties:
                                        tvoc_trigger_values_threshold_for_level1:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level2:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level3:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level4:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level5:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level6:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level7:
                                          type: number
                                      nullable: true
                                    auto_mode_fan_rpm:
                                      type: object
                                      properties:
                                        auto_mode_fan_rpm_level1:
                                          type: number
                                        auto_mode_fan_rpm_level2:
                                          type: number
                                        auto_mode_fan_rpm_level3:
                                          type: number
                                        auto_mode_fan_rpm_level4:
                                          type: number
                                        auto_mode_fan_rpm_level5:
                                          type: number
                                        auto_mode_fan_rpm_level6:
                                          type: number
                                        auto_mode_fan_rpm_level7:
                                          type: number
                                        auto_mode_fan_rpm_level8:
                                          type: number
                                      nullable: true
                                    manual_sleep_boost_fan_rpm:
                                      type: object
                                      properties:
                                        manual_mode_fan_rpm_level1:
                                          type: number
                                        manual_mode_fan_rpm_level2:
                                          type: number
                                        manual_mode_fan_rpm_level3:
                                          type: number
                                        manual_mode_fan_rpm_level4:
                                          type: number
                                        manual_mode_fan_rpm_level5:
                                          type: number
                                        manual_mode_fan_rpm_level6:
                                          type: number
                                        manual_mode_fan_rpm_level7:
                                          type: number
                                        manual_mode_fan_rpm_level8:
                                          type: number
                                        boost_mode_fan_rpm:
                                          type: number
                                        sleep_mode_fan_rpm:
                                          type: number
                                      nullable: true
                                    auto_mode_fan_levels_states:
                                      type: object
                                      properties:
                                        auto_mode_fan_state_level1:
                                          type: boolean
                                        auto_mode_fan_state_level2:
                                          type: boolean
                                        auto_mode_fan_state_level3:
                                          type: boolean
                                        auto_mode_fan_state_level4:
                                          type: boolean
                                        auto_mode_fan_state_level5:
                                          type: boolean
                                        auto_mode_fan_state_level6:
                                          type: boolean
                                        auto_mode_fan_state_level7:
                                          type: boolean
                                        auto_mode_fan_state_level8:
                                          type: boolean
                                      nullable: true
                                  required:
                                    - lock_status
                                    - fan_speed_mode
                                    - repeatable_timers
                                    - non_repeatable_timers
                                    - aiq_displaying_mode
                                    - filter_state
                                    - is_particle_sensor_faulty
                                    - is_temp_sensor_faulty
                                    - is_tvoc_sensor_faulty
                                    - timezone
                                    - display_brightness
                                    - particles_trigger_values_threshold
                                    - auto_mode_fan_rpm
                                    - manual_sleep_boost_fan_rpm
                                    - auto_mode_fan_levels_states
                                  nullable: true
                                desired:
                                  type: object
                                  properties:
                                    lock_status:
                                      type: string
                                      enum:
                                        - no_lock
                                        - child
                                      nullable: true
                                    fan_speed_mode:
                                      type: string
                                      enum:
                                        - HARD_OFF
                                        - SOFT_OFF
                                        - AUTO
                                        - SLEEP
                                        - BOOST
                                        - TURN_ON
                                        - MANUAL
                                        - MANUAL_LEVEL1
                                        - MANUAL_LEVEL2
                                        - MANUAL_LEVEL3
                                        - MANUAL_LEVEL4
                                        - MANUAL_LEVEL5
                                        - MANUAL_LEVEL6
                                        - MANUAL_LEVEL7
                                        - MANUAL_LEVEL8
                                      nullable: true
                                      description: "\n\t\t\t\nHARD_OFF - disable fan, stop to gather data from sensors, disconnect from wifi, can be disabled only via \ndisplay\n\t\t\t\nSOFT_OFF - disable fan but device is still connected to the wifi and gather data from sensors\n\t\t\t\nAUTO - device automatically determine current fan speed level based on the measurements from sensors\n\t\t\t\nSLEEP - lower display brightness, low fan speed\n\t\t\t\nBOOST - maximum available fan speed\n\t\t\t\nTURN_ON - disable Soft/Hard OFF and enable mode which was before OFF\n\t\t\t\nMANUAL - switch to manual mode with level as for Auto Mode\n\t\t\t\nMANUAL_LEVEL1\n\t\t\t\nMANUAL_LEVEL2\n\t\t\t\nMANUAL_LEVEL3\n\t\t\t\nMANUAL_LEVEL4\n\t\t\t\nMANUAL_LEVEL5\n\t\t\t\nMANUAL_LEVEL6\n\t\t\t\nMANUAL_LEVEL7\n\t\t\t\nMANUAL_LEVEL8 (only for AP Large)"
                                    repeatable_timers:
                                      type: object
                                      properties:
                                        timers:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              fan_speed_mode:
                                                type: string
                                                enum:
                                                  - HARD_OFF
                                                  - SOFT_OFF
                                                  - AUTO
                                                  - SLEEP
                                                  - BOOST
                                                  - TURN_ON
                                                  - MANUAL
                                                  - MANUAL_LEVEL1
                                                  - MANUAL_LEVEL2
                                                  - MANUAL_LEVEL3
                                                  - MANUAL_LEVEL4
                                                  - MANUAL_LEVEL5
                                                  - MANUAL_LEVEL6
                                                  - MANUAL_LEVEL7
                                                  - MANUAL_LEVEL8
                                              timestamp:
                                                type: number
                                            required:
                                              - fan_speed_mode
                                              - timestamp
                                      required:
                                        - timers
                                      nullable: true
                                      description: "The repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                                    non_repeatable_timers:
                                      type: object
                                      properties:
                                        timers:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              fan_speed_mode:
                                                type: string
                                                enum:
                                                  - HARD_OFF
                                                  - SOFT_OFF
                                                  - AUTO
                                                  - SLEEP
                                                  - BOOST
                                                  - TURN_ON
                                                  - MANUAL
                                                  - MANUAL_LEVEL1
                                                  - MANUAL_LEVEL2
                                                  - MANUAL_LEVEL3
                                                  - MANUAL_LEVEL4
                                                  - MANUAL_LEVEL5
                                                  - MANUAL_LEVEL6
                                                  - MANUAL_LEVEL7
                                                  - MANUAL_LEVEL8
                                              timestamp:
                                                type: number
                                            required:
                                              - fan_speed_mode
                                              - timestamp
                                      required:
                                        - timers
                                      nullable: true
                                      description: "The non-repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is as local unix timestamp (so timezone is included), but in minutes, e.g. on 17.05.2021 the time is 27020801. when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                                    aiq_displaying_mode:
                                      type: boolean
                                      nullable: true
                                      description: "false - display AiQ Lights in Inactivity Mode only if red (default option)\n\t\t\t\t\t\ntrue - always display AiQ Lights in Inactivity Mode"
                                    sensor_type:
                                      type: string
                                      enum:
                                        - particles
                                        - TVOC
                                        - both
                                      nullable: true
                                    filter_state:
                                      type: string
                                      enum:
                                        - OK
                                        - MEDIUM_DIRTY
                                        - DIRTY
                                        - MUST_BE_CHANGED
                                      nullable: true
                                    is_particle_sensor_faulty:
                                      type: boolean
                                      nullable: true
                                    is_temp_sensor_faulty:
                                      type: boolean
                                      nullable: true
                                    is_tvoc_sensor_faulty:
                                      type: boolean
                                      nullable: true
                                    timezone:
                                      type: string
                                      nullable: true
                                    display_brightness:
                                      type: number
                                      nullable: true
                                    particles_trigger_values_threshold:
                                      type: object
                                      properties:
                                        particles_trigger_values_threshold_for_level1:
                                          type: number
                                        particles_trigger_values_threshold_for_level2:
                                          type: number
                                        particles_trigger_values_threshold_for_level3:
                                          type: number
                                        particles_trigger_values_threshold_for_level4:
                                          type: number
                                        particles_trigger_values_threshold_for_level5:
                                          type: number
                                        particles_trigger_values_threshold_for_level6:
                                          type: number
                                        particles_trigger_values_threshold_for_level7:
                                          type: number
                                      nullable: true
                                    tvoc_trigger_values_threshold:
                                      type: object
                                      properties:
                                        tvoc_trigger_values_threshold_for_level1:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level2:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level3:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level4:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level5:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level6:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level7:
                                          type: number
                                      nullable: true
                                    auto_mode_fan_rpm:
                                      type: object
                                      properties:
                                        auto_mode_fan_rpm_level1:
                                          type: number
                                        auto_mode_fan_rpm_level2:
                                          type: number
                                        auto_mode_fan_rpm_level3:
                                          type: number
                                        auto_mode_fan_rpm_level4:
                                          type: number
                                        auto_mode_fan_rpm_level5:
                                          type: number
                                        auto_mode_fan_rpm_level6:
                                          type: number
                                        auto_mode_fan_rpm_level7:
                                          type: number
                                        auto_mode_fan_rpm_level8:
                                          type: number
                                      nullable: true
                                    manual_sleep_boost_fan_rpm:
                                      type: object
                                      properties:
                                        manual_mode_fan_rpm_level1:
                                          type: number
                                        manual_mode_fan_rpm_level2:
                                          type: number
                                        manual_mode_fan_rpm_level3:
                                          type: number
                                        manual_mode_fan_rpm_level4:
                                          type: number
                                        manual_mode_fan_rpm_level5:
                                          type: number
                                        manual_mode_fan_rpm_level6:
                                          type: number
                                        manual_mode_fan_rpm_level7:
                                          type: number
                                        manual_mode_fan_rpm_level8:
                                          type: number
                                        boost_mode_fan_rpm:
                                          type: number
                                        sleep_mode_fan_rpm:
                                          type: number
                                      nullable: true
                                    auto_mode_fan_levels_states:
                                      type: object
                                      properties:
                                        auto_mode_fan_state_level1:
                                          type: boolean
                                        auto_mode_fan_state_level2:
                                          type: boolean
                                        auto_mode_fan_state_level3:
                                          type: boolean
                                        auto_mode_fan_state_level4:
                                          type: boolean
                                        auto_mode_fan_state_level5:
                                          type: boolean
                                        auto_mode_fan_state_level6:
                                          type: boolean
                                        auto_mode_fan_state_level7:
                                          type: boolean
                                        auto_mode_fan_state_level8:
                                          type: boolean
                                      nullable: true
                                  required:
                                    - lock_status
                                    - fan_speed_mode
                                    - repeatable_timers
                                    - non_repeatable_timers
                                    - aiq_displaying_mode
                                    - filter_state
                                    - is_particle_sensor_faulty
                                    - is_temp_sensor_faulty
                                    - is_tvoc_sensor_faulty
                                    - timezone
                                    - display_brightness
                                    - particles_trigger_values_threshold
                                    - auto_mode_fan_rpm
                                    - manual_sleep_boost_fan_rpm
                                    - auto_mode_fan_levels_states
                                  nullable: true
                                delta:
                                  type: object
                                  properties:
                                    lock_status:
                                      type: string
                                      enum:
                                        - no_lock
                                        - child
                                      nullable: true
                                    fan_speed_mode:
                                      type: string
                                      enum:
                                        - HARD_OFF
                                        - SOFT_OFF
                                        - AUTO
                                        - SLEEP
                                        - BOOST
                                        - TURN_ON
                                        - MANUAL
                                        - MANUAL_LEVEL1
                                        - MANUAL_LEVEL2
                                        - MANUAL_LEVEL3
                                        - MANUAL_LEVEL4
                                        - MANUAL_LEVEL5
                                        - MANUAL_LEVEL6
                                        - MANUAL_LEVEL7
                                        - MANUAL_LEVEL8
                                      nullable: true
                                      description: "\n\t\t\t\nHARD_OFF - disable fan, stop to gather data from sensors, disconnect from wifi, can be disabled only via \ndisplay\n\t\t\t\nSOFT_OFF - disable fan but device is still connected to the wifi and gather data from sensors\n\t\t\t\nAUTO - device automatically determine current fan speed level based on the measurements from sensors\n\t\t\t\nSLEEP - lower display brightness, low fan speed\n\t\t\t\nBOOST - maximum available fan speed\n\t\t\t\nTURN_ON - disable Soft/Hard OFF and enable mode which was before OFF\n\t\t\t\nMANUAL - switch to manual mode with level as for Auto Mode\n\t\t\t\nMANUAL_LEVEL1\n\t\t\t\nMANUAL_LEVEL2\n\t\t\t\nMANUAL_LEVEL3\n\t\t\t\nMANUAL_LEVEL4\n\t\t\t\nMANUAL_LEVEL5\n\t\t\t\nMANUAL_LEVEL6\n\t\t\t\nMANUAL_LEVEL7\n\t\t\t\nMANUAL_LEVEL8 (only for AP Large)"
                                    repeatable_timers:
                                      type: object
                                      properties:
                                        timers:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              fan_speed_mode:
                                                type: string
                                                enum:
                                                  - HARD_OFF
                                                  - SOFT_OFF
                                                  - AUTO
                                                  - SLEEP
                                                  - BOOST
                                                  - TURN_ON
                                                  - MANUAL
                                                  - MANUAL_LEVEL1
                                                  - MANUAL_LEVEL2
                                                  - MANUAL_LEVEL3
                                                  - MANUAL_LEVEL4
                                                  - MANUAL_LEVEL5
                                                  - MANUAL_LEVEL6
                                                  - MANUAL_LEVEL7
                                                  - MANUAL_LEVEL8
                                              timestamp:
                                                type: number
                                            required:
                                              - fan_speed_mode
                                              - timestamp
                                      required:
                                        - timers
                                      nullable: true
                                      description: "The repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                                    non_repeatable_timers:
                                      type: object
                                      properties:
                                        timers:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              fan_speed_mode:
                                                type: string
                                                enum:
                                                  - HARD_OFF
                                                  - SOFT_OFF
                                                  - AUTO
                                                  - SLEEP
                                                  - BOOST
                                                  - TURN_ON
                                                  - MANUAL
                                                  - MANUAL_LEVEL1
                                                  - MANUAL_LEVEL2
                                                  - MANUAL_LEVEL3
                                                  - MANUAL_LEVEL4
                                                  - MANUAL_LEVEL5
                                                  - MANUAL_LEVEL6
                                                  - MANUAL_LEVEL7
                                                  - MANUAL_LEVEL8
                                              timestamp:
                                                type: number
                                            required:
                                              - fan_speed_mode
                                              - timestamp
                                      required:
                                        - timers
                                      nullable: true
                                      description: "The non-repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is as local unix timestamp (so timezone is included), but in minutes, e.g. on 17.05.2021 the time is 27020801. when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                                    aiq_displaying_mode:
                                      type: boolean
                                      nullable: true
                                      description: "false - display AiQ Lights in Inactivity Mode only if red (default option)\n\t\t\t\t\t\ntrue - always display AiQ Lights in Inactivity Mode"
                                    sensor_type:
                                      type: string
                                      enum:
                                        - particles
                                        - TVOC
                                        - both
                                      nullable: true
                                    filter_state:
                                      type: string
                                      enum:
                                        - OK
                                        - MEDIUM_DIRTY
                                        - DIRTY
                                        - MUST_BE_CHANGED
                                      nullable: true
                                    is_particle_sensor_faulty:
                                      type: boolean
                                      nullable: true
                                    is_temp_sensor_faulty:
                                      type: boolean
                                      nullable: true
                                    is_tvoc_sensor_faulty:
                                      type: boolean
                                      nullable: true
                                    timezone:
                                      type: string
                                      nullable: true
                                    display_brightness:
                                      type: number
                                      nullable: true
                                    particles_trigger_values_threshold:
                                      type: object
                                      properties:
                                        particles_trigger_values_threshold_for_level1:
                                          type: number
                                        particles_trigger_values_threshold_for_level2:
                                          type: number
                                        particles_trigger_values_threshold_for_level3:
                                          type: number
                                        particles_trigger_values_threshold_for_level4:
                                          type: number
                                        particles_trigger_values_threshold_for_level5:
                                          type: number
                                        particles_trigger_values_threshold_for_level6:
                                          type: number
                                        particles_trigger_values_threshold_for_level7:
                                          type: number
                                      nullable: true
                                    tvoc_trigger_values_threshold:
                                      type: object
                                      properties:
                                        tvoc_trigger_values_threshold_for_level1:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level2:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level3:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level4:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level5:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level6:
                                          type: number
                                        tvoc_trigger_values_threshold_for_level7:
                                          type: number
                                      nullable: true
                                    auto_mode_fan_rpm:
                                      type: object
                                      properties:
                                        auto_mode_fan_rpm_level1:
                                          type: number
                                        auto_mode_fan_rpm_level2:
                                          type: number
                                        auto_mode_fan_rpm_level3:
                                          type: number
                                        auto_mode_fan_rpm_level4:
                                          type: number
                                        auto_mode_fan_rpm_level5:
                                          type: number
                                        auto_mode_fan_rpm_level6:
                                          type: number
                                        auto_mode_fan_rpm_level7:
                                          type: number
                                        auto_mode_fan_rpm_level8:
                                          type: number
                                      nullable: true
                                    manual_sleep_boost_fan_rpm:
                                      type: object
                                      properties:
                                        manual_mode_fan_rpm_level1:
                                          type: number
                                        manual_mode_fan_rpm_level2:
                                          type: number
                                        manual_mode_fan_rpm_level3:
                                          type: number
                                        manual_mode_fan_rpm_level4:
                                          type: number
                                        manual_mode_fan_rpm_level5:
                                          type: number
                                        manual_mode_fan_rpm_level6:
                                          type: number
                                        manual_mode_fan_rpm_level7:
                                          type: number
                                        manual_mode_fan_rpm_level8:
                                          type: number
                                        boost_mode_fan_rpm:
                                          type: number
                                        sleep_mode_fan_rpm:
                                          type: number
                                      nullable: true
                                    auto_mode_fan_levels_states:
                                      type: object
                                      properties:
                                        auto_mode_fan_state_level1:
                                          type: boolean
                                        auto_mode_fan_state_level2:
                                          type: boolean
                                        auto_mode_fan_state_level3:
                                          type: boolean
                                        auto_mode_fan_state_level4:
                                          type: boolean
                                        auto_mode_fan_state_level5:
                                          type: boolean
                                        auto_mode_fan_state_level6:
                                          type: boolean
                                        auto_mode_fan_state_level7:
                                          type: boolean
                                        auto_mode_fan_state_level8:
                                          type: boolean
                                      nullable: true
                                  nullable: true
                              required:
                                - reported
                                - desired
                                - delta
                              description: Air Purifier AWS IoT Thing shadow object
                            - type: object
                              properties:
                                reported:
                                  type: object
                                  properties:
                                    ens210_ranges:
                                      type: object
                                      properties:
                                        temperature_green:
                                          type: number
                                        temperature_red:
                                          type: number
                                        humidity_yellow_low:
                                          type: number
                                        humidity_yellow_high:
                                          type: number
                                        humidity_red_low:
                                          type: number
                                        humidity_red_high:
                                          type: number
                                      required:
                                        - temperature_green
                                        - temperature_red
                                        - humidity_yellow_low
                                        - humidity_yellow_high
                                        - humidity_red_low
                                        - humidity_red_high
                                      nullable: true
                                    ccs811_ranges:
                                      type: object
                                      properties:
                                        eco2_red:
                                          type: number
                                        eco2_yellow:
                                          type: number
                                        tvoc_red:
                                          type: number
                                        tvoc_yellow:
                                          type: number
                                      required:
                                        - eco2_red
                                        - eco2_yellow
                                        - tvoc_red
                                        - tvoc_yellow
                                      nullable: true
                                    sampling_period:
                                      type: number
                                      nullable: true
                                    timezone:
                                      type: string
                                      nullable: true
                                  required:
                                    - ens210_ranges
                                    - ccs811_ranges
                                    - sampling_period
                                    - timezone
                                  nullable: true
                                desired:
                                  type: object
                                  properties:
                                    ens210_ranges:
                                      type: object
                                      properties:
                                        temperature_green:
                                          type: number
                                        temperature_red:
                                          type: number
                                        humidity_yellow_low:
                                          type: number
                                        humidity_yellow_high:
                                          type: number
                                        humidity_red_low:
                                          type: number
                                        humidity_red_high:
                                          type: number
                                      required:
                                        - temperature_green
                                        - temperature_red
                                        - humidity_yellow_low
                                        - humidity_yellow_high
                                        - humidity_red_low
                                        - humidity_red_high
                                      nullable: true
                                    ccs811_ranges:
                                      type: object
                                      properties:
                                        eco2_red:
                                          type: number
                                        eco2_yellow:
                                          type: number
                                        tvoc_red:
                                          type: number
                                        tvoc_yellow:
                                          type: number
                                      required:
                                        - eco2_red
                                        - eco2_yellow
                                        - tvoc_red
                                        - tvoc_yellow
                                      nullable: true
                                    sampling_period:
                                      type: number
                                      nullable: true
                                    timezone:
                                      type: string
                                      nullable: true
                                  required:
                                    - ens210_ranges
                                    - ccs811_ranges
                                    - sampling_period
                                    - timezone
                                  nullable: true
                                delta:
                                  type: object
                                  properties:
                                    ens210_ranges:
                                      type: object
                                      properties:
                                        temperature_green:
                                          type: number
                                        temperature_red:
                                          type: number
                                        humidity_yellow_low:
                                          type: number
                                        humidity_yellow_high:
                                          type: number
                                        humidity_red_low:
                                          type: number
                                        humidity_red_high:
                                          type: number
                                      nullable: true
                                    ccs811_ranges:
                                      type: object
                                      properties:
                                        eco2_red:
                                          type: number
                                        eco2_yellow:
                                          type: number
                                        tvoc_red:
                                          type: number
                                        tvoc_yellow:
                                          type: number
                                      nullable: true
                                    sampling_period:
                                      type: number
                                      nullable: true
                                    timezone:
                                      type: string
                                      nullable: true
                                  nullable: true
                              required:
                                - reported
                                - desired
                                - delta
                              description: Air Sensor AWS IoT Thing shadow object
                          nullable: true
                        lastMetrics:
                          oneOf:
                            - type: object
                              properties:
                                deviceId:
                                  type: string
                                time:
                                  type: number
                                  minimum: 0
                                  maximum: 9999999999
                                  description: Date in seconds since epoch (UTC time)
                                  example: 1579098983
                                temperature:
                                  type: number
                                  description: >-
                                    What is the current target temperature for
                                    the heater regulator. Temperature in Celsius
                                    degrees
                                humidity:
                                  type: number
                                  description: "SOCKET: Measured humidity - Relative humidity percentage multiplied by 100.\n\t\t\t\t\t\t\nValid ONLY FOR SOCKET HEATER. So for the panel heater, this field will be dummy bytes.\n\t\t\t\t\t\t\nCONVECTOR: Tilt sensor state. 1 = convector fallen and not heating"
                                temperatureAmbient:
                                  type: number
                                  description: >-
                                    Actual temperature after applying the
                                    calibration offset. If the temperature
                                    sensor is faulty, this field will be equal
                                    -100 C. Temperature in Celsius degrees
                                currentPower:
                                  type: number
                                  description: >-
                                    Power measured with the dedicated IC chip.
                                    In Watts. Due to the chip behavior, this
                                    value is filtered for a few seconds. To
                                    determine if the heater is heating RIGHT NOW
                                    use the control_signal field or heater_flag
                                controlSignal:
                                  type: number
                                  description: >-
                                    Current value of control signal - so the
                                    percentage of the maximum heater power.
                                    Value from 0 to 100. It is the value applied
                                    by the heater right now
                                currentOperationMode:
                                  type: number
                                  description: "0 - \"Off\"\n\t\t\t\t\t\t\n1 - \"Weekly program\"\n\t\t\t\t\t\t\n2 - \"Independent device\" (uses timers)\n\t\t\t\t\t\t\n3 - \"Control Individually\" (follows the single set temperature)"
                                energyUsage:
                                  type: number
                                  description: >-
                                    Energy used since the heater startup. In
                                    Wh. 
                                timeSinceHeaterStartup:
                                  type: number
                                  description: >-
                                    Time in seconds since heater startup.
                                    Knowing this information and energy_usage
                                    the cloud can calculate the energy usage in
                                    any time range (e.g. during last 24 hours)
                                openWindowsStatus:
                                  type: number
                                  description: "Whether the open window functionality is enabled (can be activated by opening a window) and active now (was triggered and the heater is not heating).\n\t\t\t\t 0 - disabled, not active now 3 - enabled, not active now 2 - enabled and active now!"
                                currentTemperatureTypeInWeeklyProgram:
                                  type: number
                                  description: "Current temperature type: 0=normal, 1=comfort, 2=sleep, 3=away, 4=vacation, 5=off\n\t\t\tTemperature type followed currently (only if weekly program is active).\n\t\t\tIf the heater is in other mode than \"Weekly program\" this field will contains value \"-1\".\n\t\t\tIf the NTP time is not synchronized this field will contain value \"-2\" (because when NTP time is not synchronized, current weekly program status cannot be determined"
                                heaterFlag:
                                  type: number
                                  description: 'Heating/Cooling status: 0=off, 1=on'
                                powerStatus:
                                  type: number
                                  description: >-
                                    If the device is on (not in operation mode
                                    off or temperature is not set to 0): 0=off,
                                    1=on
                              required:
                                - deviceId
                                - time
                                - temperature
                                - humidity
                                - temperatureAmbient
                                - currentPower
                                - controlSignal
                                - currentOperationMode
                                - energyUsage
                                - timeSinceHeaterStartup
                                - openWindowsStatus
                                - currentTemperatureTypeInWeeklyProgram
                                - heaterFlag
                                - powerStatus
                              description: >-
                                Heater last metrics. If null, no metrics were
                                found
                            - type: object
                              properties:
                                deviceId:
                                  type: string
                                  description: AWS IoT Thing Name (UUID)
                                time:
                                  type: number
                                  minimum: 0
                                  maximum: 9999999999
                                  description: Date in seconds since epoch (UTC time)
                                  example: 1579098983
                                setFanLevelInAuto:
                                  type: number
                                  description: >-
                                    Current fan speed level, relevant only when
                                    operation_mode=auto. Level1=0, Level8=7
                                controlSignal:
                                  type: number
                                  description: >-
                                    Current value of control signal applied to
                                    the device motor. So it is the percentage of
                                    maximum motor input signal.
                                massPm_10:
                                  type: number
                                  description: >-
                                    Mass of particles with diameter < 1
                                    micrometers in volume of one cubic meter
                                    [µg/m3] in range <0,1000>
                                particles10Level:
                                  type: number
                                  description: >-
                                    Warning level of mass of particles with
                                    diameter < 1 micrometers
                                massPm_25:
                                  type: number
                                  description: >-
                                    Mass of particles with diameter < 2.5
                                    micrometers in volume of one cubic meter
                                    [µg/m3] in range <0,1000>
                                particles25Level:
                                  type: number
                                  description: >-
                                    Warning level of mass of particles with
                                    diameter < 2.5 micrometers
                                massPm_100:
                                  type: number
                                  description: >-
                                    Mass of particles with diameter < 10.0
                                    micrometers in volume of one cubic meter
                                    [µg/m3] in range <0,1000>
                                particles100Level:
                                  type: number
                                  description: >-
                                    Warning level of mass of particles with
                                    diameter < 10 micrometers
                                numberPm_05:
                                  type: number
                                  description: >-
                                    Total number of particles wit diameter < 0.5
                                    micrometers in cubic centimeter [#/cm3] in
                                    range <0,3000>
                                numberPm_10:
                                  type: number
                                  description: >-
                                    Total number of particles wit diameter < 1
                                    micrometers in cubic centimeter [#/cm3] in
                                    range <0,3000>
                                numberPm_25:
                                  type: number
                                  description: >-
                                    Total number of particles wit diameter < 2.5
                                    micrometers in cubic centimeter [#/cm3] in
                                    range <0,3000>
                                numberPm_50:
                                  type: number
                                  description: >-
                                    Total number of particles wit diameter < 5
                                    micrometers in cubic centimeter [#/cm3] in
                                    range <0,3000>
                                numberPm_100:
                                  type: number
                                  description: >-
                                    Total number of particles wit diameter < 10
                                    micrometers in cubic centimeter [#/cm3] in
                                    range <0,3000>
                                temperature:
                                  type: number
                                  description: Temperature in Celsius degrees
                                temperatureLevel:
                                  type: number
                                  description: Warning level of temperature
                                humidity:
                                  type: number
                                  description: >-
                                    Relative humidity in percents %, multiplied
                                    by 100
                                humidityLevel:
                                  type: number
                                  description: Warning level of humidity
                                runtimeLevelSleepMs:
                                  type: number
                                  description: >-
                                    Number of milliseconds, during which the
                                    device works in sleep mode
                                runtimeLevelBoostMs:
                                  type: number
                                  description: >-
                                    Number of milliseconds, during which the
                                    device works in boost mode
                                runtimeLevelLevel1Ms:
                                  type: number
                                  description: >-
                                    Number of milliseconds, during which the
                                    device using Level1 fan speed (in auto and
                                    manual)
                                runtimeLevelLevel2Ms:
                                  type: number
                                  description: >-
                                    Number of milliseconds, during which the
                                    device using Level2 fan speed (in auto and
                                    manual)
                                runtimeLevelLevel3Ms:
                                  type: number
                                  description: >-
                                    Number of milliseconds, during which the
                                    device using Level3 fan speed (in auto and
                                    manual)
                                runtimeLevelLevel4Ms:
                                  type: number
                                  description: >-
                                    Number of milliseconds, during which the
                                    device using Level4 fan speed (in auto and
                                    manual)
                                runtimeLevelLevel5Ms:
                                  type: number
                                  description: >-
                                    Number of milliseconds, during which the
                                    device using Level5 fan speed (in auto and
                                    manual)
                                runtimeLevelLevel6Ms:
                                  type: number
                                  description: >-
                                    Number of milliseconds, during which the
                                    device using Level6 fan speed (in auto and
                                    manual)
                                runtimeLevelLevel7Ms:
                                  type: number
                                  description: >-
                                    Number of milliseconds, during which the
                                    device using Level7 fan speed (in auto and
                                    manual)
                                runtimeLevelLevel8Ms:
                                  type: number
                                  description: >-
                                    Number of milliseconds, during which the
                                    device using Level8 fan speed (in auto and
                                    manual)
                                airQualityIndex:
                                  type: number
                                  description: >-
                                    Air Quality Index calculated from TVOC and
                                    eCO2 measurements by sensor, in range <1,5>
                                eco2:
                                  type: number
                                  description: >-
                                    Equivalent CO2 in range <400-65000> [parts
                                    per million CO2 equiv.]
                                eco2Level:
                                  type: number
                                  description: Warning level of CO2
                                tvoc:
                                  type: number
                                  description: >-
                                    Total Volatile Organic Compounds in range
                                    <0-65000> [part per billion]
                                tvocLevel:
                                  type: number
                                  description: >-
                                    Warning level of Total Volatile Organic
                                    Compounds
                              required:
                                - deviceId
                                - time
                                - setFanLevelInAuto
                                - controlSignal
                                - massPm_10
                                - particles10Level
                                - massPm_25
                                - particles25Level
                                - massPm_100
                                - particles100Level
                                - numberPm_05
                                - numberPm_10
                                - numberPm_25
                                - numberPm_50
                                - numberPm_100
                                - temperature
                                - temperatureLevel
                                - humidity
                                - humidityLevel
                                - runtimeLevelSleepMs
                                - runtimeLevelBoostMs
                                - runtimeLevelLevel1Ms
                                - runtimeLevelLevel2Ms
                                - runtimeLevelLevel3Ms
                                - runtimeLevelLevel4Ms
                                - runtimeLevelLevel5Ms
                                - runtimeLevelLevel6Ms
                                - runtimeLevelLevel7Ms
                                - runtimeLevelLevel8Ms
                                - airQualityIndex
                                - eco2
                                - eco2Level
                                - tvoc
                                - tvocLevel
                              description: >-
                                Air purifier last metrics. If null, no metrics
                                were found
                            - type: object
                              properties:
                                deviceId:
                                  type: string
                                time:
                                  type: number
                                  minimum: 0
                                  maximum: 9999999999
                                  description: Date in seconds since epoch (UTC time)
                                  example: 1579098983
                                temperature:
                                  type: number
                                  description: Temperature in Celsius degrees
                                humidity:
                                  type: number
                                  description: 2 - bytes [ unsigned integer ] [ 100 x 1%]
                                eco2:
                                  type: number
                                  description: >-
                                    2 - bytes [ unsigned integer ] [ parts per
                                    million ]
                                tvoc:
                                  type: number
                                  description: >-
                                    2 - bytes [ unsigned integer ] [ parts per
                                    million ]
                                batteryPercentage:
                                  type: number
                                  description: 2 - bytes [ unsigned integer ] [ 10 x 1% ]
                                batteryVoltage:
                                  type: number
                                  description: >-
                                    2 - bytes [ unsigned integer ] [ millivolts
                                    ]
                                chargingStatus:
                                  type: number
                                  description: >-
                                    0 - not charging ; 1 - charging with LED
                                    turn Off; 2 - charging with LED turn On (
                                    updated 2 - 30 s after change )
                                tvocSensorCalibrated:
                                  type: boolean
                                  description: false - not calibrated, true - calibrated
                                tvocSensorCountdownRemainingTime:
                                  type: number
                                  description: >-
                                    Seconds to finish calibration, if sensor
                                    calibrated then equal to 0
                                tvocSensorCountdownRemainingTimeTo:
                                  type: number
                                  description: >-
                                    Seconds to finish calibration, if sensor
                                    calibrated then equal to 0
                                tvocSensorCountdownTotalTime:
                                  type: number
                                  description: >-
                                    Total time needed to perform tvoc sensor
                                    calibration
                                ens210SensorCalibrated:
                                  type: boolean
                                  description: false - not calibrated, true - calibrated
                                ens210SensorCountdownRemainingTime:
                                  type: number
                                  description: >-
                                    Seconds to finish calibration, if sensor
                                    calibrated then equal to 0
                                ens210SensorCountdownRemainingTimeTo:
                                  type: number
                                  description: Seconds to finish calibration
                                ens210SensorCountdownTotalTime:
                                  type: number
                                  description: >-
                                    Total time needed to perform ens210 sensor
                                    calibration
                              required:
                                - deviceId
                                - time
                                - temperature
                                - humidity
                                - eco2
                                - tvoc
                                - batteryPercentage
                                - batteryVoltage
                                - chargingStatus
                                - tvocSensorCalibrated
                                - tvocSensorCountdownRemainingTime
                                - tvocSensorCountdownRemainingTimeTo
                                - tvocSensorCountdownTotalTime
                                - ens210SensorCalibrated
                                - ens210SensorCountdownRemainingTime
                                - ens210SensorCountdownRemainingTimeTo
                                - ens210SensorCountdownTotalTime
                              description: >-
                                Air sensor last metrics. If null, no metrics
                                were found
                          nullable: true
                          description: >-
                            Last metrics sent by device. Type of object matches
                            to device type. If null, no metrics were found
                        energyUsageForCurrentDay:
                          type: number
                          description: >-
                            Energy usage for current calendar day. Measured in
                            Wh
                        nearestTimer:
                          type: object
                          properties:
                            time:
                              type: number
                              description: Minutes until next timer activates
                            setting:
                              type: string
                              description: Setting to activate
                          required:
                            - time
                            - setting
                          description: Nearest timer to activate
                        airSensorAdditionalItems:
                          type: object
                          properties:
                            tempColor:
                              type: number
                              description: >-
                                Temperature color, 1=red, 2=yellow, 3=green,
                                4=blue
                            humidityColor:
                              type: number
                              description: Humidity color, 1=red, 2=yellow, 3=green, 4=blue
                            tvocColor:
                              type: number
                              description: TVOC color, 1=red, 2=yellow, 3=green, 4=blue
                            eco2Color:
                              type: number
                              description: ECO2 color, 1=red, 2=yellow, 3=green, 4=blue
                            maxTvoc:
                              type: number
                              description: Maximum TVOC for the progress bar
                            changePeriod:
                              type: boolean
                              nullable: true
                              description: Is it possible to change the Period
                          required:
                            - tempColor
                            - humidityColor
                            - tvocColor
                            - eco2Color
                            - maxTvoc
                            - changePeriod
                          description: Air sensor additional items.
                          nullable: true
                      required:
                        - deviceId
                        - macAddress
                        - deviceType
                        - isConnected
                        - customName
                        - houseId
                        - roomId
                        - isArchived
                        - isEnabled
                        - controlSource
                        - createdAt
                        - deviceSettings
                        - lastMetrics
                        - energyUsageForCurrentDay
                        - airSensorAdditionalItems
                required:
                  - items
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HouseNotFoundError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: getIndependentDevices
      summary: Get house independent devices
      description: >-
        Returns a list of devices from chosen house which are not placed to any
        room
      parameters:
        - schema:
            type: string
            enum:
              - heatersAndSockets
              - sensorsAndPurifiers
          name: filterDevices
          in: query
          style: form
          explode: false
          required: false
    parameters:
      - schema:
          type: string
          description: House ID
          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
        name: houseId
        in: path
        required: true
        description: House ID
  /houses/{houseId}/devices/grouped/type:
    get:
      tags:
        - house
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    deviceType:
                      type: string
                      nullable: true
                      description: ID of parent type
                      example: Heater
                    devices:
                      type: array
                      items:
                        type: object
                        properties:
                          deviceId:
                            type: string
                            format: uuid
                            description: Device ID
                          macAddress:
                            type: string
                            description: MAC address of the device
                            example: '00:00:00:00:00:00'
                          deviceType:
                            type: object
                            properties:
                              childType:
                                type: object
                                properties:
                                  id:
                                    type: string
                                    format: uuid
                                    description: Device Type ID
                                  name:
                                    type: string
                                    description: Name of type
                                    example: GL-Oil Heater G3
                                required:
                                  - id
                                  - name
                              parentType:
                                type: object
                                properties:
                                  id:
                                    type: string
                                    format: uuid
                                    description: Device Type ID
                                  name:
                                    type: string
                                    description: Name of type
                                    example: GL-Oil Heater G3
                                required:
                                  - id
                                  - name
                            required:
                              - childType
                              - parentType
                          isConnected:
                            type: boolean
                            description: Whether the device is connected to the network
                          customName:
                            type: string
                            nullable: true
                            description: Custom name of the device
                            example: My device
                          houseId:
                            type: string
                            description: House ID where the device is located
                            example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                            nullable: true
                          roomId:
                            type: string
                            description: Room ID where the device is located
                            example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
                            nullable: true
                          isArchived:
                            type: boolean
                            description: Whether the device is archived
                          isEnabled:
                            type: boolean
                            nullable: true
                            description: Whether the device is on/off
                          controlSource:
                            type: string
                            enum:
                              - mobile_api
                              - open_api
                              - tibber
                            description: >-
                              Control source of the device. By default it is
                              "mobile_api"
                            example: tibber
                          createdAt:
                            type: string
                            format: date-time
                            nullable: true
                            description: Device creation date
                          deviceSettings:
                            oneOf:
                              - type: object
                                properties:
                                  reported:
                                    type: object
                                    properties:
                                      operation_mode:
                                        type: string
                                        enum:
                                          - weekly_program
                                          - 'off'
                                          - independent_device
                                          - control_individually
                                        nullable: true
                                        description: "\n\"off\"  - all control disable\n\t\t\n\"weekly_program\" - follow the weekly program, changing temperature by display buttons changes the temperature of the current temperature mode\n\t\t\n\"independent_device\"  - follow the single set value, with timers enabled\n\t\t\n\"control_individually\"  - follow the single set value, but not use any timers or weekly program"
                                      override_weekly_program:
                                        type: object
                                        properties:
                                          value_type:
                                            type: string
                                            enum:
                                              - comfort
                                              - sleep
                                              - away
                                              - normal
                                              - always_heating
                                              - 'off'
                                            nullable: true
                                          ends_at:
                                            type: number
                                            nullable: true
                                            description: >-
                                              UTC timestamp in seconds when the
                                              override mode ends
                                        required:
                                          - value_type
                                          - ends_at
                                        nullable: true
                                        description: >-
                                          Overwrite the currently running weekly
                                          program with a temporary change of a
                                          specific temperature type (e.g.
                                          comfort). Time value of 0 means weekly
                                          program overwrite is not active anymore
                                          (disabled). Time should be a UTC
                                          timestamp when the program should end
                                      non_repeatable_timers:
                                        type: object
                                        properties:
                                          timers:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                value_type:
                                                  type: string
                                                  enum:
                                                    - normal
                                                    - 'off'
                                                    - always_heating
                                                timestamp:
                                                  type: number
                                              required:
                                                - value_type
                                                - timestamp
                                        required:
                                          - timers
                                        nullable: true
                                        description: >-
                                          A single pair represents time and value
                                          when the temperature mode should be
                                          changed. Time defines when to switch to
                                          a specific temperature type (set in the
                                          second field of the pair). Time is as
                                          local unix timestamp (so timezone is
                                          included), but in minutes, e.g. on
                                          17.05.2021 the time is 27020801. Allowed
                                          temperature types for timers: "normal",
                                          "off", "always_heating". Only used in
                                          independent mode
                                      temperature_normal:
                                        type: number
                                        minimum: 0
                                        maximum: 100
                                        nullable: true
                                        description: >-
                                          Set temperature value, used for
                                          operation modes "Independent device" and
                                          timers
                                      temperature_comfort:
                                        type: number
                                        minimum: 0
                                        maximum: 50
                                        nullable: true
                                      temperature_sleep:
                                        type: number
                                        minimum: 0
                                        maximum: 50
                                        nullable: true
                                      temperature_away:
                                        type: number
                                        minimum: 0
                                        maximum: 50
                                        nullable: true
                                      temperature_vacation:
                                        type: number
                                        minimum: 0
                                        maximum: 50
                                        nullable: true
                                      temperature_last_set:
                                        type: number
                                        minimum: 0
                                        maximum: 100
                                        nullable: true
                                        description: >-
                                          The temperature that the device is
                                          currently following
                                      vacation_mode:
                                        type: object
                                        properties:
                                          start_timestamp:
                                            type: number
                                            nullable: true
                                            description: >-
                                              UTC timestamp in minutes when the
                                              vacation mode starts
                                          end_timestamp:
                                            type: number
                                            nullable: true
                                            description: >-
                                              UTC timestamp in minutes when the
                                              vacation mode ends
                                          advanced:
                                            type: boolean
                                            nullable: true
                                            description: >-
                                              Advanced vacation mode - heaters will be
                                              regulated regarding "away" temperature
                                              by each room: false=OFF, true=ON
                                        required:
                                          - start_timestamp
                                          - end_timestamp
                                          - advanced
                                        nullable: true
                                      lock_status:
                                        type: string
                                        enum:
                                          - no_lock
                                          - child
                                          - commercial
                                        nullable: true
                                      predictive_heating_type:
                                        type: string
                                        enum:
                                          - 'off'
                                          - simple
                                          - advanced
                                        nullable: true
                                        description: "\n\"off\" - No predictive heating. Temperature will be change exactly with the weekly program timer\n\t\t\n\"simple\"  - Simple predictive heating. Temperature will be change before the timer, with a fixed time for each Celsius degree\n\t\t\n\"advanced\" - Advanced predictive heating. Temperature will be change before the timer, with a time based on the current room model. Model is estimated while running."
                                      open_window:
                                        type: object
                                        properties:
                                          drop_temperature_threshold:
                                            type: number
                                            description: >-
                                              Required temperature drop to trigger
                                              (activate) the open window
                                              functionality, in Celsius degrees
                                          drop_time_range:
                                            type: number
                                            description: >-
                                              Time range when a drop of temperature
                                              will be expected, in seconds
                                          increase_temperature_threshold:
                                            type: number
                                            description: >-
                                              Required temperature increase to
                                              deactivate open window functionality
                                          increase_time_range:
                                            type: number
                                            description: >-
                                              Time range when an increase of
                                              temperature will be expected, in seconds
                                          max_time:
                                            type: number
                                            description: >-
                                              Max time duration of the open window
                                              activeness
                                          enabled:
                                            type: boolean
                                            description: >-
                                              State of the open window functionality.
                                              True if open window functionality is
                                              enabled (that is whether the device can
                                              go into this mode while operating)
                                          activated:
                                            type: boolean
                                            description: >-
                                              Current state of the open window. True
                                              if open window is currently detected by
                                              device and is activated. You can
                                              deactivate currently detected open
                                              window by changing this value to false.
                                        required:
                                          - enabled
                                        nullable: true
                                      temperature_calibration_offset:
                                        type: number
                                        nullable: true
                                        description: Offset for ambient temperature
                                      display_unit:
                                        type: string
                                        enum:
                                          - celsius
                                          - fahrenheit
                                        nullable: true
                                        description: >-
                                          the temperature units: "celsius" or
                                          "fahrenheit" to set
                                      oil_heater_power_level:
                                        oneOf:
                                          - type: number
                                            enum:
                                              - 40
                                          - type: number
                                            enum:
                                              - 60
                                          - type: number
                                            enum:
                                              - 100
                                        nullable: true
                                        description: >-
                                          Set the max heating level in percentage
                                          of the nominal wattage. Oil heater
                                          allows setting 3 different max power
                                          settings (40, 60 or 100% of the power),
                                          done by selecting number of active
                                          heating elements.
                                      temperature_in_independent_mode:
                                        type: number
                                        minimum: 0
                                        maximum: 100
                                        nullable: true
                                        description: >-
                                          Change temperature in independent mode
                                          now. Use values 0.0 and 99.0 to set
                                          ALWAYS_ON and ALWAYS_OFF, respectively.
                                          Apart from changing value for some
                                          temperature type, in "Independent
                                          device" operation mode, one also needs
                                          to call this command to change the
                                          current temperature
                                      additional_socket_mode:
                                        type: string
                                        enum:
                                          - heating
                                          - cooling
                                          - always_on
                                          - always_off
                                        nullable: true
                                        description: "Command only for the socket heater, to select heating/cooling mode. ALWAYS_ON, ALWAYS_OFF modes just for convenience, as if these can be enabled also by other commands.\n\t\t"
                                      pid_parameters:
                                        type: object
                                        properties:
                                          kp:
                                            type: number
                                            description: The proportional part gain
                                          ki:
                                            type: number
                                            description: The integral part gain
                                          kd:
                                            type: number
                                            description: The derivative part gain
                                          kd_filter_N:
                                            type: number
                                            description: The derivative filter time coefficient
                                          windup_limit:
                                            type: number
                                            description: >-
                                              The windup limit for integral part from
                                              0 to 100
                                        required:
                                          - kp
                                          - ki
                                          - kd
                                          - kd_filter_N
                                          - windup_limit
                                        nullable: true
                                      max_heater_power:
                                        type: number
                                        nullable: true
                                        description: Set max heater power in Watts
                                      limited_heating_power:
                                        type: number
                                        minimum: 10
                                        maximum: 100
                                        nullable: true
                                        description: >-
                                          Only for heaters with triac
                                          (panel/storage). Allows to limit the
                                          heating percentage between 10 and 100
                                          percent.
                                      hysteresis:
                                        type: object
                                        properties:
                                          upper:
                                            type: number
                                            description: >-
                                              Set hysteresis parameters. Setting
                                              hysteresis parameters will change
                                              current regulator type to hysteresis.
                                              Upper offset (set temp + this -> stop
                                              heat)
                                          lower:
                                            type: number
                                            description: >-
                                              Set hysteresis parameters. Setting
                                              hysteresis parameters will change
                                              current regulator type to hysteresis.
                                              Lower offset (set temp - this -> start
                                              heat)
                                        required:
                                          - upper
                                          - lower
                                        nullable: true
                                      regulator_type:
                                        type: string
                                        enum:
                                          - pid
                                          - hysteresis_or_slow_pid
                                          - unknown
                                        nullable: true
                                      timezone:
                                        type: string
                                        nullable: true
                                      calibration_target_ambient_temperature:
                                        type: number
                                        nullable: true
                                        description: >-
                                          Target for calibrating ambient
                                          temperature for heaters gen.2
                                      fan_state:
                                        type: string
                                        enum:
                                          - 'on'
                                          - 'off'
                                        nullable: true
                                        description: Fan state of convection heaters gen.2
                                      weekly_program:
                                        type: object
                                        properties:
                                          timers:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                value_type:
                                                  type: string
                                                  enum:
                                                    - comfort
                                                    - sleep
                                                    - away
                                                    - normal
                                                    - always_heating
                                                    - 'off'
                                                timestamp:
                                                  type: number
                                              required:
                                                - value_type
                                                - timestamp
                                        required:
                                          - timers
                                        nullable: true
                                        description: "The weekly program is a list of repeating pairs of values. A single pair represents time and value when the temperature mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific temperature type (set in the second field of the pair). Needs to be ordered ascending by time.\n\t\t\nFor mode \"independent device\" use only temperature types OFF and NORMAL, to avoid issues with changing the temperature by buttons from the heater"
                                    required:
                                      - operation_mode
                                      - override_weekly_program
                                      - non_repeatable_timers
                                      - temperature_normal
                                      - temperature_comfort
                                      - temperature_sleep
                                      - temperature_away
                                      - temperature_vacation
                                      - vacation_mode
                                      - lock_status
                                      - predictive_heating_type
                                      - open_window
                                      - temperature_calibration_offset
                                      - display_unit
                                      - oil_heater_power_level
                                      - temperature_in_independent_mode
                                      - additional_socket_mode
                                      - pid_parameters
                                      - max_heater_power
                                      - limited_heating_power
                                      - hysteresis
                                      - regulator_type
                                      - timezone
                                      - calibration_target_ambient_temperature
                                      - fan_state
                                      - weekly_program
                                    nullable: true
                                  desired:
                                    type: object
                                    properties:
                                      operation_mode:
                                        type: string
                                        enum:
                                          - weekly_program
                                          - 'off'
                                          - independent_device
                                          - control_individually
                                        nullable: true
                                        description: "\n\"off\"  - all control disable\n\t\t\n\"weekly_program\" - follow the weekly program, changing temperature by display buttons changes the temperature of the current temperature mode\n\t\t\n\"independent_device\"  - follow the single set value, with timers enabled\n\t\t\n\"control_individually\"  - follow the single set value, but not use any timers or weekly program"
                                      override_weekly_program:
                                        type: object
                                        properties:
                                          value_type:
                                            type: string
                                            enum:
                                              - comfort
                                              - sleep
                                              - away
                                              - normal
                                              - always_heating
                                              - 'off'
                                            nullable: true
                                          ends_at:
                                            type: number
                                            nullable: true
                                            description: >-
                                              UTC timestamp in seconds when the
                                              override mode ends
                                        required:
                                          - value_type
                                          - ends_at
                                        nullable: true
                                        description: >-
                                          Overwrite the currently running weekly
                                          program with a temporary change of a
                                          specific temperature type (e.g.
                                          comfort). Time value of 0 means weekly
                                          program overwrite is not active anymore
                                          (disabled). Time should be a UTC
                                          timestamp when the program should end
                                      non_repeatable_timers:
                                        type: object
                                        properties:
                                          timers:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                value_type:
                                                  type: string
                                                  enum:
                                                    - normal
                                                    - 'off'
                                                    - always_heating
                                                timestamp:
                                                  type: number
                                              required:
                                                - value_type
                                                - timestamp
                                        required:
                                          - timers
                                        nullable: true
                                        description: >-
                                          A single pair represents time and value
                                          when the temperature mode should be
                                          changed. Time defines when to switch to
                                          a specific temperature type (set in the
                                          second field of the pair). Time is as
                                          local unix timestamp (so timezone is
                                          included), but in minutes, e.g. on
                                          17.05.2021 the time is 27020801. Allowed
                                          temperature types for timers: "normal",
                                          "off", "always_heating". Only used in
                                          independent mode
                                      temperature_normal:
                                        type: number
                                        minimum: 0
                                        maximum: 100
                                        nullable: true
                                        description: >-
                                          Set temperature value, used for
                                          operation modes "Independent device" and
                                          timers
                                      temperature_comfort:
                                        type: number
                                        minimum: 0
                                        maximum: 50
                                        nullable: true
                                      temperature_sleep:
                                        type: number
                                        minimum: 0
                                        maximum: 50
                                        nullable: true
                                      temperature_away:
                                        type: number
                                        minimum: 0
                                        maximum: 50
                                        nullable: true
                                      temperature_vacation:
                                        type: number
                                        minimum: 0
                                        maximum: 50
                                        nullable: true
                                      temperature_last_set:
                                        type: number
                                        minimum: 0
                                        maximum: 100
                                        nullable: true
                                        description: >-
                                          The temperature that the device is
                                          currently following
                                      vacation_mode:
                                        type: object
                                        properties:
                                          start_timestamp:
                                            type: number
                                            nullable: true
                                            description: >-
                                              UTC timestamp in minutes when the
                                              vacation mode starts
                                          end_timestamp:
                                            type: number
                                            nullable: true
                                            description: >-
                                              UTC timestamp in minutes when the
                                              vacation mode ends
                                          advanced:
                                            type: boolean
                                            nullable: true
                                            description: >-
                                              Advanced vacation mode - heaters will be
                                              regulated regarding "away" temperature
                                              by each room: false=OFF, true=ON
                                        required:
                                          - start_timestamp
                                          - end_timestamp
                                          - advanced
                                        nullable: true
                                      lock_status:
                                        type: string
                                        enum:
                                          - no_lock
                                          - child
                                          - commercial
                                        nullable: true
                                      predictive_heating_type:
                                        type: string
                                        enum:
                                          - 'off'
                                          - simple
                                          - advanced
                                        nullable: true
                                        description: "\n\"off\" - No predictive heating. Temperature will be change exactly with the weekly program timer\n\t\t\n\"simple\"  - Simple predictive heating. Temperature will be change before the timer, with a fixed time for each Celsius degree\n\t\t\n\"advanced\" - Advanced predictive heating. Temperature will be change before the timer, with a time based on the current room model. Model is estimated while running."
                                      open_window:
                                        type: object
                                        properties:
                                          drop_temperature_threshold:
                                            type: number
                                            description: >-
                                              Required temperature drop to trigger
                                              (activate) the open window
                                              functionality, in Celsius degrees
                                          drop_time_range:
                                            type: number
                                            description: >-
                                              Time range when a drop of temperature
                                              will be expected, in seconds
                                          increase_temperature_threshold:
                                            type: number
                                            description: >-
                                              Required temperature increase to
                                              deactivate open window functionality
                                          increase_time_range:
                                            type: number
                                            description: >-
                                              Time range when an increase of
                                              temperature will be expected, in seconds
                                          max_time:
                                            type: number
                                            description: >-
                                              Max time duration of the open window
                                              activeness
                                          enabled:
                                            type: boolean
                                            description: >-
                                              State of the open window functionality.
                                              True if open window functionality is
                                              enabled (that is whether the device can
                                              go into this mode while operating)
                                          activated:
                                            type: boolean
                                            description: >-
                                              Current state of the open window. True
                                              if open window is currently detected by
                                              device and is activated. You can
                                              deactivate currently detected open
                                              window by changing this value to false.
                                        required:
                                          - enabled
                                        nullable: true
                                      temperature_calibration_offset:
                                        type: number
                                        nullable: true
                                        description: Offset for ambient temperature
                                      display_unit:
                                        type: string
                                        enum:
                                          - celsius
                                          - fahrenheit
                                        nullable: true
                                        description: >-
                                          the temperature units: "celsius" or
                                          "fahrenheit" to set
                                      oil_heater_power_level:
                                        oneOf:
                                          - type: number
                                            enum:
                                              - 40
                                          - type: number
                                            enum:
                                              - 60
                                          - type: number
                                            enum:
                                              - 100
                                        nullable: true
                                        description: >-
                                          Set the max heating level in percentage
                                          of the nominal wattage. Oil heater
                                          allows setting 3 different max power
                                          settings (40, 60 or 100% of the power),
                                          done by selecting number of active
                                          heating elements.
                                      temperature_in_independent_mode:
                                        type: number
                                        minimum: 0
                                        maximum: 100
                                        nullable: true
                                        description: >-
                                          Change temperature in independent mode
                                          now. Use values 0.0 and 99.0 to set
                                          ALWAYS_ON and ALWAYS_OFF, respectively.
                                          Apart from changing value for some
                                          temperature type, in "Independent
                                          device" operation mode, one also needs
                                          to call this command to change the
                                          current temperature
                                      additional_socket_mode:
                                        type: string
                                        enum:
                                          - heating
                                          - cooling
                                          - always_on
                                          - always_off
                                        nullable: true
                                        description: "Command only for the socket heater, to select heating/cooling mode. ALWAYS_ON, ALWAYS_OFF modes just for convenience, as if these can be enabled also by other commands.\n\t\t"
                                      pid_parameters:
                                        type: object
                                        properties:
                                          kp:
                                            type: number
                                            description: The proportional part gain
                                          ki:
                                            type: number
                                            description: The integral part gain
                                          kd:
                                            type: number
                                            description: The derivative part gain
                                          kd_filter_N:
                                            type: number
                                            description: The derivative filter time coefficient
                                          windup_limit:
                                            type: number
                                            description: >-
                                              The windup limit for integral part from
                                              0 to 100
                                        required:
                                          - kp
                                          - ki
                                          - kd
                                          - kd_filter_N
                                          - windup_limit
                                        nullable: true
                                      max_heater_power:
                                        type: number
                                        nullable: true
                                        description: Set max heater power in Watts
                                      limited_heating_power:
                                        type: number
                                        minimum: 10
                                        maximum: 100
                                        nullable: true
                                        description: >-
                                          Only for heaters with triac
                                          (panel/storage). Allows to limit the
                                          heating percentage between 10 and 100
                                          percent.
                                      hysteresis:
                                        type: object
                                        properties:
                                          upper:
                                            type: number
                                            description: >-
                                              Set hysteresis parameters. Setting
                                              hysteresis parameters will change
                                              current regulator type to hysteresis.
                                              Upper offset (set temp + this -> stop
                                              heat)
                                          lower:
                                            type: number
                                            description: >-
                                              Set hysteresis parameters. Setting
                                              hysteresis parameters will change
                                              current regulator type to hysteresis.
                                              Lower offset (set temp - this -> start
                                              heat)
                                        required:
                                          - upper
                                          - lower
                                        nullable: true
                                      regulator_type:
                                        type: string
                                        enum:
                                          - pid
                                          - hysteresis_or_slow_pid
                                          - unknown
                                        nullable: true
                                      timezone:
                                        type: string
                                        nullable: true
                                      calibration_target_ambient_temperature:
                                        type: number
                                        nullable: true
                                        description: >-
                                          Target for calibrating ambient
                                          temperature for heaters gen.2
                                      fan_state:
                                        type: string
                                        enum:
                                          - 'on'
                                          - 'off'
                                        nullable: true
                                        description: Fan state of convection heaters gen.2
                                      weekly_program:
                                        type: object
                                        properties:
                                          timers:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                value_type:
                                                  type: string
                                                  enum:
                                                    - comfort
                                                    - sleep
                                                    - away
                                                    - normal
                                                    - always_heating
                                                    - 'off'
                                                timestamp:
                                                  type: number
                                              required:
                                                - value_type
                                                - timestamp
                                        required:
                                          - timers
                                        nullable: true
                                        description: "The weekly program is a list of repeating pairs of values. A single pair represents time and value when the temperature mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific temperature type (set in the second field of the pair). Needs to be ordered ascending by time.\n\t\t\nFor mode \"independent device\" use only temperature types OFF and NORMAL, to avoid issues with changing the temperature by buttons from the heater"
                                    required:
                                      - operation_mode
                                      - override_weekly_program
                                      - non_repeatable_timers
                                      - temperature_normal
                                      - temperature_comfort
                                      - temperature_sleep
                                      - temperature_away
                                      - temperature_vacation
                                      - vacation_mode
                                      - lock_status
                                      - predictive_heating_type
                                      - open_window
                                      - temperature_calibration_offset
                                      - display_unit
                                      - oil_heater_power_level
                                      - temperature_in_independent_mode
                                      - additional_socket_mode
                                      - pid_parameters
                                      - max_heater_power
                                      - limited_heating_power
                                      - hysteresis
                                      - regulator_type
                                      - timezone
                                      - calibration_target_ambient_temperature
                                      - fan_state
                                      - weekly_program
                                    nullable: true
                                  delta:
                                    type: object
                                    properties:
                                      operation_mode:
                                        type: string
                                        enum:
                                          - weekly_program
                                          - 'off'
                                          - independent_device
                                          - control_individually
                                        nullable: true
                                        description: "\n\"off\"  - all control disable\n\t\t\n\"weekly_program\" - follow the weekly program, changing temperature by display buttons changes the temperature of the current temperature mode\n\t\t\n\"independent_device\"  - follow the single set value, with timers enabled\n\t\t\n\"control_individually\"  - follow the single set value, but not use any timers or weekly program"
                                      override_weekly_program:
                                        type: object
                                        properties:
                                          value_type:
                                            type: string
                                            enum:
                                              - comfort
                                              - sleep
                                              - away
                                              - normal
                                              - always_heating
                                              - 'off'
                                            nullable: true
                                          ends_at:
                                            type: number
                                            nullable: true
                                            description: >-
                                              UTC timestamp in seconds when the
                                              override mode ends
                                        required:
                                          - value_type
                                          - ends_at
                                        nullable: true
                                        description: >-
                                          Overwrite the currently running weekly
                                          program with a temporary change of a
                                          specific temperature type (e.g.
                                          comfort). Time value of 0 means weekly
                                          program overwrite is not active anymore
                                          (disabled). Time should be a UTC
                                          timestamp when the program should end
                                      non_repeatable_timers:
                                        type: object
                                        properties:
                                          timers:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                value_type:
                                                  type: string
                                                  enum:
                                                    - normal
                                                    - 'off'
                                                    - always_heating
                                                timestamp:
                                                  type: number
                                              required:
                                                - value_type
                                                - timestamp
                                        required:
                                          - timers
                                        nullable: true
                                        description: >-
                                          A single pair represents time and value
                                          when the temperature mode should be
                                          changed. Time defines when to switch to
                                          a specific temperature type (set in the
                                          second field of the pair). Time is as
                                          local unix timestamp (so timezone is
                                          included), but in minutes, e.g. on
                                          17.05.2021 the time is 27020801. Allowed
                                          temperature types for timers: "normal",
                                          "off", "always_heating". Only used in
                                          independent mode
                                      temperature_normal:
                                        type: number
                                        minimum: 0
                                        maximum: 100
                                        nullable: true
                                        description: >-
                                          Set temperature value, used for
                                          operation modes "Independent device" and
                                          timers
                                      temperature_comfort:
                                        type: number
                                        minimum: 0
                                        maximum: 50
                                        nullable: true
                                      temperature_sleep:
                                        type: number
                                        minimum: 0
                                        maximum: 50
                                        nullable: true
                                      temperature_away:
                                        type: number
                                        minimum: 0
                                        maximum: 50
                                        nullable: true
                                      temperature_vacation:
                                        type: number
                                        minimum: 0
                                        maximum: 50
                                        nullable: true
                                      temperature_last_set:
                                        type: number
                                        minimum: 0
                                        maximum: 100
                                        nullable: true
                                        description: >-
                                          The temperature that the device is
                                          currently following
                                      vacation_mode:
                                        type: object
                                        properties:
                                          start_timestamp:
                                            type: number
                                            nullable: true
                                            description: >-
                                              UTC timestamp in minutes when the
                                              vacation mode starts
                                          end_timestamp:
                                            type: number
                                            nullable: true
                                            description: >-
                                              UTC timestamp in minutes when the
                                              vacation mode ends
                                          advanced:
                                            type: boolean
                                            nullable: true
                                            description: >-
                                              Advanced vacation mode - heaters will be
                                              regulated regarding "away" temperature
                                              by each room: false=OFF, true=ON
                                        nullable: true
                                      lock_status:
                                        type: string
                                        enum:
                                          - no_lock
                                          - child
                                          - commercial
                                        nullable: true
                                      predictive_heating_type:
                                        type: string
                                        enum:
                                          - 'off'
                                          - simple
                                          - advanced
                                        nullable: true
                                        description: "\n\"off\" - No predictive heating. Temperature will be change exactly with the weekly program timer\n\t\t\n\"simple\"  - Simple predictive heating. Temperature will be change before the timer, with a fixed time for each Celsius degree\n\t\t\n\"advanced\" - Advanced predictive heating. Temperature will be change before the timer, with a time based on the current room model. Model is estimated while running."
                                      open_window:
                                        type: object
                                        properties:
                                          drop_temperature_threshold:
                                            type: number
                                            description: >-
                                              Required temperature drop to trigger
                                              (activate) the open window
                                              functionality, in Celsius degrees
                                          drop_time_range:
                                            type: number
                                            description: >-
                                              Time range when a drop of temperature
                                              will be expected, in seconds
                                          increase_temperature_threshold:
                                            type: number
                                            description: >-
                                              Required temperature increase to
                                              deactivate open window functionality
                                          increase_time_range:
                                            type: number
                                            description: >-
                                              Time range when an increase of
                                              temperature will be expected, in seconds
                                          max_time:
                                            type: number
                                            description: >-
                                              Max time duration of the open window
                                              activeness
                                          enabled:
                                            type: boolean
                                            description: >-
                                              State of the open window functionality.
                                              True if open window functionality is
                                              enabled (that is whether the device can
                                              go into this mode while operating)
                                          activated:
                                            type: boolean
                                            description: >-
                                              Current state of the open window. True
                                              if open window is currently detected by
                                              device and is activated. You can
                                              deactivate currently detected open
                                              window by changing this value to false.
                                        nullable: true
                                      temperature_calibration_offset:
                                        type: number
                                        nullable: true
                                        description: Offset for ambient temperature
                                      display_unit:
                                        type: string
                                        enum:
                                          - celsius
                                          - fahrenheit
                                        nullable: true
                                        description: >-
                                          the temperature units: "celsius" or
                                          "fahrenheit" to set
                                      oil_heater_power_level:
                                        oneOf:
                                          - type: number
                                            enum:
                                              - 40
                                          - type: number
                                            enum:
                                              - 60
                                          - type: number
                                            enum:
                                              - 100
                                        nullable: true
                                        description: >-
                                          Set the max heating level in percentage
                                          of the nominal wattage. Oil heater
                                          allows setting 3 different max power
                                          settings (40, 60 or 100% of the power),
                                          done by selecting number of active
                                          heating elements.
                                      temperature_in_independent_mode:
                                        type: number
                                        minimum: 0
                                        maximum: 100
                                        nullable: true
                                        description: >-
                                          Change temperature in independent mode
                                          now. Use values 0.0 and 99.0 to set
                                          ALWAYS_ON and ALWAYS_OFF, respectively.
                                          Apart from changing value for some
                                          temperature type, in "Independent
                                          device" operation mode, one also needs
                                          to call this command to change the
                                          current temperature
                                      additional_socket_mode:
                                        type: string
                                        enum:
                                          - heating
                                          - cooling
                                          - always_on
                                          - always_off
                                        nullable: true
                                        description: "Command only for the socket heater, to select heating/cooling mode. ALWAYS_ON, ALWAYS_OFF modes just for convenience, as if these can be enabled also by other commands.\n\t\t"
                                      pid_parameters:
                                        type: object
                                        properties:
                                          kp:
                                            type: number
                                            description: The proportional part gain
                                          ki:
                                            type: number
                                            description: The integral part gain
                                          kd:
                                            type: number
                                            description: The derivative part gain
                                          kd_filter_N:
                                            type: number
                                            description: The derivative filter time coefficient
                                          windup_limit:
                                            type: number
                                            description: >-
                                              The windup limit for integral part from
                                              0 to 100
                                        nullable: true
                                      max_heater_power:
                                        type: number
                                        nullable: true
                                        description: Set max heater power in Watts
                                      limited_heating_power:
                                        type: number
                                        minimum: 10
                                        maximum: 100
                                        nullable: true
                                        description: >-
                                          Only for heaters with triac
                                          (panel/storage). Allows to limit the
                                          heating percentage between 10 and 100
                                          percent.
                                      hysteresis:
                                        type: object
                                        properties:
                                          upper:
                                            type: number
                                            description: >-
                                              Set hysteresis parameters. Setting
                                              hysteresis parameters will change
                                              current regulator type to hysteresis.
                                              Upper offset (set temp + this -> stop
                                              heat)
                                          lower:
                                            type: number
                                            description: >-
                                              Set hysteresis parameters. Setting
                                              hysteresis parameters will change
                                              current regulator type to hysteresis.
                                              Lower offset (set temp - this -> start
                                              heat)
                                        nullable: true
                                      regulator_type:
                                        type: string
                                        enum:
                                          - pid
                                          - hysteresis_or_slow_pid
                                          - unknown
                                        nullable: true
                                      timezone:
                                        type: string
                                        nullable: true
                                      calibration_target_ambient_temperature:
                                        type: number
                                        nullable: true
                                        description: >-
                                          Target for calibrating ambient
                                          temperature for heaters gen.2
                                      fan_state:
                                        type: string
                                        enum:
                                          - 'on'
                                          - 'off'
                                        nullable: true
                                        description: Fan state of convection heaters gen.2
                                      weekly_program:
                                        type: object
                                        properties:
                                          timers:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                value_type:
                                                  type: string
                                                  enum:
                                                    - comfort
                                                    - sleep
                                                    - away
                                                    - normal
                                                    - always_heating
                                                    - 'off'
                                                timestamp:
                                                  type: number
                                              required:
                                                - value_type
                                                - timestamp
                                        required:
                                          - timers
                                        nullable: true
                                        description: "The weekly program is a list of repeating pairs of values. A single pair represents time and value when the temperature mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific temperature type (set in the second field of the pair). Needs to be ordered ascending by time.\n\t\t\nFor mode \"independent device\" use only temperature types OFF and NORMAL, to avoid issues with changing the temperature by buttons from the heater"
                                    nullable: true
                                required:
                                  - reported
                                  - desired
                                  - delta
                                description: Heater or Socket AWS IoT Thing shadow object
                              - type: object
                                properties:
                                  reported:
                                    type: object
                                    properties:
                                      lock_status:
                                        type: string
                                        enum:
                                          - no_lock
                                          - child
                                        nullable: true
                                      fan_speed_mode:
                                        type: string
                                        enum:
                                          - HARD_OFF
                                          - SOFT_OFF
                                          - AUTO
                                          - SLEEP
                                          - BOOST
                                          - TURN_ON
                                          - MANUAL
                                          - MANUAL_LEVEL1
                                          - MANUAL_LEVEL2
                                          - MANUAL_LEVEL3
                                          - MANUAL_LEVEL4
                                          - MANUAL_LEVEL5
                                          - MANUAL_LEVEL6
                                          - MANUAL_LEVEL7
                                          - MANUAL_LEVEL8
                                        nullable: true
                                        description: "\n\t\t\t\nHARD_OFF - disable fan, stop to gather data from sensors, disconnect from wifi, can be disabled only via \ndisplay\n\t\t\t\nSOFT_OFF - disable fan but device is still connected to the wifi and gather data from sensors\n\t\t\t\nAUTO - device automatically determine current fan speed level based on the measurements from sensors\n\t\t\t\nSLEEP - lower display brightness, low fan speed\n\t\t\t\nBOOST - maximum available fan speed\n\t\t\t\nTURN_ON - disable Soft/Hard OFF and enable mode which was before OFF\n\t\t\t\nMANUAL - switch to manual mode with level as for Auto Mode\n\t\t\t\nMANUAL_LEVEL1\n\t\t\t\nMANUAL_LEVEL2\n\t\t\t\nMANUAL_LEVEL3\n\t\t\t\nMANUAL_LEVEL4\n\t\t\t\nMANUAL_LEVEL5\n\t\t\t\nMANUAL_LEVEL6\n\t\t\t\nMANUAL_LEVEL7\n\t\t\t\nMANUAL_LEVEL8 (only for AP Large)"
                                      repeatable_timers:
                                        type: object
                                        properties:
                                          timers:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                fan_speed_mode:
                                                  type: string
                                                  enum:
                                                    - HARD_OFF
                                                    - SOFT_OFF
                                                    - AUTO
                                                    - SLEEP
                                                    - BOOST
                                                    - TURN_ON
                                                    - MANUAL
                                                    - MANUAL_LEVEL1
                                                    - MANUAL_LEVEL2
                                                    - MANUAL_LEVEL3
                                                    - MANUAL_LEVEL4
                                                    - MANUAL_LEVEL5
                                                    - MANUAL_LEVEL6
                                                    - MANUAL_LEVEL7
                                                    - MANUAL_LEVEL8
                                                timestamp:
                                                  type: number
                                              required:
                                                - fan_speed_mode
                                                - timestamp
                                        required:
                                          - timers
                                        nullable: true
                                        description: "The repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                                      non_repeatable_timers:
                                        type: object
                                        properties:
                                          timers:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                fan_speed_mode:
                                                  type: string
                                                  enum:
                                                    - HARD_OFF
                                                    - SOFT_OFF
                                                    - AUTO
                                                    - SLEEP
                                                    - BOOST
                                                    - TURN_ON
                                                    - MANUAL
                                                    - MANUAL_LEVEL1
                                                    - MANUAL_LEVEL2
                                                    - MANUAL_LEVEL3
                                                    - MANUAL_LEVEL4
                                                    - MANUAL_LEVEL5
                                                    - MANUAL_LEVEL6
                                                    - MANUAL_LEVEL7
                                                    - MANUAL_LEVEL8
                                                timestamp:
                                                  type: number
                                              required:
                                                - fan_speed_mode
                                                - timestamp
                                        required:
                                          - timers
                                        nullable: true
                                        description: "The non-repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is as local unix timestamp (so timezone is included), but in minutes, e.g. on 17.05.2021 the time is 27020801. when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                                      aiq_displaying_mode:
                                        type: boolean
                                        nullable: true
                                        description: "false - display AiQ Lights in Inactivity Mode only if red (default option)\n\t\t\t\t\t\ntrue - always display AiQ Lights in Inactivity Mode"
                                      sensor_type:
                                        type: string
                                        enum:
                                          - particles
                                          - TVOC
                                          - both
                                        nullable: true
                                      filter_state:
                                        type: string
                                        enum:
                                          - OK
                                          - MEDIUM_DIRTY
                                          - DIRTY
                                          - MUST_BE_CHANGED
                                        nullable: true
                                      is_particle_sensor_faulty:
                                        type: boolean
                                        nullable: true
                                      is_temp_sensor_faulty:
                                        type: boolean
                                        nullable: true
                                      is_tvoc_sensor_faulty:
                                        type: boolean
                                        nullable: true
                                      timezone:
                                        type: string
                                        nullable: true
                                      display_brightness:
                                        type: number
                                        nullable: true
                                      particles_trigger_values_threshold:
                                        type: object
                                        properties:
                                          particles_trigger_values_threshold_for_level1:
                                            type: number
                                          particles_trigger_values_threshold_for_level2:
                                            type: number
                                          particles_trigger_values_threshold_for_level3:
                                            type: number
                                          particles_trigger_values_threshold_for_level4:
                                            type: number
                                          particles_trigger_values_threshold_for_level5:
                                            type: number
                                          particles_trigger_values_threshold_for_level6:
                                            type: number
                                          particles_trigger_values_threshold_for_level7:
                                            type: number
                                        nullable: true
                                      tvoc_trigger_values_threshold:
                                        type: object
                                        properties:
                                          tvoc_trigger_values_threshold_for_level1:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level2:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level3:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level4:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level5:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level6:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level7:
                                            type: number
                                        nullable: true
                                      auto_mode_fan_rpm:
                                        type: object
                                        properties:
                                          auto_mode_fan_rpm_level1:
                                            type: number
                                          auto_mode_fan_rpm_level2:
                                            type: number
                                          auto_mode_fan_rpm_level3:
                                            type: number
                                          auto_mode_fan_rpm_level4:
                                            type: number
                                          auto_mode_fan_rpm_level5:
                                            type: number
                                          auto_mode_fan_rpm_level6:
                                            type: number
                                          auto_mode_fan_rpm_level7:
                                            type: number
                                          auto_mode_fan_rpm_level8:
                                            type: number
                                        nullable: true
                                      manual_sleep_boost_fan_rpm:
                                        type: object
                                        properties:
                                          manual_mode_fan_rpm_level1:
                                            type: number
                                          manual_mode_fan_rpm_level2:
                                            type: number
                                          manual_mode_fan_rpm_level3:
                                            type: number
                                          manual_mode_fan_rpm_level4:
                                            type: number
                                          manual_mode_fan_rpm_level5:
                                            type: number
                                          manual_mode_fan_rpm_level6:
                                            type: number
                                          manual_mode_fan_rpm_level7:
                                            type: number
                                          manual_mode_fan_rpm_level8:
                                            type: number
                                          boost_mode_fan_rpm:
                                            type: number
                                          sleep_mode_fan_rpm:
                                            type: number
                                        nullable: true
                                      auto_mode_fan_levels_states:
                                        type: object
                                        properties:
                                          auto_mode_fan_state_level1:
                                            type: boolean
                                          auto_mode_fan_state_level2:
                                            type: boolean
                                          auto_mode_fan_state_level3:
                                            type: boolean
                                          auto_mode_fan_state_level4:
                                            type: boolean
                                          auto_mode_fan_state_level5:
                                            type: boolean
                                          auto_mode_fan_state_level6:
                                            type: boolean
                                          auto_mode_fan_state_level7:
                                            type: boolean
                                          auto_mode_fan_state_level8:
                                            type: boolean
                                        nullable: true
                                    required:
                                      - lock_status
                                      - fan_speed_mode
                                      - repeatable_timers
                                      - non_repeatable_timers
                                      - aiq_displaying_mode
                                      - filter_state
                                      - is_particle_sensor_faulty
                                      - is_temp_sensor_faulty
                                      - is_tvoc_sensor_faulty
                                      - timezone
                                      - display_brightness
                                      - particles_trigger_values_threshold
                                      - auto_mode_fan_rpm
                                      - manual_sleep_boost_fan_rpm
                                      - auto_mode_fan_levels_states
                                    nullable: true
                                  desired:
                                    type: object
                                    properties:
                                      lock_status:
                                        type: string
                                        enum:
                                          - no_lock
                                          - child
                                        nullable: true
                                      fan_speed_mode:
                                        type: string
                                        enum:
                                          - HARD_OFF
                                          - SOFT_OFF
                                          - AUTO
                                          - SLEEP
                                          - BOOST
                                          - TURN_ON
                                          - MANUAL
                                          - MANUAL_LEVEL1
                                          - MANUAL_LEVEL2
                                          - MANUAL_LEVEL3
                                          - MANUAL_LEVEL4
                                          - MANUAL_LEVEL5
                                          - MANUAL_LEVEL6
                                          - MANUAL_LEVEL7
                                          - MANUAL_LEVEL8
                                        nullable: true
                                        description: "\n\t\t\t\nHARD_OFF - disable fan, stop to gather data from sensors, disconnect from wifi, can be disabled only via \ndisplay\n\t\t\t\nSOFT_OFF - disable fan but device is still connected to the wifi and gather data from sensors\n\t\t\t\nAUTO - device automatically determine current fan speed level based on the measurements from sensors\n\t\t\t\nSLEEP - lower display brightness, low fan speed\n\t\t\t\nBOOST - maximum available fan speed\n\t\t\t\nTURN_ON - disable Soft/Hard OFF and enable mode which was before OFF\n\t\t\t\nMANUAL - switch to manual mode with level as for Auto Mode\n\t\t\t\nMANUAL_LEVEL1\n\t\t\t\nMANUAL_LEVEL2\n\t\t\t\nMANUAL_LEVEL3\n\t\t\t\nMANUAL_LEVEL4\n\t\t\t\nMANUAL_LEVEL5\n\t\t\t\nMANUAL_LEVEL6\n\t\t\t\nMANUAL_LEVEL7\n\t\t\t\nMANUAL_LEVEL8 (only for AP Large)"
                                      repeatable_timers:
                                        type: object
                                        properties:
                                          timers:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                fan_speed_mode:
                                                  type: string
                                                  enum:
                                                    - HARD_OFF
                                                    - SOFT_OFF
                                                    - AUTO
                                                    - SLEEP
                                                    - BOOST
                                                    - TURN_ON
                                                    - MANUAL
                                                    - MANUAL_LEVEL1
                                                    - MANUAL_LEVEL2
                                                    - MANUAL_LEVEL3
                                                    - MANUAL_LEVEL4
                                                    - MANUAL_LEVEL5
                                                    - MANUAL_LEVEL6
                                                    - MANUAL_LEVEL7
                                                    - MANUAL_LEVEL8
                                                timestamp:
                                                  type: number
                                              required:
                                                - fan_speed_mode
                                                - timestamp
                                        required:
                                          - timers
                                        nullable: true
                                        description: "The repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                                      non_repeatable_timers:
                                        type: object
                                        properties:
                                          timers:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                fan_speed_mode:
                                                  type: string
                                                  enum:
                                                    - HARD_OFF
                                                    - SOFT_OFF
                                                    - AUTO
                                                    - SLEEP
                                                    - BOOST
                                                    - TURN_ON
                                                    - MANUAL
                                                    - MANUAL_LEVEL1
                                                    - MANUAL_LEVEL2
                                                    - MANUAL_LEVEL3
                                                    - MANUAL_LEVEL4
                                                    - MANUAL_LEVEL5
                                                    - MANUAL_LEVEL6
                                                    - MANUAL_LEVEL7
                                                    - MANUAL_LEVEL8
                                                timestamp:
                                                  type: number
                                              required:
                                                - fan_speed_mode
                                                - timestamp
                                        required:
                                          - timers
                                        nullable: true
                                        description: "The non-repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is as local unix timestamp (so timezone is included), but in minutes, e.g. on 17.05.2021 the time is 27020801. when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                                      aiq_displaying_mode:
                                        type: boolean
                                        nullable: true
                                        description: "false - display AiQ Lights in Inactivity Mode only if red (default option)\n\t\t\t\t\t\ntrue - always display AiQ Lights in Inactivity Mode"
                                      sensor_type:
                                        type: string
                                        enum:
                                          - particles
                                          - TVOC
                                          - both
                                        nullable: true
                                      filter_state:
                                        type: string
                                        enum:
                                          - OK
                                          - MEDIUM_DIRTY
                                          - DIRTY
                                          - MUST_BE_CHANGED
                                        nullable: true
                                      is_particle_sensor_faulty:
                                        type: boolean
                                        nullable: true
                                      is_temp_sensor_faulty:
                                        type: boolean
                                        nullable: true
                                      is_tvoc_sensor_faulty:
                                        type: boolean
                                        nullable: true
                                      timezone:
                                        type: string
                                        nullable: true
                                      display_brightness:
                                        type: number
                                        nullable: true
                                      particles_trigger_values_threshold:
                                        type: object
                                        properties:
                                          particles_trigger_values_threshold_for_level1:
                                            type: number
                                          particles_trigger_values_threshold_for_level2:
                                            type: number
                                          particles_trigger_values_threshold_for_level3:
                                            type: number
                                          particles_trigger_values_threshold_for_level4:
                                            type: number
                                          particles_trigger_values_threshold_for_level5:
                                            type: number
                                          particles_trigger_values_threshold_for_level6:
                                            type: number
                                          particles_trigger_values_threshold_for_level7:
                                            type: number
                                        nullable: true
                                      tvoc_trigger_values_threshold:
                                        type: object
                                        properties:
                                          tvoc_trigger_values_threshold_for_level1:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level2:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level3:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level4:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level5:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level6:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level7:
                                            type: number
                                        nullable: true
                                      auto_mode_fan_rpm:
                                        type: object
                                        properties:
                                          auto_mode_fan_rpm_level1:
                                            type: number
                                          auto_mode_fan_rpm_level2:
                                            type: number
                                          auto_mode_fan_rpm_level3:
                                            type: number
                                          auto_mode_fan_rpm_level4:
                                            type: number
                                          auto_mode_fan_rpm_level5:
                                            type: number
                                          auto_mode_fan_rpm_level6:
                                            type: number
                                          auto_mode_fan_rpm_level7:
                                            type: number
                                          auto_mode_fan_rpm_level8:
                                            type: number
                                        nullable: true
                                      manual_sleep_boost_fan_rpm:
                                        type: object
                                        properties:
                                          manual_mode_fan_rpm_level1:
                                            type: number
                                          manual_mode_fan_rpm_level2:
                                            type: number
                                          manual_mode_fan_rpm_level3:
                                            type: number
                                          manual_mode_fan_rpm_level4:
                                            type: number
                                          manual_mode_fan_rpm_level5:
                                            type: number
                                          manual_mode_fan_rpm_level6:
                                            type: number
                                          manual_mode_fan_rpm_level7:
                                            type: number
                                          manual_mode_fan_rpm_level8:
                                            type: number
                                          boost_mode_fan_rpm:
                                            type: number
                                          sleep_mode_fan_rpm:
                                            type: number
                                        nullable: true
                                      auto_mode_fan_levels_states:
                                        type: object
                                        properties:
                                          auto_mode_fan_state_level1:
                                            type: boolean
                                          auto_mode_fan_state_level2:
                                            type: boolean
                                          auto_mode_fan_state_level3:
                                            type: boolean
                                          auto_mode_fan_state_level4:
                                            type: boolean
                                          auto_mode_fan_state_level5:
                                            type: boolean
                                          auto_mode_fan_state_level6:
                                            type: boolean
                                          auto_mode_fan_state_level7:
                                            type: boolean
                                          auto_mode_fan_state_level8:
                                            type: boolean
                                        nullable: true
                                    required:
                                      - lock_status
                                      - fan_speed_mode
                                      - repeatable_timers
                                      - non_repeatable_timers
                                      - aiq_displaying_mode
                                      - filter_state
                                      - is_particle_sensor_faulty
                                      - is_temp_sensor_faulty
                                      - is_tvoc_sensor_faulty
                                      - timezone
                                      - display_brightness
                                      - particles_trigger_values_threshold
                                      - auto_mode_fan_rpm
                                      - manual_sleep_boost_fan_rpm
                                      - auto_mode_fan_levels_states
                                    nullable: true
                                  delta:
                                    type: object
                                    properties:
                                      lock_status:
                                        type: string
                                        enum:
                                          - no_lock
                                          - child
                                        nullable: true
                                      fan_speed_mode:
                                        type: string
                                        enum:
                                          - HARD_OFF
                                          - SOFT_OFF
                                          - AUTO
                                          - SLEEP
                                          - BOOST
                                          - TURN_ON
                                          - MANUAL
                                          - MANUAL_LEVEL1
                                          - MANUAL_LEVEL2
                                          - MANUAL_LEVEL3
                                          - MANUAL_LEVEL4
                                          - MANUAL_LEVEL5
                                          - MANUAL_LEVEL6
                                          - MANUAL_LEVEL7
                                          - MANUAL_LEVEL8
                                        nullable: true
                                        description: "\n\t\t\t\nHARD_OFF - disable fan, stop to gather data from sensors, disconnect from wifi, can be disabled only via \ndisplay\n\t\t\t\nSOFT_OFF - disable fan but device is still connected to the wifi and gather data from sensors\n\t\t\t\nAUTO - device automatically determine current fan speed level based on the measurements from sensors\n\t\t\t\nSLEEP - lower display brightness, low fan speed\n\t\t\t\nBOOST - maximum available fan speed\n\t\t\t\nTURN_ON - disable Soft/Hard OFF and enable mode which was before OFF\n\t\t\t\nMANUAL - switch to manual mode with level as for Auto Mode\n\t\t\t\nMANUAL_LEVEL1\n\t\t\t\nMANUAL_LEVEL2\n\t\t\t\nMANUAL_LEVEL3\n\t\t\t\nMANUAL_LEVEL4\n\t\t\t\nMANUAL_LEVEL5\n\t\t\t\nMANUAL_LEVEL6\n\t\t\t\nMANUAL_LEVEL7\n\t\t\t\nMANUAL_LEVEL8 (only for AP Large)"
                                      repeatable_timers:
                                        type: object
                                        properties:
                                          timers:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                fan_speed_mode:
                                                  type: string
                                                  enum:
                                                    - HARD_OFF
                                                    - SOFT_OFF
                                                    - AUTO
                                                    - SLEEP
                                                    - BOOST
                                                    - TURN_ON
                                                    - MANUAL
                                                    - MANUAL_LEVEL1
                                                    - MANUAL_LEVEL2
                                                    - MANUAL_LEVEL3
                                                    - MANUAL_LEVEL4
                                                    - MANUAL_LEVEL5
                                                    - MANUAL_LEVEL6
                                                    - MANUAL_LEVEL7
                                                    - MANUAL_LEVEL8
                                                timestamp:
                                                  type: number
                                              required:
                                                - fan_speed_mode
                                                - timestamp
                                        required:
                                          - timers
                                        nullable: true
                                        description: "The repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                                      non_repeatable_timers:
                                        type: object
                                        properties:
                                          timers:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                fan_speed_mode:
                                                  type: string
                                                  enum:
                                                    - HARD_OFF
                                                    - SOFT_OFF
                                                    - AUTO
                                                    - SLEEP
                                                    - BOOST
                                                    - TURN_ON
                                                    - MANUAL
                                                    - MANUAL_LEVEL1
                                                    - MANUAL_LEVEL2
                                                    - MANUAL_LEVEL3
                                                    - MANUAL_LEVEL4
                                                    - MANUAL_LEVEL5
                                                    - MANUAL_LEVEL6
                                                    - MANUAL_LEVEL7
                                                    - MANUAL_LEVEL8
                                                timestamp:
                                                  type: number
                                              required:
                                                - fan_speed_mode
                                                - timestamp
                                        required:
                                          - timers
                                        nullable: true
                                        description: "The non-repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is as local unix timestamp (so timezone is included), but in minutes, e.g. on 17.05.2021 the time is 27020801. when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                                      aiq_displaying_mode:
                                        type: boolean
                                        nullable: true
                                        description: "false - display AiQ Lights in Inactivity Mode only if red (default option)\n\t\t\t\t\t\ntrue - always display AiQ Lights in Inactivity Mode"
                                      sensor_type:
                                        type: string
                                        enum:
                                          - particles
                                          - TVOC
                                          - both
                                        nullable: true
                                      filter_state:
                                        type: string
                                        enum:
                                          - OK
                                          - MEDIUM_DIRTY
                                          - DIRTY
                                          - MUST_BE_CHANGED
                                        nullable: true
                                      is_particle_sensor_faulty:
                                        type: boolean
                                        nullable: true
                                      is_temp_sensor_faulty:
                                        type: boolean
                                        nullable: true
                                      is_tvoc_sensor_faulty:
                                        type: boolean
                                        nullable: true
                                      timezone:
                                        type: string
                                        nullable: true
                                      display_brightness:
                                        type: number
                                        nullable: true
                                      particles_trigger_values_threshold:
                                        type: object
                                        properties:
                                          particles_trigger_values_threshold_for_level1:
                                            type: number
                                          particles_trigger_values_threshold_for_level2:
                                            type: number
                                          particles_trigger_values_threshold_for_level3:
                                            type: number
                                          particles_trigger_values_threshold_for_level4:
                                            type: number
                                          particles_trigger_values_threshold_for_level5:
                                            type: number
                                          particles_trigger_values_threshold_for_level6:
                                            type: number
                                          particles_trigger_values_threshold_for_level7:
                                            type: number
                                        nullable: true
                                      tvoc_trigger_values_threshold:
                                        type: object
                                        properties:
                                          tvoc_trigger_values_threshold_for_level1:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level2:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level3:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level4:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level5:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level6:
                                            type: number
                                          tvoc_trigger_values_threshold_for_level7:
                                            type: number
                                        nullable: true
                                      auto_mode_fan_rpm:
                                        type: object
                                        properties:
                                          auto_mode_fan_rpm_level1:
                                            type: number
                                          auto_mode_fan_rpm_level2:
                                            type: number
                                          auto_mode_fan_rpm_level3:
                                            type: number
                                          auto_mode_fan_rpm_level4:
                                            type: number
                                          auto_mode_fan_rpm_level5:
                                            type: number
                                          auto_mode_fan_rpm_level6:
                                            type: number
                                          auto_mode_fan_rpm_level7:
                                            type: number
                                          auto_mode_fan_rpm_level8:
                                            type: number
                                        nullable: true
                                      manual_sleep_boost_fan_rpm:
                                        type: object
                                        properties:
                                          manual_mode_fan_rpm_level1:
                                            type: number
                                          manual_mode_fan_rpm_level2:
                                            type: number
                                          manual_mode_fan_rpm_level3:
                                            type: number
                                          manual_mode_fan_rpm_level4:
                                            type: number
                                          manual_mode_fan_rpm_level5:
                                            type: number
                                          manual_mode_fan_rpm_level6:
                                            type: number
                                          manual_mode_fan_rpm_level7:
                                            type: number
                                          manual_mode_fan_rpm_level8:
                                            type: number
                                          boost_mode_fan_rpm:
                                            type: number
                                          sleep_mode_fan_rpm:
                                            type: number
                                        nullable: true
                                      auto_mode_fan_levels_states:
                                        type: object
                                        properties:
                                          auto_mode_fan_state_level1:
                                            type: boolean
                                          auto_mode_fan_state_level2:
                                            type: boolean
                                          auto_mode_fan_state_level3:
                                            type: boolean
                                          auto_mode_fan_state_level4:
                                            type: boolean
                                          auto_mode_fan_state_level5:
                                            type: boolean
                                          auto_mode_fan_state_level6:
                                            type: boolean
                                          auto_mode_fan_state_level7:
                                            type: boolean
                                          auto_mode_fan_state_level8:
                                            type: boolean
                                        nullable: true
                                    nullable: true
                                required:
                                  - reported
                                  - desired
                                  - delta
                                description: Air Purifier AWS IoT Thing shadow object
                              - type: object
                                properties:
                                  reported:
                                    type: object
                                    properties:
                                      ens210_ranges:
                                        type: object
                                        properties:
                                          temperature_green:
                                            type: number
                                          temperature_red:
                                            type: number
                                          humidity_yellow_low:
                                            type: number
                                          humidity_yellow_high:
                                            type: number
                                          humidity_red_low:
                                            type: number
                                          humidity_red_high:
                                            type: number
                                        required:
                                          - temperature_green
                                          - temperature_red
                                          - humidity_yellow_low
                                          - humidity_yellow_high
                                          - humidity_red_low
                                          - humidity_red_high
                                        nullable: true
                                      ccs811_ranges:
                                        type: object
                                        properties:
                                          eco2_red:
                                            type: number
                                          eco2_yellow:
                                            type: number
                                          tvoc_red:
                                            type: number
                                          tvoc_yellow:
                                            type: number
                                        required:
                                          - eco2_red
                                          - eco2_yellow
                                          - tvoc_red
                                          - tvoc_yellow
                                        nullable: true
                                      sampling_period:
                                        type: number
                                        nullable: true
                                      timezone:
                                        type: string
                                        nullable: true
                                    required:
                                      - ens210_ranges
                                      - ccs811_ranges
                                      - sampling_period
                                      - timezone
                                    nullable: true
                                  desired:
                                    type: object
                                    properties:
                                      ens210_ranges:
                                        type: object
                                        properties:
                                          temperature_green:
                                            type: number
                                          temperature_red:
                                            type: number
                                          humidity_yellow_low:
                                            type: number
                                          humidity_yellow_high:
                                            type: number
                                          humidity_red_low:
                                            type: number
                                          humidity_red_high:
                                            type: number
                                        required:
                                          - temperature_green
                                          - temperature_red
                                          - humidity_yellow_low
                                          - humidity_yellow_high
                                          - humidity_red_low
                                          - humidity_red_high
                                        nullable: true
                                      ccs811_ranges:
                                        type: object
                                        properties:
                                          eco2_red:
                                            type: number
                                          eco2_yellow:
                                            type: number
                                          tvoc_red:
                                            type: number
                                          tvoc_yellow:
                                            type: number
                                        required:
                                          - eco2_red
                                          - eco2_yellow
                                          - tvoc_red
                                          - tvoc_yellow
                                        nullable: true
                                      sampling_period:
                                        type: number
                                        nullable: true
                                      timezone:
                                        type: string
                                        nullable: true
                                    required:
                                      - ens210_ranges
                                      - ccs811_ranges
                                      - sampling_period
                                      - timezone
                                    nullable: true
                                  delta:
                                    type: object
                                    properties:
                                      ens210_ranges:
                                        type: object
                                        properties:
                                          temperature_green:
                                            type: number
                                          temperature_red:
                                            type: number
                                          humidity_yellow_low:
                                            type: number
                                          humidity_yellow_high:
                                            type: number
                                          humidity_red_low:
                                            type: number
                                          humidity_red_high:
                                            type: number
                                        nullable: true
                                      ccs811_ranges:
                                        type: object
                                        properties:
                                          eco2_red:
                                            type: number
                                          eco2_yellow:
                                            type: number
                                          tvoc_red:
                                            type: number
                                          tvoc_yellow:
                                            type: number
                                        nullable: true
                                      sampling_period:
                                        type: number
                                        nullable: true
                                      timezone:
                                        type: string
                                        nullable: true
                                    nullable: true
                                required:
                                  - reported
                                  - desired
                                  - delta
                                description: Air Sensor AWS IoT Thing shadow object
                            nullable: true
                          lastMetrics:
                            oneOf:
                              - type: object
                                properties:
                                  deviceId:
                                    type: string
                                  time:
                                    type: number
                                    minimum: 0
                                    maximum: 9999999999
                                    description: Date in seconds since epoch (UTC time)
                                    example: 1579098983
                                  temperature:
                                    type: number
                                    description: >-
                                      What is the current target temperature for
                                      the heater regulator. Temperature in
                                      Celsius degrees
                                  humidity:
                                    type: number
                                    description: "SOCKET: Measured humidity - Relative humidity percentage multiplied by 100.\n\t\t\t\t\t\t\nValid ONLY FOR SOCKET HEATER. So for the panel heater, this field will be dummy bytes.\n\t\t\t\t\t\t\nCONVECTOR: Tilt sensor state. 1 = convector fallen and not heating"
                                  temperatureAmbient:
                                    type: number
                                    description: >-
                                      Actual temperature after applying the
                                      calibration offset. If the temperature
                                      sensor is faulty, this field will be equal
                                      -100 C. Temperature in Celsius degrees
                                  currentPower:
                                    type: number
                                    description: >-
                                      Power measured with the dedicated IC chip.
                                      In Watts. Due to the chip behavior, this
                                      value is filtered for a few seconds. To
                                      determine if the heater is heating RIGHT
                                      NOW use the control_signal field or
                                      heater_flag
                                  controlSignal:
                                    type: number
                                    description: >-
                                      Current value of control signal - so the
                                      percentage of the maximum heater power.
                                      Value from 0 to 100. It is the value
                                      applied by the heater right now
                                  currentOperationMode:
                                    type: number
                                    description: "0 - \"Off\"\n\t\t\t\t\t\t\n1 - \"Weekly program\"\n\t\t\t\t\t\t\n2 - \"Independent device\" (uses timers)\n\t\t\t\t\t\t\n3 - \"Control Individually\" (follows the single set temperature)"
                                  energyUsage:
                                    type: number
                                    description: >-
                                      Energy used since the heater startup. In
                                      Wh. 
                                  timeSinceHeaterStartup:
                                    type: number
                                    description: >-
                                      Time in seconds since heater startup.
                                      Knowing this information and energy_usage
                                      the cloud can calculate the energy usage
                                      in any time range (e.g. during last 24
                                      hours)
                                  openWindowsStatus:
                                    type: number
                                    description: "Whether the open window functionality is enabled (can be activated by opening a window) and active now (was triggered and the heater is not heating).\n\t\t\t\t 0 - disabled, not active now 3 - enabled, not active now 2 - enabled and active now!"
                                  currentTemperatureTypeInWeeklyProgram:
                                    type: number
                                    description: "Current temperature type: 0=normal, 1=comfort, 2=sleep, 3=away, 4=vacation, 5=off\n\t\t\tTemperature type followed currently (only if weekly program is active).\n\t\t\tIf the heater is in other mode than \"Weekly program\" this field will contains value \"-1\".\n\t\t\tIf the NTP time is not synchronized this field will contain value \"-2\" (because when NTP time is not synchronized, current weekly program status cannot be determined"
                                  heaterFlag:
                                    type: number
                                    description: 'Heating/Cooling status: 0=off, 1=on'
                                  powerStatus:
                                    type: number
                                    description: >-
                                      If the device is on (not in operation mode
                                      off or temperature is not set to 0):
                                      0=off, 1=on
                                required:
                                  - deviceId
                                  - time
                                  - temperature
                                  - humidity
                                  - temperatureAmbient
                                  - currentPower
                                  - controlSignal
                                  - currentOperationMode
                                  - energyUsage
                                  - timeSinceHeaterStartup
                                  - openWindowsStatus
                                  - currentTemperatureTypeInWeeklyProgram
                                  - heaterFlag
                                  - powerStatus
                                description: >-
                                  Heater last metrics. If null, no metrics were
                                  found
                              - type: object
                                properties:
                                  deviceId:
                                    type: string
                                    description: AWS IoT Thing Name (UUID)
                                  time:
                                    type: number
                                    minimum: 0
                                    maximum: 9999999999
                                    description: Date in seconds since epoch (UTC time)
                                    example: 1579098983
                                  setFanLevelInAuto:
                                    type: number
                                    description: >-
                                      Current fan speed level, relevant only
                                      when operation_mode=auto. Level1=0,
                                      Level8=7
                                  controlSignal:
                                    type: number
                                    description: >-
                                      Current value of control signal applied to
                                      the device motor. So it is the percentage
                                      of maximum motor input signal.
                                  massPm_10:
                                    type: number
                                    description: >-
                                      Mass of particles with diameter < 1
                                      micrometers in volume of one cubic meter
                                      [µg/m3] in range <0,1000>
                                  particles10Level:
                                    type: number
                                    description: >-
                                      Warning level of mass of particles with
                                      diameter < 1 micrometers
                                  massPm_25:
                                    type: number
                                    description: >-
                                      Mass of particles with diameter < 2.5
                                      micrometers in volume of one cubic meter
                                      [µg/m3] in range <0,1000>
                                  particles25Level:
                                    type: number
                                    description: >-
                                      Warning level of mass of particles with
                                      diameter < 2.5 micrometers
                                  massPm_100:
                                    type: number
                                    description: >-
                                      Mass of particles with diameter < 10.0
                                      micrometers in volume of one cubic meter
                                      [µg/m3] in range <0,1000>
                                  particles100Level:
                                    type: number
                                    description: >-
                                      Warning level of mass of particles with
                                      diameter < 10 micrometers
                                  numberPm_05:
                                    type: number
                                    description: >-
                                      Total number of particles wit diameter <
                                      0.5 micrometers in cubic centimeter
                                      [#/cm3] in range <0,3000>
                                  numberPm_10:
                                    type: number
                                    description: >-
                                      Total number of particles wit diameter < 1
                                      micrometers in cubic centimeter [#/cm3] in
                                      range <0,3000>
                                  numberPm_25:
                                    type: number
                                    description: >-
                                      Total number of particles wit diameter <
                                      2.5 micrometers in cubic centimeter
                                      [#/cm3] in range <0,3000>
                                  numberPm_50:
                                    type: number
                                    description: >-
                                      Total number of particles wit diameter < 5
                                      micrometers in cubic centimeter [#/cm3] in
                                      range <0,3000>
                                  numberPm_100:
                                    type: number
                                    description: >-
                                      Total number of particles wit diameter <
                                      10 micrometers in cubic centimeter [#/cm3]
                                      in range <0,3000>
                                  temperature:
                                    type: number
                                    description: Temperature in Celsius degrees
                                  temperatureLevel:
                                    type: number
                                    description: Warning level of temperature
                                  humidity:
                                    type: number
                                    description: >-
                                      Relative humidity in percents %,
                                      multiplied by 100
                                  humidityLevel:
                                    type: number
                                    description: Warning level of humidity
                                  runtimeLevelSleepMs:
                                    type: number
                                    description: >-
                                      Number of milliseconds, during which the
                                      device works in sleep mode
                                  runtimeLevelBoostMs:
                                    type: number
                                    description: >-
                                      Number of milliseconds, during which the
                                      device works in boost mode
                                  runtimeLevelLevel1Ms:
                                    type: number
                                    description: >-
                                      Number of milliseconds, during which the
                                      device using Level1 fan speed (in auto and
                                      manual)
                                  runtimeLevelLevel2Ms:
                                    type: number
                                    description: >-
                                      Number of milliseconds, during which the
                                      device using Level2 fan speed (in auto and
                                      manual)
                                  runtimeLevelLevel3Ms:
                                    type: number
                                    description: >-
                                      Number of milliseconds, during which the
                                      device using Level3 fan speed (in auto and
                                      manual)
                                  runtimeLevelLevel4Ms:
                                    type: number
                                    description: >-
                                      Number of milliseconds, during which the
                                      device using Level4 fan speed (in auto and
                                      manual)
                                  runtimeLevelLevel5Ms:
                                    type: number
                                    description: >-
                                      Number of milliseconds, during which the
                                      device using Level5 fan speed (in auto and
                                      manual)
                                  runtimeLevelLevel6Ms:
                                    type: number
                                    description: >-
                                      Number of milliseconds, during which the
                                      device using Level6 fan speed (in auto and
                                      manual)
                                  runtimeLevelLevel7Ms:
                                    type: number
                                    description: >-
                                      Number of milliseconds, during which the
                                      device using Level7 fan speed (in auto and
                                      manual)
                                  runtimeLevelLevel8Ms:
                                    type: number
                                    description: >-
                                      Number of milliseconds, during which the
                                      device using Level8 fan speed (in auto and
                                      manual)
                                  airQualityIndex:
                                    type: number
                                    description: >-
                                      Air Quality Index calculated from TVOC and
                                      eCO2 measurements by sensor, in range
                                      <1,5>
                                  eco2:
                                    type: number
                                    description: >-
                                      Equivalent CO2 in range <400-65000> [parts
                                      per million CO2 equiv.]
                                  eco2Level:
                                    type: number
                                    description: Warning level of CO2
                                  tvoc:
                                    type: number
                                    description: >-
                                      Total Volatile Organic Compounds in range
                                      <0-65000> [part per billion]
                                  tvocLevel:
                                    type: number
                                    description: >-
                                      Warning level of Total Volatile Organic
                                      Compounds
                                required:
                                  - deviceId
                                  - time
                                  - setFanLevelInAuto
                                  - controlSignal
                                  - massPm_10
                                  - particles10Level
                                  - massPm_25
                                  - particles25Level
                                  - massPm_100
                                  - particles100Level
                                  - numberPm_05
                                  - numberPm_10
                                  - numberPm_25
                                  - numberPm_50
                                  - numberPm_100
                                  - temperature
                                  - temperatureLevel
                                  - humidity
                                  - humidityLevel
                                  - runtimeLevelSleepMs
                                  - runtimeLevelBoostMs
                                  - runtimeLevelLevel1Ms
                                  - runtimeLevelLevel2Ms
                                  - runtimeLevelLevel3Ms
                                  - runtimeLevelLevel4Ms
                                  - runtimeLevelLevel5Ms
                                  - runtimeLevelLevel6Ms
                                  - runtimeLevelLevel7Ms
                                  - runtimeLevelLevel8Ms
                                  - airQualityIndex
                                  - eco2
                                  - eco2Level
                                  - tvoc
                                  - tvocLevel
                                description: >-
                                  Air purifier last metrics. If null, no metrics
                                  were found
                              - type: object
                                properties:
                                  deviceId:
                                    type: string
                                  time:
                                    type: number
                                    minimum: 0
                                    maximum: 9999999999
                                    description: Date in seconds since epoch (UTC time)
                                    example: 1579098983
                                  temperature:
                                    type: number
                                    description: Temperature in Celsius degrees
                                  humidity:
                                    type: number
                                    description: 2 - bytes [ unsigned integer ] [ 100 x 1%]
                                  eco2:
                                    type: number
                                    description: >-
                                      2 - bytes [ unsigned integer ] [ parts per
                                      million ]
                                  tvoc:
                                    type: number
                                    description: >-
                                      2 - bytes [ unsigned integer ] [ parts per
                                      million ]
                                  batteryPercentage:
                                    type: number
                                    description: 2 - bytes [ unsigned integer ] [ 10 x 1% ]
                                  batteryVoltage:
                                    type: number
                                    description: >-
                                      2 - bytes [ unsigned integer ] [
                                      millivolts ]
                                  chargingStatus:
                                    type: number
                                    description: >-
                                      0 - not charging ; 1 - charging with LED
                                      turn Off; 2 - charging with LED turn On (
                                      updated 2 - 30 s after change )
                                  tvocSensorCalibrated:
                                    type: boolean
                                    description: false - not calibrated, true - calibrated
                                  tvocSensorCountdownRemainingTime:
                                    type: number
                                    description: >-
                                      Seconds to finish calibration, if sensor
                                      calibrated then equal to 0
                                  tvocSensorCountdownRemainingTimeTo:
                                    type: number
                                    description: >-
                                      Seconds to finish calibration, if sensor
                                      calibrated then equal to 0
                                  tvocSensorCountdownTotalTime:
                                    type: number
                                    description: >-
                                      Total time needed to perform tvoc sensor
                                      calibration
                                  ens210SensorCalibrated:
                                    type: boolean
                                    description: false - not calibrated, true - calibrated
                                  ens210SensorCountdownRemainingTime:
                                    type: number
                                    description: >-
                                      Seconds to finish calibration, if sensor
                                      calibrated then equal to 0
                                  ens210SensorCountdownRemainingTimeTo:
                                    type: number
                                    description: Seconds to finish calibration
                                  ens210SensorCountdownTotalTime:
                                    type: number
                                    description: >-
                                      Total time needed to perform ens210 sensor
                                      calibration
                                required:
                                  - deviceId
                                  - time
                                  - temperature
                                  - humidity
                                  - eco2
                                  - tvoc
                                  - batteryPercentage
                                  - batteryVoltage
                                  - chargingStatus
                                  - tvocSensorCalibrated
                                  - tvocSensorCountdownRemainingTime
                                  - tvocSensorCountdownRemainingTimeTo
                                  - tvocSensorCountdownTotalTime
                                  - ens210SensorCalibrated
                                  - ens210SensorCountdownRemainingTime
                                  - ens210SensorCountdownRemainingTimeTo
                                  - ens210SensorCountdownTotalTime
                                description: >-
                                  Air sensor last metrics. If null, no metrics
                                  were found
                            nullable: true
                            description: >-
                              Last metrics sent by device. Type of object
                              matches to device type. If null, no metrics were
                              found
                          energyUsageForCurrentDay:
                            type: number
                            description: >-
                              Energy usage for current calendar day. Measured in
                              Wh
                        required:
                          - deviceId
                          - macAddress
                          - deviceType
                          - isConnected
                          - customName
                          - houseId
                          - roomId
                          - isArchived
                          - isEnabled
                          - controlSource
                          - createdAt
                          - deviceSettings
                          - lastMetrics
                          - energyUsageForCurrentDay
                  required:
                    - deviceType
                    - devices
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HouseNotFoundError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: getHouseDevicesByType
      summary: Get house devices by type
      description: Returns a list of devices of house grouped by device type
    parameters:
      - schema:
          type: string
          description: House ID
          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
        name: houseId
        in: path
        required: true
        description: House ID
  /houses/{houseId}/devices/calibration:
    get:
      tags:
        - house
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  devicesInRooms:
                    type: array
                    items:
                      type: object
                      properties:
                        roomId:
                          type: string
                          description: Room ID
                          example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
                        roomName:
                          type: string
                          description: Room name
                          example: Living room
                        devices:
                          type: array
                          items:
                            type: object
                            properties:
                              deviceId:
                                type: string
                                format: uuid
                                description: Device ID
                              macAddress:
                                type: string
                                description: MAC address of the device
                                example: '00:00:00:00:00:00'
                              customName:
                                type: string
                                nullable: true
                                description: Custom name of the device
                                example: My device
                              temperatureAmbient:
                                type: number
                                description: >-
                                  Actual temperature after applying the
                                  calibration offset. If the temperature sensor
                                  is faulty, this field will be equal -100 C.
                                  Temperature in Celsius degrees
                                nullable: true
                              powerStatus:
                                type: number
                                description: >-
                                  If the device is on (not in operation mode off
                                  or temperature is not set to 0): 0=off, 1=on
                                nullable: true
                              temperatureCalibrationOffset:
                                type: number
                                nullable: true
                                description: Offset for ambient temperature
                            required:
                              - deviceId
                              - macAddress
                              - customName
                              - temperatureAmbient
                              - powerStatus
                              - temperatureCalibrationOffset
                      required:
                        - roomId
                        - roomName
                        - devices
                  independentDevices:
                    type: array
                    items:
                      type: object
                      properties:
                        deviceId:
                          type: string
                          format: uuid
                          description: Device ID
                        macAddress:
                          type: string
                          description: MAC address of the device
                          example: '00:00:00:00:00:00'
                        customName:
                          type: string
                          nullable: true
                          description: Custom name of the device
                          example: My device
                        temperatureAmbient:
                          type: number
                          description: >-
                            Actual temperature after applying the calibration
                            offset. If the temperature sensor is faulty, this
                            field will be equal -100 C. Temperature in Celsius
                            degrees
                          nullable: true
                        powerStatus:
                          type: number
                          description: >-
                            If the device is on (not in operation mode off or
                            temperature is not set to 0): 0=off, 1=on
                          nullable: true
                        temperatureCalibrationOffset:
                          type: number
                          nullable: true
                          description: Offset for ambient temperature
                      required:
                        - deviceId
                        - macAddress
                        - customName
                        - temperatureAmbient
                        - powerStatus
                        - temperatureCalibrationOffset
                required:
                  - devicesInRooms
                  - independentDevices
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HouseNotFoundError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: getHouseDevicesCalibrationInfo
      summary: Get calibration info of house devices
      description: >-
        Returns a list of devices which are located in chosen house with
        calibration related info
    parameters:
      - schema:
          type: string
          description: House ID
          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
        name: houseId
        in: path
        required: true
        description: House ID
  /houses:
    get:
      tags:
        - house
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ownHouses:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: House ID
                          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                        name:
                          type: string
                          description: House name
                          example: Home
                        postalCode:
                          type: string
                          description: Postal code
                          example: '49101'
                        timezone:
                          type: string
                          description: Region name which timezone should be used
                          example: Europe/London
                        ownerId:
                          type: string
                          description: ID of customer who is the owner of this house
                          example: 27af30e2-69df-4274-8930-93404dcddb41
                        mode:
                          type: string
                          enum:
                            - weekly_program
                            - comfort
                            - sleep
                            - away
                            - vacation
                            - normal
                            - always_heating
                            - 'off'
                          nullable: true
                          description: House mode
                        vacationStartDate:
                          type: number
                          minimum: 0
                          maximum: 9999999999
                          description: Date in seconds since epoch (UTC time)
                          example: 1579098983
                          nullable: true
                        vacationEndDate:
                          type: number
                          minimum: 0
                          maximum: 9999999999
                          description: Date in seconds since epoch (UTC time)
                          example: 1579098983
                          nullable: true
                        vacationTemperature:
                          type: number
                          nullable: true
                          description: Temperature on vacation
                        vacationModeType:
                          type: string
                          enum:
                            - use_away_temperature
                            - use_vacation_temperature
                          nullable: true
                          description: Advanced vacation mode type
                        isVacationModeActive:
                          type: boolean
                          description: >-
                            Shows, is vacation mode active. If true, vacation
                            mode details will be sent to device shadow
                        overrideModeType:
                          type: string
                          enum:
                            - not_continuous
                            - continuous
                          nullable: true
                          description: Override mode type
                        overrideEndDate:
                          type: number
                          minimum: 0
                          maximum: 9999999999
                          description: Date in seconds since epoch (UTC time)
                          example: 1579098983
                          nullable: true
                        createdAt:
                          type: string
                          format: date-time
                          nullable: true
                          description: House creation date
                      required:
                        - id
                        - name
                        - postalCode
                        - timezone
                        - ownerId
                        - mode
                        - vacationStartDate
                        - vacationEndDate
                        - vacationTemperature
                        - vacationModeType
                        - isVacationModeActive
                        - overrideModeType
                        - overrideEndDate
                        - createdAt
                    description: Houses where this user is owner
                  sharedHouses:
                    type: array
                    items:
                      type: object
                      properties:
                        house:
                          type: object
                          properties:
                            id:
                              type: string
                              description: House ID
                              example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                            name:
                              type: string
                              description: House name
                              example: Home
                            postalCode:
                              type: string
                              description: Postal code
                              example: '49101'
                            timezone:
                              type: string
                              description: Region name which timezone should be used
                              example: Europe/London
                            ownerId:
                              type: string
                              description: ID of customer who is the owner of this house
                              example: 27af30e2-69df-4274-8930-93404dcddb41
                            mode:
                              type: string
                              enum:
                                - weekly_program
                                - comfort
                                - sleep
                                - away
                                - vacation
                                - normal
                                - always_heating
                                - 'off'
                              nullable: true
                              description: House mode
                            vacationStartDate:
                              type: number
                              minimum: 0
                              maximum: 9999999999
                              description: Date in seconds since epoch (UTC time)
                              example: 1579098983
                              nullable: true
                            vacationEndDate:
                              type: number
                              minimum: 0
                              maximum: 9999999999
                              description: Date in seconds since epoch (UTC time)
                              example: 1579098983
                              nullable: true
                            vacationTemperature:
                              type: number
                              nullable: true
                              description: Temperature on vacation
                            vacationModeType:
                              type: string
                              enum:
                                - use_away_temperature
                                - use_vacation_temperature
                              nullable: true
                              description: Advanced vacation mode type
                            isVacationModeActive:
                              type: boolean
                              description: >-
                                Shows, is vacation mode active. If true,
                                vacation mode details will be sent to device
                                shadow
                            overrideModeType:
                              type: string
                              enum:
                                - not_continuous
                                - continuous
                              nullable: true
                              description: Override mode type
                            overrideEndDate:
                              type: number
                              minimum: 0
                              maximum: 9999999999
                              description: Date in seconds since epoch (UTC time)
                              example: 1579098983
                              nullable: true
                            createdAt:
                              type: string
                              format: date-time
                              nullable: true
                              description: House creation date
                          required:
                            - id
                            - name
                            - postalCode
                            - timezone
                            - ownerId
                            - mode
                            - vacationStartDate
                            - vacationEndDate
                            - vacationTemperature
                            - vacationModeType
                            - isVacationModeActive
                            - overrideModeType
                            - overrideEndDate
                            - createdAt
                        permissions:
                          type: object
                          properties:
                            maxTemperature:
                              type: number
                              nullable: true
                              description: >-
                                The maximum number of degrees Celsius that the
                                customer can set. Null value means there is no
                                limit
                              example: 30
                            changeTemperature:
                              type: boolean
                              description: 'Permission: Can customer change the temperature?'
                              example: true
                            renameDevices:
                              type: boolean
                              description: >-
                                Permission: Can customer rename devices in
                                house?
                              example: true
                            renameHouse:
                              type: boolean
                              description: 'Permission: Can customer rename house?'
                              example: true
                            updateHousePostalCode:
                              type: boolean
                              description: >-
                                Permission: Can customer update postal code of
                                house?
                              example: true
                            updateHouseTimezone:
                              type: boolean
                              description: >-
                                Permission: Can customer update timezone of
                                house?
                              example: true
                            renameRooms:
                              type: boolean
                              description: 'Permission: Can customer rename rooms of house?'
                              example: true
                            managePrograms:
                              type: boolean
                              description: >-
                                Permission: Can customer manage weekly programs
                                or timers?
                              example: true
                            manageVacationMode:
                              type: boolean
                              description: 'Permission: Can customer manage vacation mode?'
                              example: true
                            overrideWeeklyProgram:
                              type: boolean
                              description: >-
                                Permission: Can customer override weekly
                                program?
                              example: true
                            deleteHouse:
                              type: boolean
                              description: 'Permission: Can customer delete house?'
                              example: true
                            deleteRoom:
                              type: boolean
                              description: 'Permission: Can customer delete rooms of house?'
                              example: true
                            createRoom:
                              type: boolean
                              description: >-
                                Permission: Can customer create a new rooms in
                                house?
                              example: true
                            addDevices:
                              type: boolean
                              description: >-
                                Permission: Can customer add new devices into
                                house?
                              example: true
                            deleteDevices:
                              type: boolean
                              description: >-
                                Permission: Can customer delete devices from
                                house?
                              example: true
                            moveDevices:
                              type: boolean
                              description: >-
                                Permission: Can customer move devices between
                                rooms of house?
                              example: true
                          required:
                            - maxTemperature
                            - changeTemperature
                            - renameDevices
                            - renameHouse
                            - updateHousePostalCode
                            - updateHouseTimezone
                            - renameRooms
                            - managePrograms
                            - manageVacationMode
                            - overrideWeeklyProgram
                            - deleteHouse
                            - deleteRoom
                            - createRoom
                            - addDevices
                            - deleteDevices
                            - moveDevices
                      required:
                        - house
                        - permissions
                    description: Houses which are shared with this user
                required:
                  - ownHouses
                  - sharedHouses
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimezoneNotFoundError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: listHouses
      summary: Get customer houses
      description: Returns a list of customer's houses
    post:
      tags:
        - house
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: House ID
                    example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                  name:
                    type: string
                    description: House name
                    example: Home
                  postalCode:
                    type: string
                    description: Postal code
                    example: '49101'
                  timezone:
                    type: string
                    description: Region name which timezone should be used
                    example: Europe/London
                  ownerId:
                    type: string
                    description: ID of customer who is the owner of this house
                    example: 27af30e2-69df-4274-8930-93404dcddb41
                  mode:
                    type: string
                    enum:
                      - weekly_program
                      - comfort
                      - sleep
                      - away
                      - vacation
                      - normal
                      - always_heating
                      - 'off'
                    nullable: true
                    description: House mode
                  vacationStartDate:
                    type: number
                    minimum: 0
                    maximum: 9999999999
                    description: Date in seconds since epoch (UTC time)
                    example: 1579098983
                    nullable: true
                  vacationEndDate:
                    type: number
                    minimum: 0
                    maximum: 9999999999
                    description: Date in seconds since epoch (UTC time)
                    example: 1579098983
                    nullable: true
                  vacationTemperature:
                    type: number
                    nullable: true
                    description: Temperature on vacation
                  vacationModeType:
                    type: string
                    enum:
                      - use_away_temperature
                      - use_vacation_temperature
                    nullable: true
                    description: Advanced vacation mode type
                  isVacationModeActive:
                    type: boolean
                    description: >-
                      Shows, is vacation mode active. If true, vacation mode
                      details will be sent to device shadow
                  overrideModeType:
                    type: string
                    enum:
                      - not_continuous
                      - continuous
                    nullable: true
                    description: Override mode type
                  overrideEndDate:
                    type: number
                    minimum: 0
                    maximum: 9999999999
                    description: Date in seconds since epoch (UTC time)
                    example: 1579098983
                    nullable: true
                  createdAt:
                    type: string
                    format: date-time
                    nullable: true
                    description: House creation date
                required:
                  - id
                  - name
                  - postalCode
                  - timezone
                  - ownerId
                  - mode
                  - vacationStartDate
                  - vacationEndDate
                  - vacationTemperature
                  - vacationModeType
                  - isVacationModeActive
                  - overrideModeType
                  - overrideEndDate
                  - createdAt
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HouseDuplicateName'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: createHouse
      summary: Create house
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: House name
                  example: Home
                postalCode:
                  type: string
                  description: Postal code
                  example: '49101'
                timezone:
                  type: string
                  description: Region name which timezone should be used
                  example: Europe/London
              required:
                - name
                - postalCode
                - timezone
    parameters: []
  /houses/{houseId}:
    get:
      description: Returns info about chosen house.
      summary: Get house info
      operationId: getHouseInfo
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  houseDetails:
                    type: object
                    properties:
                      id:
                        type: string
                        description: House ID
                        example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                      name:
                        type: string
                        description: House name
                        example: Home
                      postalCode:
                        type: string
                        description: Postal code
                        example: '49101'
                      timezone:
                        type: string
                        description: Region name which timezone should be used
                        example: Europe/London
                      ownerId:
                        type: string
                        description: ID of customer who is the owner of this house
                        example: 27af30e2-69df-4274-8930-93404dcddb41
                      mode:
                        type: string
                        enum:
                          - weekly_program
                          - comfort
                          - sleep
                          - away
                          - vacation
                          - normal
                          - always_heating
                          - 'off'
                        nullable: true
                        description: House mode
                      vacationStartDate:
                        type: number
                        minimum: 0
                        maximum: 9999999999
                        description: Date in seconds since epoch (UTC time)
                        example: 1579098983
                        nullable: true
                      vacationEndDate:
                        type: number
                        minimum: 0
                        maximum: 9999999999
                        description: Date in seconds since epoch (UTC time)
                        example: 1579098983
                        nullable: true
                      vacationTemperature:
                        type: number
                        nullable: true
                        description: Temperature on vacation
                      vacationModeType:
                        type: string
                        enum:
                          - use_away_temperature
                          - use_vacation_temperature
                        nullable: true
                        description: Advanced vacation mode type
                      isVacationModeActive:
                        type: boolean
                        description: >-
                          Shows, is vacation mode active. If true, vacation mode
                          details will be sent to device shadow
                      overrideModeType:
                        type: string
                        enum:
                          - not_continuous
                          - continuous
                        nullable: true
                        description: Override mode type
                      overrideEndDate:
                        type: number
                        minimum: 0
                        maximum: 9999999999
                        description: Date in seconds since epoch (UTC time)
                        example: 1579098983
                        nullable: true
                      createdAt:
                        type: string
                        format: date-time
                        nullable: true
                        description: House creation date
                    required:
                      - id
                      - name
                      - postalCode
                      - timezone
                      - ownerId
                      - mode
                      - vacationStartDate
                      - vacationEndDate
                      - vacationTemperature
                      - vacationModeType
                      - isVacationModeActive
                      - overrideModeType
                      - overrideEndDate
                      - createdAt
                  permissions:
                    type: object
                    properties:
                      maxTemperature:
                        type: number
                        nullable: true
                        description: >-
                          The maximum number of degrees Celsius that the
                          customer can set. Null value means there is no limit
                        example: 30
                      changeTemperature:
                        type: boolean
                        description: 'Permission: Can customer change the temperature?'
                        example: true
                      renameDevices:
                        type: boolean
                        description: 'Permission: Can customer rename devices in house?'
                        example: true
                      renameHouse:
                        type: boolean
                        description: 'Permission: Can customer rename house?'
                        example: true
                      updateHousePostalCode:
                        type: boolean
                        description: 'Permission: Can customer update postal code of house?'
                        example: true
                      updateHouseTimezone:
                        type: boolean
                        description: 'Permission: Can customer update timezone of house?'
                        example: true
                      renameRooms:
                        type: boolean
                        description: 'Permission: Can customer rename rooms of house?'
                        example: true
                      managePrograms:
                        type: boolean
                        description: >-
                          Permission: Can customer manage weekly programs or
                          timers?
                        example: true
                      manageVacationMode:
                        type: boolean
                        description: 'Permission: Can customer manage vacation mode?'
                        example: true
                      overrideWeeklyProgram:
                        type: boolean
                        description: 'Permission: Can customer override weekly program?'
                        example: true
                      deleteHouse:
                        type: boolean
                        description: 'Permission: Can customer delete house?'
                        example: true
                      deleteRoom:
                        type: boolean
                        description: 'Permission: Can customer delete rooms of house?'
                        example: true
                      createRoom:
                        type: boolean
                        description: 'Permission: Can customer create a new rooms in house?'
                        example: true
                      addDevices:
                        type: boolean
                        description: 'Permission: Can customer add new devices into house?'
                        example: true
                      deleteDevices:
                        type: boolean
                        description: 'Permission: Can customer delete devices from house?'
                        example: true
                      moveDevices:
                        type: boolean
                        description: >-
                          Permission: Can customer move devices between rooms of
                          house?
                        example: true
                    required:
                      - maxTemperature
                      - changeTemperature
                      - renameDevices
                      - renameHouse
                      - updateHousePostalCode
                      - updateHouseTimezone
                      - renameRooms
                      - managePrograms
                      - manageVacationMode
                      - overrideWeeklyProgram
                      - deleteHouse
                      - deleteRoom
                      - createRoom
                      - addDevices
                      - deleteDevices
                      - moveDevices
                required:
                  - houseDetails
                  - permissions
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HouseNotFoundError'
        '500':
          description: Internal Server Error
      tags:
        - house
      parameters: []
      security:
        - JWT: []
        - ApiKey: []
    delete:
      description: Deletes house from user's profile
      summary: Delete house
      operationId: deleteHouse
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                required:
                  - status
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HouseNotFoundError'
        '500':
          description: Internal Server Error
      tags:
        - house
      parameters: []
      security:
        - JWT: []
        - ApiKey: []
    parameters:
      - schema:
          type: string
          description: House ID
          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
        name: houseId
        in: path
        required: true
        description: House ID
  /houses/{houseId}/name:
    patch:
      summary: Update house name
      operationId: patchHouseName
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: House ID
                    example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                  name:
                    type: string
                    description: House name
                    example: Home
                  postalCode:
                    type: string
                    description: Postal code
                    example: '49101'
                  timezone:
                    type: string
                    description: Region name which timezone should be used
                    example: Europe/London
                  ownerId:
                    type: string
                    description: ID of customer who is the owner of this house
                    example: 27af30e2-69df-4274-8930-93404dcddb41
                  mode:
                    type: string
                    enum:
                      - weekly_program
                      - comfort
                      - sleep
                      - away
                      - vacation
                      - normal
                      - always_heating
                      - 'off'
                    nullable: true
                    description: House mode
                  vacationStartDate:
                    type: number
                    minimum: 0
                    maximum: 9999999999
                    description: Date in seconds since epoch (UTC time)
                    example: 1579098983
                    nullable: true
                  vacationEndDate:
                    type: number
                    minimum: 0
                    maximum: 9999999999
                    description: Date in seconds since epoch (UTC time)
                    example: 1579098983
                    nullable: true
                  vacationTemperature:
                    type: number
                    nullable: true
                    description: Temperature on vacation
                  vacationModeType:
                    type: string
                    enum:
                      - use_away_temperature
                      - use_vacation_temperature
                    nullable: true
                    description: Advanced vacation mode type
                  isVacationModeActive:
                    type: boolean
                    description: >-
                      Shows, is vacation mode active. If true, vacation mode
                      details will be sent to device shadow
                  overrideModeType:
                    type: string
                    enum:
                      - not_continuous
                      - continuous
                    nullable: true
                    description: Override mode type
                  overrideEndDate:
                    type: number
                    minimum: 0
                    maximum: 9999999999
                    description: Date in seconds since epoch (UTC time)
                    example: 1579098983
                    nullable: true
                  createdAt:
                    type: string
                    format: date-time
                    nullable: true
                    description: House creation date
                required:
                  - id
                  - name
                  - postalCode
                  - timezone
                  - ownerId
                  - mode
                  - vacationStartDate
                  - vacationEndDate
                  - vacationTemperature
                  - vacationModeType
                  - isVacationModeActive
                  - overrideModeType
                  - overrideEndDate
                  - createdAt
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HouseDuplicateName'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HouseNotFoundError'
        '500':
          description: Internal Server Error
      tags:
        - house
      parameters: []
      security:
        - JWT: []
        - ApiKey: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: House name
                  example: Home
              required:
                - name
    parameters:
      - schema:
          type: string
          description: House ID
          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
        name: houseId
        in: path
        required: true
        description: House ID
  /houses/{houseId}/timezone:
    patch:
      summary: Update house timezone
      operationId: patchHouseTimezone
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: House ID
                    example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                  name:
                    type: string
                    description: House name
                    example: Home
                  postalCode:
                    type: string
                    description: Postal code
                    example: '49101'
                  timezone:
                    type: string
                    description: Region name which timezone should be used
                    example: Europe/London
                  ownerId:
                    type: string
                    description: ID of customer who is the owner of this house
                    example: 27af30e2-69df-4274-8930-93404dcddb41
                  mode:
                    type: string
                    enum:
                      - weekly_program
                      - comfort
                      - sleep
                      - away
                      - vacation
                      - normal
                      - always_heating
                      - 'off'
                    nullable: true
                    description: House mode
                  vacationStartDate:
                    type: number
                    minimum: 0
                    maximum: 9999999999
                    description: Date in seconds since epoch (UTC time)
                    example: 1579098983
                    nullable: true
                  vacationEndDate:
                    type: number
                    minimum: 0
                    maximum: 9999999999
                    description: Date in seconds since epoch (UTC time)
                    example: 1579098983
                    nullable: true
                  vacationTemperature:
                    type: number
                    nullable: true
                    description: Temperature on vacation
                  vacationModeType:
                    type: string
                    enum:
                      - use_away_temperature
                      - use_vacation_temperature
                    nullable: true
                    description: Advanced vacation mode type
                  isVacationModeActive:
                    type: boolean
                    description: >-
                      Shows, is vacation mode active. If true, vacation mode
                      details will be sent to device shadow
                  overrideModeType:
                    type: string
                    enum:
                      - not_continuous
                      - continuous
                    nullable: true
                    description: Override mode type
                  overrideEndDate:
                    type: number
                    minimum: 0
                    maximum: 9999999999
                    description: Date in seconds since epoch (UTC time)
                    example: 1579098983
                    nullable: true
                  createdAt:
                    type: string
                    format: date-time
                    nullable: true
                    description: House creation date
                required:
                  - id
                  - name
                  - postalCode
                  - timezone
                  - ownerId
                  - mode
                  - vacationStartDate
                  - vacationEndDate
                  - vacationTemperature
                  - vacationModeType
                  - isVacationModeActive
                  - overrideModeType
                  - overrideEndDate
                  - createdAt
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/HouseNotFoundError'
                  - $ref: '#/components/schemas/TimezoneNotFoundError'
        '500':
          description: Internal Server Error
      tags:
        - house
      parameters: []
      security:
        - JWT: []
        - ApiKey: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                timezoneRegion:
                  type: string
                  description: Region name which timezone should be used
                  example: Europe/London
              required:
                - timezoneRegion
    parameters:
      - schema:
          type: string
          description: House ID
          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
        name: houseId
        in: path
        required: true
        description: House ID
  /houses/{houseId}/postalCode:
    patch:
      summary: Update house postal code
      operationId: patchHousePostalCode
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: House ID
                    example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                  name:
                    type: string
                    description: House name
                    example: Home
                  postalCode:
                    type: string
                    description: Postal code
                    example: '49101'
                  timezone:
                    type: string
                    description: Region name which timezone should be used
                    example: Europe/London
                  ownerId:
                    type: string
                    description: ID of customer who is the owner of this house
                    example: 27af30e2-69df-4274-8930-93404dcddb41
                  mode:
                    type: string
                    enum:
                      - weekly_program
                      - comfort
                      - sleep
                      - away
                      - vacation
                      - normal
                      - always_heating
                      - 'off'
                    nullable: true
                    description: House mode
                  vacationStartDate:
                    type: number
                    minimum: 0
                    maximum: 9999999999
                    description: Date in seconds since epoch (UTC time)
                    example: 1579098983
                    nullable: true
                  vacationEndDate:
                    type: number
                    minimum: 0
                    maximum: 9999999999
                    description: Date in seconds since epoch (UTC time)
                    example: 1579098983
                    nullable: true
                  vacationTemperature:
                    type: number
                    nullable: true
                    description: Temperature on vacation
                  vacationModeType:
                    type: string
                    enum:
                      - use_away_temperature
                      - use_vacation_temperature
                    nullable: true
                    description: Advanced vacation mode type
                  isVacationModeActive:
                    type: boolean
                    description: >-
                      Shows, is vacation mode active. If true, vacation mode
                      details will be sent to device shadow
                  overrideModeType:
                    type: string
                    enum:
                      - not_continuous
                      - continuous
                    nullable: true
                    description: Override mode type
                  overrideEndDate:
                    type: number
                    minimum: 0
                    maximum: 9999999999
                    description: Date in seconds since epoch (UTC time)
                    example: 1579098983
                    nullable: true
                  createdAt:
                    type: string
                    format: date-time
                    nullable: true
                    description: House creation date
                required:
                  - id
                  - name
                  - postalCode
                  - timezone
                  - ownerId
                  - mode
                  - vacationStartDate
                  - vacationEndDate
                  - vacationTemperature
                  - vacationModeType
                  - isVacationModeActive
                  - overrideModeType
                  - overrideEndDate
                  - createdAt
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HouseNotFoundError'
        '500':
          description: Internal Server Error
      tags:
        - house
      parameters: []
      security:
        - JWT: []
        - ApiKey: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                postalCode:
                  type: string
                  description: Postal code
                  example: '49101'
              required:
                - postalCode
    parameters:
      - schema:
          type: string
          description: House ID
          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
        name: houseId
        in: path
        required: true
        description: House ID
  /houses/{houseId}/mode/override:
    post:
      tags:
        - house
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  house:
                    type: object
                    properties:
                      id:
                        type: string
                        description: House ID
                        example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                      name:
                        type: string
                        description: House name
                        example: Home
                      postalCode:
                        type: string
                        description: Postal code
                        example: '49101'
                      timezone:
                        type: string
                        description: Region name which timezone should be used
                        example: Europe/London
                      ownerId:
                        type: string
                        description: ID of customer who is the owner of this house
                        example: 27af30e2-69df-4274-8930-93404dcddb41
                      mode:
                        type: string
                        enum:
                          - weekly_program
                          - comfort
                          - sleep
                          - away
                          - vacation
                          - normal
                          - always_heating
                          - 'off'
                        nullable: true
                        description: House mode
                      vacationStartDate:
                        type: number
                        minimum: 0
                        maximum: 9999999999
                        description: Date in seconds since epoch (UTC time)
                        example: 1579098983
                        nullable: true
                      vacationEndDate:
                        type: number
                        minimum: 0
                        maximum: 9999999999
                        description: Date in seconds since epoch (UTC time)
                        example: 1579098983
                        nullable: true
                      vacationTemperature:
                        type: number
                        nullable: true
                        description: Temperature on vacation
                      vacationModeType:
                        type: string
                        enum:
                          - use_away_temperature
                          - use_vacation_temperature
                        nullable: true
                        description: Advanced vacation mode type
                      isVacationModeActive:
                        type: boolean
                        description: >-
                          Shows, is vacation mode active. If true, vacation mode
                          details will be sent to device shadow
                      overrideModeType:
                        type: string
                        enum:
                          - not_continuous
                          - continuous
                        nullable: true
                        description: Override mode type
                      overrideEndDate:
                        type: number
                        minimum: 0
                        maximum: 9999999999
                        description: Date in seconds since epoch (UTC time)
                        example: 1579098983
                        nullable: true
                      createdAt:
                        type: string
                        format: date-time
                        nullable: true
                        description: House creation date
                    required:
                      - id
                      - name
                      - postalCode
                      - timezone
                      - ownerId
                      - mode
                      - vacationStartDate
                      - vacationEndDate
                      - vacationTemperature
                      - vacationModeType
                      - isVacationModeActive
                      - overrideModeType
                      - overrideEndDate
                      - createdAt
                  timezone:
                    type: object
                    properties:
                      region:
                        type: string
                        example: Europe/London
                      timeShift:
                        type: string
                        examples: *ref_0
                    required:
                      - region
                      - timeShift
                    nullable: true
                required:
                  - house
                  - timezone
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TimeError'
                  - type: object
                    properties:
                      error:
                        type: object
                        required:
                          - type
                          - message
                        properties:
                          type:
                            type: string
                          message:
                            type: string
                    required:
                      - error
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HouseNotFoundError'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/HouseModeError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: enableOverrideHouseMode
      summary: Enable override house mode
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                overrideModeType:
                  type: string
                  enum:
                    - not_continuous
                    - continuous
                  description: Override mode type
                overrideEndDate:
                  type: number
                  minimum: 0
                  maximum: 9999999999
                  description: Date in seconds since epoch (UTC time)
                  example: 1579098983
                houseMode:
                  type: string
                  enum:
                    - comfort
                    - sleep
                    - away
                    - normal
                    - always_heating
                    - 'off'
                  description: Temperature type
    delete:
      tags:
        - house
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: House ID
                    example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                  name:
                    type: string
                    description: House name
                    example: Home
                  postalCode:
                    type: string
                    description: Postal code
                    example: '49101'
                  timezone:
                    type: string
                    description: Region name which timezone should be used
                    example: Europe/London
                  ownerId:
                    type: string
                    description: ID of customer who is the owner of this house
                    example: 27af30e2-69df-4274-8930-93404dcddb41
                  mode:
                    type: string
                    enum:
                      - weekly_program
                      - comfort
                      - sleep
                      - away
                      - vacation
                      - normal
                      - always_heating
                      - 'off'
                    nullable: true
                    description: House mode
                  vacationStartDate:
                    type: number
                    minimum: 0
                    maximum: 9999999999
                    description: Date in seconds since epoch (UTC time)
                    example: 1579098983
                    nullable: true
                  vacationEndDate:
                    type: number
                    minimum: 0
                    maximum: 9999999999
                    description: Date in seconds since epoch (UTC time)
                    example: 1579098983
                    nullable: true
                  vacationTemperature:
                    type: number
                    nullable: true
                    description: Temperature on vacation
                  vacationModeType:
                    type: string
                    enum:
                      - use_away_temperature
                      - use_vacation_temperature
                    nullable: true
                    description: Advanced vacation mode type
                  isVacationModeActive:
                    type: boolean
                    description: >-
                      Shows, is vacation mode active. If true, vacation mode
                      details will be sent to device shadow
                  overrideModeType:
                    type: string
                    enum:
                      - not_continuous
                      - continuous
                    nullable: true
                    description: Override mode type
                  overrideEndDate:
                    type: number
                    minimum: 0
                    maximum: 9999999999
                    description: Date in seconds since epoch (UTC time)
                    example: 1579098983
                    nullable: true
                  createdAt:
                    type: string
                    format: date-time
                    nullable: true
                    description: House creation date
                required:
                  - id
                  - name
                  - postalCode
                  - timezone
                  - ownerId
                  - mode
                  - vacationStartDate
                  - vacationEndDate
                  - vacationTemperature
                  - vacationModeType
                  - isVacationModeActive
                  - overrideModeType
                  - overrideEndDate
                  - createdAt
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HouseNotFoundError'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/HouseModeError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: disableOverrideHouseMode
      summary: Disable override house mode
    parameters:
      - schema:
          type: string
          description: House ID
          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
        name: houseId
        in: path
        required: true
        description: House ID
  /houses/{houseId}/mode/vacation:
    post:
      tags:
        - house
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  house:
                    type: object
                    properties:
                      id:
                        type: string
                        description: House ID
                        example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                      name:
                        type: string
                        description: House name
                        example: Home
                      postalCode:
                        type: string
                        description: Postal code
                        example: '49101'
                      timezone:
                        type: string
                        description: Region name which timezone should be used
                        example: Europe/London
                      ownerId:
                        type: string
                        description: ID of customer who is the owner of this house
                        example: 27af30e2-69df-4274-8930-93404dcddb41
                      mode:
                        type: string
                        enum:
                          - weekly_program
                          - comfort
                          - sleep
                          - away
                          - vacation
                          - normal
                          - always_heating
                          - 'off'
                        nullable: true
                        description: House mode
                      vacationStartDate:
                        type: number
                        minimum: 0
                        maximum: 9999999999
                        description: Date in seconds since epoch (UTC time)
                        example: 1579098983
                        nullable: true
                      vacationEndDate:
                        type: number
                        minimum: 0
                        maximum: 9999999999
                        description: Date in seconds since epoch (UTC time)
                        example: 1579098983
                        nullable: true
                      vacationTemperature:
                        type: number
                        nullable: true
                        description: Temperature on vacation
                      vacationModeType:
                        type: string
                        enum:
                          - use_away_temperature
                          - use_vacation_temperature
                        nullable: true
                        description: Advanced vacation mode type
                      isVacationModeActive:
                        type: boolean
                        description: >-
                          Shows, is vacation mode active. If true, vacation mode
                          details will be sent to device shadow
                      overrideModeType:
                        type: string
                        enum:
                          - not_continuous
                          - continuous
                        nullable: true
                        description: Override mode type
                      overrideEndDate:
                        type: number
                        minimum: 0
                        maximum: 9999999999
                        description: Date in seconds since epoch (UTC time)
                        example: 1579098983
                        nullable: true
                      createdAt:
                        type: string
                        format: date-time
                        nullable: true
                        description: House creation date
                    required:
                      - id
                      - name
                      - postalCode
                      - timezone
                      - ownerId
                      - mode
                      - vacationStartDate
                      - vacationEndDate
                      - vacationTemperature
                      - vacationModeType
                      - isVacationModeActive
                      - overrideModeType
                      - overrideEndDate
                      - createdAt
                  timezone:
                    type: object
                    properties:
                      region:
                        type: string
                        example: Europe/London
                      timeShift:
                        type: string
                        examples: *ref_0
                    required:
                      - region
                      - timeShift
                    nullable: true
                required:
                  - house
                  - timezone
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TimeError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomerHasNoPermissionError'
                  - $ref: '#/components/schemas/MaxTemperatureExceedsError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HouseNotFoundError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: enableHouseVacationMode
      summary: Enable house vacation mode
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                startDate:
                  type: number
                  minimum: 0
                  maximum: 9999999999
                  description: Date in seconds since epoch (UTC time)
                  example: 1579098983
                endDate:
                  type: number
                  minimum: 0
                  maximum: 9999999999
                  description: Date in seconds since epoch (UTC time)
                  example: 1579098983
                vacationTemperature:
                  type: number
                  description: Temperature on vacation
                vacationModeType:
                  type: string
                  enum:
                    - use_away_temperature
                    - use_vacation_temperature
                  description: Advanced vacation mode type
              required:
                - startDate
                - endDate
                - vacationTemperature
                - vacationModeType
    patch:
      tags:
        - house
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  house:
                    type: object
                    properties:
                      id:
                        type: string
                        description: House ID
                        example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                      name:
                        type: string
                        description: House name
                        example: Home
                      postalCode:
                        type: string
                        description: Postal code
                        example: '49101'
                      timezone:
                        type: string
                        description: Region name which timezone should be used
                        example: Europe/London
                      ownerId:
                        type: string
                        description: ID of customer who is the owner of this house
                        example: 27af30e2-69df-4274-8930-93404dcddb41
                      mode:
                        type: string
                        enum:
                          - weekly_program
                          - comfort
                          - sleep
                          - away
                          - vacation
                          - normal
                          - always_heating
                          - 'off'
                        nullable: true
                        description: House mode
                      vacationStartDate:
                        type: number
                        minimum: 0
                        maximum: 9999999999
                        description: Date in seconds since epoch (UTC time)
                        example: 1579098983
                        nullable: true
                      vacationEndDate:
                        type: number
                        minimum: 0
                        maximum: 9999999999
                        description: Date in seconds since epoch (UTC time)
                        example: 1579098983
                        nullable: true
                      vacationTemperature:
                        type: number
                        nullable: true
                        description: Temperature on vacation
                      vacationModeType:
                        type: string
                        enum:
                          - use_away_temperature
                          - use_vacation_temperature
                        nullable: true
                        description: Advanced vacation mode type
                      isVacationModeActive:
                        type: boolean
                        description: >-
                          Shows, is vacation mode active. If true, vacation mode
                          details will be sent to device shadow
                      overrideModeType:
                        type: string
                        enum:
                          - not_continuous
                          - continuous
                        nullable: true
                        description: Override mode type
                      overrideEndDate:
                        type: number
                        minimum: 0
                        maximum: 9999999999
                        description: Date in seconds since epoch (UTC time)
                        example: 1579098983
                        nullable: true
                      createdAt:
                        type: string
                        format: date-time
                        nullable: true
                        description: House creation date
                    required:
                      - id
                      - name
                      - postalCode
                      - timezone
                      - ownerId
                      - mode
                      - vacationStartDate
                      - vacationEndDate
                      - vacationTemperature
                      - vacationModeType
                      - isVacationModeActive
                      - overrideModeType
                      - overrideEndDate
                      - createdAt
                  timezone:
                    type: object
                    properties:
                      region:
                        type: string
                        example: Europe/London
                      timeShift:
                        type: string
                        examples: *ref_0
                    required:
                      - region
                      - timeShift
                    nullable: true
                required:
                  - house
                  - timezone
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TimeError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomerHasNoPermissionError'
                  - $ref: '#/components/schemas/MaxTemperatureExceedsError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HouseNotFoundError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: changeHouseVacationMode
      summary: Change house vacation mode
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                startDate:
                  type: number
                  minimum: 0
                  maximum: 9999999999
                  description: Date in seconds since epoch (UTC time)
                  example: 1579098983
                endDate:
                  type: number
                  minimum: 0
                  maximum: 9999999999
                  description: Date in seconds since epoch (UTC time)
                  example: 1579098983
                vacationTemperature:
                  type: number
                  description: Temperature on vacation
                vacationModeType:
                  type: string
                  enum:
                    - use_away_temperature
                    - use_vacation_temperature
                  description: Advanced vacation mode type
                isVacationModeActive:
                  type: boolean
                  description: >-
                    Shows, is vacation mode active. If true, vacation mode
                    details will be sent to device shadow
              required:
                - startDate
                - endDate
                - vacationTemperature
                - vacationModeType
                - isVacationModeActive
    delete:
      tags:
        - house
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: House ID
                    example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                  name:
                    type: string
                    description: House name
                    example: Home
                  postalCode:
                    type: string
                    description: Postal code
                    example: '49101'
                  timezone:
                    type: string
                    description: Region name which timezone should be used
                    example: Europe/London
                  ownerId:
                    type: string
                    description: ID of customer who is the owner of this house
                    example: 27af30e2-69df-4274-8930-93404dcddb41
                  mode:
                    type: string
                    enum:
                      - weekly_program
                      - comfort
                      - sleep
                      - away
                      - vacation
                      - normal
                      - always_heating
                      - 'off'
                    nullable: true
                    description: House mode
                  vacationStartDate:
                    type: number
                    minimum: 0
                    maximum: 9999999999
                    description: Date in seconds since epoch (UTC time)
                    example: 1579098983
                    nullable: true
                  vacationEndDate:
                    type: number
                    minimum: 0
                    maximum: 9999999999
                    description: Date in seconds since epoch (UTC time)
                    example: 1579098983
                    nullable: true
                  vacationTemperature:
                    type: number
                    nullable: true
                    description: Temperature on vacation
                  vacationModeType:
                    type: string
                    enum:
                      - use_away_temperature
                      - use_vacation_temperature
                    nullable: true
                    description: Advanced vacation mode type
                  isVacationModeActive:
                    type: boolean
                    description: >-
                      Shows, is vacation mode active. If true, vacation mode
                      details will be sent to device shadow
                  overrideModeType:
                    type: string
                    enum:
                      - not_continuous
                      - continuous
                    nullable: true
                    description: Override mode type
                  overrideEndDate:
                    type: number
                    minimum: 0
                    maximum: 9999999999
                    description: Date in seconds since epoch (UTC time)
                    example: 1579098983
                    nullable: true
                  createdAt:
                    type: string
                    format: date-time
                    nullable: true
                    description: House creation date
                required:
                  - id
                  - name
                  - postalCode
                  - timezone
                  - ownerId
                  - mode
                  - vacationStartDate
                  - vacationEndDate
                  - vacationTemperature
                  - vacationModeType
                  - isVacationModeActive
                  - overrideModeType
                  - overrideEndDate
                  - createdAt
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HouseNotFoundError'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/HouseModeError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: disableHouseVacationMode
      summary: Disable house vacation mode
    parameters:
      - schema:
          type: string
          description: House ID
          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
        name: houseId
        in: path
        required: true
        description: House ID
  /houses/{houseId}/share:
    post:
      tags:
        - house
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - ok
                required:
                  - message
      security:
        - JWT: []
        - ApiKey: []
      operationId: postSharedHouse
      summary: Share house
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                customerEmail:
                  type: string
                  format: email
                  description: >-
                    Email of the customer with whom house or its rooms would be
                    shared.
                  example: carl_johnson1972@gmail.com
                customerPhone:
                  type: string
                  description: >-
                    Phone number of the customer with whom house or its rooms
                    would be shared.
                  example: '+15433848374'
                roomIds:
                  type: array
                  items:
                    type: string
                    description: Room ID
                    example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
                  nullable: true
                  description: >-
                    An array of room IDs associated with the shared house. Null
                    if the whole house would be shared
                permissions:
                  type: object
                  properties:
                    maxTemperature:
                      type: number
                      description: >-
                        The maximum number of degrees Celsius that the customer
                        can set. Not required if there is no limit
                      example: 30
                    changeTemperature:
                      type: boolean
                      description: 'Permission: Can customer change the temperature?'
                      example: true
                    renameDevices:
                      type: boolean
                      description: 'Permission: Can customer rename devices in house?'
                      example: true
                    renameHouse:
                      type: boolean
                      description: 'Permission: Can customer rename house?'
                      example: true
                    updateHousePostalCode:
                      type: boolean
                      description: 'Permission: Can customer update postal code of house?'
                      example: true
                    updateHouseTimezone:
                      type: boolean
                      description: 'Permission: Can customer update timezone of house?'
                      example: true
                    renameRooms:
                      type: boolean
                      description: 'Permission: Can customer rename rooms of house?'
                      example: true
                    managePrograms:
                      type: boolean
                      description: >-
                        Permission: Can customer manage weekly programs or
                        timers?
                      example: true
                    manageVacationMode:
                      type: boolean
                      description: 'Permission: Can customer manage vacation mode?'
                      example: true
                    overrideWeeklyProgram:
                      type: boolean
                      description: 'Permission: Can customer override weekly program?'
                      example: true
                    deleteHouse:
                      type: boolean
                      description: 'Permission: Can customer delete house?'
                      example: true
                    deleteRoom:
                      type: boolean
                      description: 'Permission: Can customer delete rooms of house?'
                      example: true
                    createRoom:
                      type: boolean
                      description: 'Permission: Can customer create a new rooms in house?'
                      example: true
                    addDevices:
                      type: boolean
                      description: 'Permission: Can customer add new devices into house?'
                      example: true
                    deleteDevices:
                      type: boolean
                      description: 'Permission: Can customer delete devices from house?'
                      example: true
                    moveDevices:
                      type: boolean
                      description: >-
                        Permission: Can customer move devices between rooms of
                        house?
                      example: true
                  required:
                    - changeTemperature
                    - renameDevices
                    - renameHouse
                    - updateHousePostalCode
                    - updateHouseTimezone
                    - renameRooms
                    - managePrograms
                    - manageVacationMode
                    - overrideWeeklyProgram
                    - deleteHouse
                    - deleteRoom
                    - createRoom
                    - addDevices
                    - deleteDevices
                    - moveDevices
              required:
                - permissions
    parameters:
      - schema:
          type: string
          description: Id of house which is shared with another customer
          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
        name: houseId
        in: path
        required: true
        description: Id of house which is shared with another customer
  /houses/{houseId}/customers/{customerSharedWithId}:
    patch:
      tags:
        - house
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  permissionsUpdated:
                    type: object
                    properties:
                      houseId:
                        type: string
                        description: Id of house which is shared with another customer
                        example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                      customerSharedWithId:
                        type: string
                        description: The ID of the customer with whom the home was shared
                        example: 27af30e2-69df-4274-8930-93404dcddb41
                      maxTemperature:
                        type: number
                        nullable: true
                        description: >-
                          The maximum number of degrees Celsius that the
                          customer can set. Null value means there is no limit
                        example: 30
                      changeTemperature:
                        type: boolean
                        description: 'Permission: Can customer change the temperature?'
                        example: true
                      renameDevices:
                        type: boolean
                        description: 'Permission: Can customer rename devices in house?'
                        example: true
                      renameHouse:
                        type: boolean
                        description: 'Permission: Can customer rename house?'
                        example: true
                      updateHousePostalCode:
                        type: boolean
                        description: 'Permission: Can customer update postal code of house?'
                        example: true
                      updateHouseTimezone:
                        type: boolean
                        description: 'Permission: Can customer update timezone of house?'
                        example: true
                      renameRooms:
                        type: boolean
                        description: 'Permission: Can customer rename rooms of house?'
                        example: true
                      managePrograms:
                        type: boolean
                        description: >-
                          Permission: Can customer manage weekly programs or
                          timers?
                        example: true
                      manageVacationMode:
                        type: boolean
                        description: 'Permission: Can customer manage vacation mode?'
                        example: true
                      overrideWeeklyProgram:
                        type: boolean
                        description: 'Permission: Can customer override weekly program?'
                        example: true
                      deleteHouse:
                        type: boolean
                        description: 'Permission: Can customer delete house?'
                        example: true
                      deleteRoom:
                        type: boolean
                        description: 'Permission: Can customer delete rooms of house?'
                        example: true
                      createRoom:
                        type: boolean
                        description: 'Permission: Can customer create a new rooms in house?'
                        example: true
                      addDevices:
                        type: boolean
                        description: 'Permission: Can customer add new devices into house?'
                        example: true
                      deleteDevices:
                        type: boolean
                        description: 'Permission: Can customer delete devices from house?'
                        example: true
                      moveDevices:
                        type: boolean
                        description: >-
                          Permission: Can customer move devices between rooms of
                          house?
                        example: true
                    required:
                      - houseId
                      - customerSharedWithId
                      - maxTemperature
                      - changeTemperature
                      - renameDevices
                      - renameHouse
                      - updateHousePostalCode
                      - updateHouseTimezone
                      - renameRooms
                      - managePrograms
                      - manageVacationMode
                      - overrideWeeklyProgram
                      - deleteHouse
                      - deleteRoom
                      - createRoom
                      - addDevices
                      - deleteDevices
                      - moveDevices
                    nullable: true
                    description: Updated shared house schema. If null, nothing was updated
                  accessToRoomsShared:
                    type: array
                    items:
                      type: string
                      description: Room ID
                      example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
                    description: List of room IDs to which access is shared for now
                  accessToRoomsRevoked:
                    type: array
                    items:
                      type: string
                      description: Room ID
                      example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
                    nullable: true
                    description: >-
                      List of room IDs to which access is revoked after update.
                      If null, nothing was updated
                required:
                  - permissionsUpdated
                  - accessToRoomsShared
                  - accessToRoomsRevoked
      security:
        - JWT: []
        - ApiKey: []
      operationId: patchSharedHouse
      summary: Update house sharing
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                roomIds:
                  type: array
                  items:
                    type: string
                    description: Room ID
                    example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
                  nullable: true
                  description: >-
                    An array of room IDs associated with the shared home. Null
                    if the whole house would be shared
                permissions:
                  type: object
                  properties:
                    maxTemperature:
                      type: number
                      nullable: true
                      description: >-
                        The maximum number of degrees Celsius that the customer
                        can set. Null value means there is no limit
                      example: 30
                    changeTemperature:
                      type: boolean
                      description: 'Permission: Can customer change the temperature?'
                      example: true
                    renameDevices:
                      type: boolean
                      description: 'Permission: Can customer rename devices in house?'
                      example: true
                    renameHouse:
                      type: boolean
                      description: 'Permission: Can customer rename house?'
                      example: true
                    updateHousePostalCode:
                      type: boolean
                      description: 'Permission: Can customer update postal code of house?'
                      example: true
                    updateHouseTimezone:
                      type: boolean
                      description: 'Permission: Can customer update timezone of house?'
                      example: true
                    renameRooms:
                      type: boolean
                      description: 'Permission: Can customer rename rooms of house?'
                      example: true
                    managePrograms:
                      type: boolean
                      description: >-
                        Permission: Can customer manage weekly programs or
                        timers?
                      example: true
                    manageVacationMode:
                      type: boolean
                      description: 'Permission: Can customer manage vacation mode?'
                      example: true
                    overrideWeeklyProgram:
                      type: boolean
                      description: 'Permission: Can customer override weekly program?'
                      example: true
                    deleteHouse:
                      type: boolean
                      description: 'Permission: Can customer delete house?'
                      example: true
                    deleteRoom:
                      type: boolean
                      description: 'Permission: Can customer delete rooms of house?'
                      example: true
                    createRoom:
                      type: boolean
                      description: 'Permission: Can customer create a new rooms in house?'
                      example: true
                    addDevices:
                      type: boolean
                      description: 'Permission: Can customer add new devices into house?'
                      example: true
                    deleteDevices:
                      type: boolean
                      description: 'Permission: Can customer delete devices from house?'
                      example: true
                    moveDevices:
                      type: boolean
                      description: >-
                        Permission: Can customer move devices between rooms of
                        house?
                      example: true
              minProperties: 1
    delete:
      tags:
        - house
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                required:
                  - status
      security:
        - JWT: []
        - ApiKey: []
      operationId: deleteHouseSharing
      summary: Delete house sharing
    parameters:
      - schema:
          type: string
          description: Id of house which is shared with another customer
          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
        name: houseId
        in: path
        required: true
        description: Id of house which is shared with another customer
      - schema:
          type: string
          description: The ID of the customer with whom the home was shared
          example: 27af30e2-69df-4274-8930-93404dcddb41
        name: customerSharedWithId
        in: path
        required: true
        description: The ID of the customer with whom the home was shared
  /houses/{houseId}/leave:
    delete:
      tags:
        - house
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                required:
                  - status
      security:
        - JWT: []
        - ApiKey: []
      operationId: leaveHouse
      description: Allows the customer who was invited to house to leave this house
      summary: Leave house
    parameters:
      - schema:
          type: string
          description: Id of house which is shared with another customer
          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
        name: houseId
        in: path
        required: true
        description: Id of house which is shared with another customer
  /houses/{houseId}/customers:
    get:
      tags:
        - house
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  houseSharings:
                    type: array
                    items:
                      type: object
                      properties:
                        customer:
                          type: object
                          properties:
                            id:
                              type: string
                              description: Customer ID, UUID
                              example: 27af30e2-69df-4274-8930-93404dcddb41
                            firstName:
                              type: string
                              nullable: true
                              description: First name of customer
                              example: Carl
                            lastName:
                              type: string
                              nullable: true
                              description: Last name of customer
                              example: Johnson
                            phoneNumber:
                              type: string
                              nullable: true
                              description: Phone number with country code
                              example: '+15433848374'
                            phoneNumberInfo:
                              type: string
                              nullable: true
                              description: Additional Phone number with country code
                              example: '+15433848374'
                            email:
                              type: string
                              format: email
                              nullable: true
                              description: Customer email
                              example: carl_johnson1972@gmail.com
                            emailInfo:
                              type: string
                              format: email
                              nullable: true
                              description: Customer additional email
                              example: carl_johnson1972@gmail.com
                            postalCode:
                              type: string
                              nullable: true
                              description: Postal code
                              example: '49101'
                            countryCode:
                              type: string
                              nullable: true
                              description: Code of country where the customer is from
                              example: '47'
                            country:
                              type: string
                              nullable: true
                              description: Country where the customer is from
                              example: CA
                            temperatureUnit:
                              type: string
                              enum:
                                - C
                                - F
                              description: Temperature unit preferred by customer
                            twentyFourHours:
                              type: boolean
                              description: Is 24-hour time mode enabled for customer
                              example: true
                            newsletterSubscription:
                              type: boolean
                              description: Does customer have newsletter subscriptions
                              example: false
                            textMessageSubscription:
                              type: boolean
                              description: Does customer have text message subscription
                              example: false
                            accountType:
                              type: string
                              enum:
                                - individual
                                - business
                              description: Account type
                            companyName:
                              type: string
                              nullable: true
                              description: Company name
                            businessName:
                              type: string
                              nullable: true
                              description: Business name
                            businessEmail:
                              type: string
                              nullable: true
                              description: Business email
                            businessPhoneNumber:
                              type: string
                              nullable: true
                              description: Business phone number
                            apiAccessStatus:
                              type: string
                              enum:
                                - pending
                                - approved
                                - suspended
                              nullable: true
                              description: API access status
                            createdAt:
                              type: string
                              format: date-time
                              description: Customer creation date
                          required:
                            - id
                            - firstName
                            - lastName
                            - phoneNumber
                            - phoneNumberInfo
                            - email
                            - emailInfo
                            - postalCode
                            - countryCode
                            - country
                            - temperatureUnit
                            - twentyFourHours
                            - newsletterSubscription
                            - textMessageSubscription
                            - accountType
                            - companyName
                            - businessName
                            - businessEmail
                            - businessPhoneNumber
                            - apiAccessStatus
                            - createdAt
                        sharedRooms:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                description: Room ID
                                example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
                              name:
                                type: string
                                description: Room name
                                example: Living room
                              houseId:
                                type: string
                                description: ID of house the room is attached to
                                example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                              roomComfortTemperature:
                                type: number
                                nullable: true
                                description: Room temperature in comfort mode
                                example: 23
                              roomSleepTemperature:
                                type: number
                                nullable: true
                                description: Room temperature in sleep mode
                                example: 27
                              roomAwayTemperature:
                                type: number
                                nullable: true
                                description: Room temperature in away mode
                                example: 27
                              overrideModeType:
                                type: string
                                enum:
                                  - continuous
                                  - not_continuous
                                nullable: true
                                description: >-
                                  Override mode type. If not continuous,
                                  overrideEndDate is required
                              overrideEndDate:
                                type: number
                                minimum: 0
                                maximum: 9999999999
                                description: Date in seconds since epoch (UTC time)
                                example: 1579098983
                                nullable: true
                              roomProgramId:
                                type: string
                                description: ID of room program attached to the room
                                nullable: true
                                example: b6730c1e-c775-43ba-8fa0-e6d07c39e21c
                              roomControlSource:
                                type: string
                                enum:
                                  - mobile_api
                                  - open_api
                                  - tibber
                                nullable: true
                                description: >-
                                  The desired control source of every device in
                                  this room
                              mode:
                                type: string
                                enum:
                                  - weekly_program
                                  - comfort
                                  - sleep
                                  - away
                                  - vacation
                                  - normal
                                  - always_heating
                                  - 'off'
                                nullable: true
                                description: Room mode
                              createdAt:
                                type: string
                                format: date-time
                                nullable: true
                                description: Room creation date
                            required:
                              - id
                              - name
                              - houseId
                              - roomComfortTemperature
                              - roomSleepTemperature
                              - roomAwayTemperature
                              - overrideModeType
                              - overrideEndDate
                              - roomProgramId
                              - roomControlSource
                              - mode
                              - createdAt
                        permissions:
                          type: object
                          properties:
                            maxTemperature:
                              type: number
                              nullable: true
                              description: >-
                                The maximum number of degrees Celsius that the
                                customer can set. Null value means there is no
                                limit
                              example: 30
                            changeTemperature:
                              type: boolean
                              description: 'Permission: Can customer change the temperature?'
                              example: true
                            renameDevices:
                              type: boolean
                              description: >-
                                Permission: Can customer rename devices in
                                house?
                              example: true
                            renameHouse:
                              type: boolean
                              description: 'Permission: Can customer rename house?'
                              example: true
                            updateHousePostalCode:
                              type: boolean
                              description: >-
                                Permission: Can customer update postal code of
                                house?
                              example: true
                            updateHouseTimezone:
                              type: boolean
                              description: >-
                                Permission: Can customer update timezone of
                                house?
                              example: true
                            renameRooms:
                              type: boolean
                              description: 'Permission: Can customer rename rooms of house?'
                              example: true
                            managePrograms:
                              type: boolean
                              description: >-
                                Permission: Can customer manage weekly programs
                                or timers?
                              example: true
                            manageVacationMode:
                              type: boolean
                              description: 'Permission: Can customer manage vacation mode?'
                              example: true
                            overrideWeeklyProgram:
                              type: boolean
                              description: >-
                                Permission: Can customer override weekly
                                program?
                              example: true
                            deleteHouse:
                              type: boolean
                              description: 'Permission: Can customer delete house?'
                              example: true
                            deleteRoom:
                              type: boolean
                              description: 'Permission: Can customer delete rooms of house?'
                              example: true
                            createRoom:
                              type: boolean
                              description: >-
                                Permission: Can customer create a new rooms in
                                house?
                              example: true
                            addDevices:
                              type: boolean
                              description: >-
                                Permission: Can customer add new devices into
                                house?
                              example: true
                            deleteDevices:
                              type: boolean
                              description: >-
                                Permission: Can customer delete devices from
                                house?
                              example: true
                            moveDevices:
                              type: boolean
                              description: >-
                                Permission: Can customer move devices between
                                rooms of house?
                              example: true
                          required:
                            - maxTemperature
                            - changeTemperature
                            - renameDevices
                            - renameHouse
                            - updateHousePostalCode
                            - updateHouseTimezone
                            - renameRooms
                            - managePrograms
                            - manageVacationMode
                            - overrideWeeklyProgram
                            - deleteHouse
                            - deleteRoom
                            - createRoom
                            - addDevices
                            - deleteDevices
                            - moveDevices
                      required:
                        - customer
                        - sharedRooms
                        - permissions
                    description: Customers which have access to this house
                required:
                  - houseSharings
      security:
        - JWT: []
        - ApiKey: []
      operationId: getCustomersForSharedHouse
      summary: Get customers of shared house
    parameters:
      - schema:
          type: string
          description: Id of house which is shared with another customer
          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
        name: houseId
        in: path
        required: true
        description: Id of house which is shared with another customer
  /houses/sharedHouses/customers:
    get:
      tags:
        - house
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  houses:
                    type: array
                    items:
                      type: object
                      properties:
                        house:
                          type: object
                          properties:
                            houseId:
                              type: string
                              description: House ID
                              example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                            houseName:
                              type: string
                              description: House name
                              example: Home
                            ownerId:
                              type: string
                              description: ID of customer who is the owner of this house
                              example: 27af30e2-69df-4274-8930-93404dcddb41
                          required:
                            - houseId
                            - houseName
                            - ownerId
                        customers:
                          type: array
                          items:
                            type: object
                            properties:
                              houseId:
                                type: string
                                description: House ID
                                example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                              isSharedCustomer:
                                type: boolean
                                description: Whether customer is shared customer
                              changePermission:
                                type: boolean
                                description: Can customer change the permission?
                              customerId:
                                type: string
                                description: Customer ID, UUID
                                example: 27af30e2-69df-4274-8930-93404dcddb41
                              customerName:
                                type: string
                                description: Name of customer
                            required:
                              - houseId
                              - isSharedCustomer
                              - changePermission
                              - customerId
                              - customerName
                      required:
                        - house
                        - customers
                    description: Houses and shared customers
                required:
                  - houses
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomerNotFoundError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: getAllHousesAndSharedCustomers
      summary: Get all houses and shared customers
      description: >-
        This endpoint returns every house of current user where he is either
        owner or guest and also customer details who has access to house
    parameters: []
  /devices/{deviceId}/customers/current:
    post:
      tags:
        - device
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  device:
                    type: object
                    properties:
                      deviceId:
                        type: string
                        format: uuid
                        description: Device ID
                      macAddress:
                        type: string
                        description: MAC address of the device
                        example: '00:00:00:00:00:00'
                      deviceType:
                        type: string
                        format: uuid
                        description: Id of Device type
                      isConnected:
                        type: boolean
                        description: Whether the device is connected to the network
                      customName:
                        type: string
                        nullable: true
                        description: Custom name of the device
                        example: My device
                      houseId:
                        type: string
                        description: House ID where the device is located
                        example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                        nullable: true
                      roomId:
                        type: string
                        description: Room ID where the device is located
                        example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
                        nullable: true
                      isArchived:
                        type: boolean
                        description: Whether the device is archived
                      isEnabled:
                        type: boolean
                        nullable: true
                        description: Whether the device is on/off
                      controlSource:
                        type: string
                        enum:
                          - mobile_api
                          - open_api
                          - tibber
                        description: >-
                          Control source of the device. By default it is
                          "mobile_api"
                        example: tibber
                      createdAt:
                        type: string
                        format: date-time
                        nullable: true
                        description: Device creation date
                    required:
                      - deviceId
                      - macAddress
                      - deviceType
                      - isConnected
                      - customName
                      - houseId
                      - roomId
                      - isArchived
                      - isEnabled
                      - controlSource
                      - createdAt
                    nullable: true
                  timezone:
                    type: object
                    properties:
                      region:
                        type: string
                        example: Europe/London
                      timeShift:
                        type: string
                        examples: *ref_0
                    required:
                      - region
                      - timeShift
                required:
                  - message
                  - device
                  - timezone
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DeviceIsArchivedError'
                  - $ref: '#/components/schemas/DeviceIsUsedError'
                  - $ref: '#/components/schemas/SensorUsageError'
                  - $ref: '#/components/schemas/HouseRoomMatchError'
                  - $ref: '#/components/schemas/DeviceDuplicateNameError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DeviceNotFoundError'
                  - $ref: '#/components/schemas/HouseNotFoundError'
                  - $ref: '#/components/schemas/RoomNotFoundError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: addDeviceToCustomer
      summary: Add device to customer
      description: >-
        Adds device to customer's profile. Put device in one of rooms of the
        house or not
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                customName:
                  type: string
                  description: How should the device name to be displayed
                  example: My device
                houseId:
                  type: string
                  description: >-
                    If only houseId is provided, device will not be attached to
                    any room
                  example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                roomId:
                  type: string
                  description: >-
                    If a roomId is provided, the device will be assigned to that
                    room and the corresponding house. In this case houseId is
                    not required
                  example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
              required:
                - customName
    delete:
      tags:
        - device
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DeviceIsNotAttachedError'
                  - $ref: '#/components/schemas/DeviceIsUsedError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceNotFoundError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: deleteDeviceFromCustomer
      summary: Delete device from customer
      description: >-
        Deletes device from customer's profile but not from general device table
        in database
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                keepMetrics:
                  type: boolean
              required:
                - keepMetrics
    parameters:
      - schema:
          type: string
          format: uuid
          description: Device ID
        name: deviceId
        in: path
        required: true
        description: Device ID
  /devices/{deviceId}/attach:
    post:
      tags:
        - device
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  device:
                    type: object
                    properties:
                      deviceId:
                        type: string
                        format: uuid
                        description: Device ID
                      macAddress:
                        type: string
                        description: MAC address of the device
                        example: '00:00:00:00:00:00'
                      deviceType:
                        type: string
                        format: uuid
                        description: Id of Device type
                      isConnected:
                        type: boolean
                        description: Whether the device is connected to the network
                      customName:
                        type: string
                        nullable: true
                        description: Custom name of the device
                        example: My device
                      houseId:
                        type: string
                        description: House ID where the device is located
                        example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                        nullable: true
                      roomId:
                        type: string
                        description: Room ID where the device is located
                        example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
                        nullable: true
                      isArchived:
                        type: boolean
                        description: Whether the device is archived
                      isEnabled:
                        type: boolean
                        nullable: true
                        description: Whether the device is on/off
                      controlSource:
                        type: string
                        enum:
                          - mobile_api
                          - open_api
                          - tibber
                        description: >-
                          Control source of the device. By default it is
                          "mobile_api"
                        example: tibber
                      createdAt:
                        type: string
                        format: date-time
                        nullable: true
                        description: Device creation date
                    required:
                      - deviceId
                      - macAddress
                      - deviceType
                      - isConnected
                      - customName
                      - houseId
                      - roomId
                      - isArchived
                      - isEnabled
                      - controlSource
                      - createdAt
                  timezone:
                    type: object
                    properties:
                      region:
                        type: string
                        example: Europe/London
                      timeShift:
                        type: string
                        examples: *ref_0
                    required:
                      - region
                      - timeShift
                    nullable: true
                required:
                  - message
                  - device
                  - timezone
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: attachDeviceToCustomerHouse
      summary: Attach device to customer house or room
      description: >-
        Moves device between customer's houses and rooms. To make devices an
        independent one  send just a current house ID without room.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                houseId:
                  type: string
                  description: >-
                    If only houseId is provided, device will not be attached to
                    any room
                  example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                roomId:
                  type: string
                  description: >-
                    If a roomId is provided, the device will be assigned to that
                    room and the corresponding house. In this case houseId is
                    not required
                  example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
    parameters:
      - schema:
          type: string
          format: uuid
          description: Device ID
        name: deviceId
        in: path
        required: true
        description: Device ID
  /devices/sensors/{sensorId}/assign:
    post:
      tags:
        - device
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                  calibrationSuccess:
                    type: boolean
                    nullable: true
                  calibrationMessage:
                    type: string
                    nullable: true
                  calibrationResult:
                    type: array
                    items:
                      type: object
                      properties:
                        deviceId:
                          type: string
                          format: uuid
                          description: Device ID
                        macAddress:
                          type: string
                          description: MAC address of the device
                          example: '00:00:00:00:00:00'
                        customName:
                          type: string
                          nullable: true
                          description: Custom name of the device
                          example: My device
                        oldTemperatureAmbient:
                          type: number
                          description: >-
                            Actual temperature after applying the calibration
                            offset. If the temperature sensor is faulty, this
                            field will be equal -100 C. Temperature in Celsius
                            degrees
                          nullable: true
                        currentTemperatureAmbient:
                          type: number
                          description: >-
                            Actual temperature after applying the calibration
                            offset. If the temperature sensor is faulty, this
                            field will be equal -100 C. Temperature in Celsius
                            degrees
                          nullable: true
                        powerStatus:
                          type: number
                          description: >-
                            If the device is on (not in operation mode off or
                            temperature is not set to 0): 0=off, 1=on
                          nullable: true
                        temperatureCalibrationOffset:
                          type: number
                          nullable: true
                          description: Offset for ambient temperature
                        success:
                          type: boolean
                        message:
                          type: string
                          nullable: true
                      required:
                        - deviceId
                        - macAddress
                        - customName
                        - oldTemperatureAmbient
                        - currentTemperatureAmbient
                        - powerStatus
                        - temperatureCalibrationOffset
                        - success
                        - message
                    nullable: true
                required:
                  - status
                  - calibrationSuccess
                  - calibrationMessage
                  - calibrationResult
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/HouseRoomMatchError'
                  - $ref: '#/components/schemas/SensorUsageError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DeviceNotFoundError'
                  - $ref: '#/components/schemas/HouseNotFoundError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: assignSensorToRooms
      summary: Assign sensor to rooms
      description: >-
        Assigns sensor to multiple rooms. The sensor will be unassigned from
        rooms which IDs are not provided.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                assignmentParameters:
                  type: array
                  items:
                    type: object
                    properties:
                      roomId:
                        type: string
                        description: IDs of rooms which sensor should be assigned to
                        example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
                      tempFlag:
                        type: boolean
                        description: "Specifies if other devices (heaters) in the room, \n\t\tshould be controlled based on temperature reading from Air Sensor"
                      bindFlag:
                        type: boolean
                        description: >-
                          Specifies if sensor data should be displayed on the
                          Room screens
                    required:
                      - roomId
                      - tempFlag
                      - bindFlag
              required:
                - assignmentParameters
    parameters:
      - schema:
          type: string
          format: uuid
          description: Device ID
        name: sensorId
        in: path
        required: true
        description: Device ID
  /houses/{houseId}/devices/stats/connected:
    get:
      summary: Get connected house devices stat
      description: Returns the number of connected/disconnected devices in chosen house
      operationId: getHouseDevicesStatsConnected
      responses:
        '200':
          description: Returns how many devices are connected/disconnected
          content:
            application/json:
              schema:
                type: object
                properties:
                  'on':
                    type: number
                  'off':
                    type: number
                required:
                  - 'on'
                  - 'off'
                description: Returns how many devices are connected/disconnected
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '500':
          description: Internal Server Error
      tags:
        - house
      security:
        - JWT: []
        - ApiKey: []
    parameters:
      - schema:
          type: string
          description: House ID
          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
        name: houseId
        in: path
        required: true
        description: House ID
  /devices/{deviceId}/data:
    get:
      tags:
        - device
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  deviceId:
                    type: string
                    format: uuid
                    description: Device ID
                  macAddress:
                    type: string
                    description: MAC address of the device
                    example: '00:00:00:00:00:00'
                  deviceType:
                    type: object
                    properties:
                      childType:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            description: Device Type ID
                          name:
                            type: string
                            description: Name of type
                            example: GL-Oil Heater G3
                        required:
                          - id
                          - name
                      parentType:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            description: Device Type ID
                          name:
                            type: string
                            description: Name of type
                            example: GL-Oil Heater G3
                        required:
                          - id
                          - name
                    required:
                      - childType
                      - parentType
                  isConnected:
                    type: boolean
                    description: Whether the device is connected to the network
                  customName:
                    type: string
                    nullable: true
                    description: Custom name of the device
                    example: My device
                  houseId:
                    type: string
                    description: House ID where the device is located
                    example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                    nullable: true
                  roomId:
                    type: string
                    description: Room ID where the device is located
                    example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
                    nullable: true
                  isArchived:
                    type: boolean
                    description: Whether the device is archived
                  isEnabled:
                    type: boolean
                    nullable: true
                    description: Whether the device is on/off
                  controlSource:
                    type: string
                    enum:
                      - mobile_api
                      - open_api
                      - tibber
                    description: >-
                      Control source of the device. By default it is
                      "mobile_api"
                    example: tibber
                  createdAt:
                    type: string
                    format: date-time
                    nullable: true
                    description: Device creation date
                  deviceSettings:
                    oneOf:
                      - type: object
                        properties:
                          reported:
                            type: object
                            properties:
                              operation_mode:
                                type: string
                                enum:
                                  - weekly_program
                                  - 'off'
                                  - independent_device
                                  - control_individually
                                nullable: true
                                description: "\n\"off\"  - all control disable\n\t\t\n\"weekly_program\" - follow the weekly program, changing temperature by display buttons changes the temperature of the current temperature mode\n\t\t\n\"independent_device\"  - follow the single set value, with timers enabled\n\t\t\n\"control_individually\"  - follow the single set value, but not use any timers or weekly program"
                              override_weekly_program:
                                type: object
                                properties:
                                  value_type:
                                    type: string
                                    enum:
                                      - comfort
                                      - sleep
                                      - away
                                      - normal
                                      - always_heating
                                      - 'off'
                                    nullable: true
                                  ends_at:
                                    type: number
                                    nullable: true
                                    description: >-
                                      UTC timestamp in seconds when the override
                                      mode ends
                                required:
                                  - value_type
                                  - ends_at
                                nullable: true
                                description: >-
                                  Overwrite the currently running weekly program
                                  with a temporary change of a specific
                                  temperature type (e.g. comfort). Time value of
                                  0 means weekly program overwrite is not active
                                  anymore (disabled). Time should be a UTC
                                  timestamp when the program should end
                              non_repeatable_timers:
                                type: object
                                properties:
                                  timers:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        value_type:
                                          type: string
                                          enum:
                                            - normal
                                            - 'off'
                                            - always_heating
                                        timestamp:
                                          type: number
                                      required:
                                        - value_type
                                        - timestamp
                                required:
                                  - timers
                                nullable: true
                                description: >-
                                  A single pair represents time and value when
                                  the temperature mode should be changed. Time
                                  defines when to switch to a specific
                                  temperature type (set in the second field of
                                  the pair). Time is as local unix timestamp (so
                                  timezone is included), but in minutes, e.g. on
                                  17.05.2021 the time is 27020801. Allowed
                                  temperature types for timers: "normal", "off",
                                  "always_heating". Only used in independent
                                  mode
                              temperature_normal:
                                type: number
                                minimum: 0
                                maximum: 100
                                nullable: true
                                description: >-
                                  Set temperature value, used for operation
                                  modes "Independent device" and timers
                              temperature_comfort:
                                type: number
                                minimum: 0
                                maximum: 50
                                nullable: true
                              temperature_sleep:
                                type: number
                                minimum: 0
                                maximum: 50
                                nullable: true
                              temperature_away:
                                type: number
                                minimum: 0
                                maximum: 50
                                nullable: true
                              temperature_vacation:
                                type: number
                                minimum: 0
                                maximum: 50
                                nullable: true
                              temperature_last_set:
                                type: number
                                minimum: 0
                                maximum: 100
                                nullable: true
                                description: >-
                                  The temperature that the device is currently
                                  following
                              vacation_mode:
                                type: object
                                properties:
                                  start_timestamp:
                                    type: number
                                    nullable: true
                                    description: >-
                                      UTC timestamp in minutes when the vacation
                                      mode starts
                                  end_timestamp:
                                    type: number
                                    nullable: true
                                    description: >-
                                      UTC timestamp in minutes when the vacation
                                      mode ends
                                  advanced:
                                    type: boolean
                                    nullable: true
                                    description: >-
                                      Advanced vacation mode - heaters will be
                                      regulated regarding "away" temperature by
                                      each room: false=OFF, true=ON
                                required:
                                  - start_timestamp
                                  - end_timestamp
                                  - advanced
                                nullable: true
                              lock_status:
                                type: string
                                enum:
                                  - no_lock
                                  - child
                                  - commercial
                                nullable: true
                              predictive_heating_type:
                                type: string
                                enum:
                                  - 'off'
                                  - simple
                                  - advanced
                                nullable: true
                                description: "\n\"off\" - No predictive heating. Temperature will be change exactly with the weekly program timer\n\t\t\n\"simple\"  - Simple predictive heating. Temperature will be change before the timer, with a fixed time for each Celsius degree\n\t\t\n\"advanced\" - Advanced predictive heating. Temperature will be change before the timer, with a time based on the current room model. Model is estimated while running."
                              open_window:
                                type: object
                                properties:
                                  drop_temperature_threshold:
                                    type: number
                                    description: >-
                                      Required temperature drop to trigger
                                      (activate) the open window functionality,
                                      in Celsius degrees
                                  drop_time_range:
                                    type: number
                                    description: >-
                                      Time range when a drop of temperature will
                                      be expected, in seconds
                                  increase_temperature_threshold:
                                    type: number
                                    description: >-
                                      Required temperature increase to
                                      deactivate open window functionality
                                  increase_time_range:
                                    type: number
                                    description: >-
                                      Time range when an increase of temperature
                                      will be expected, in seconds
                                  max_time:
                                    type: number
                                    description: >-
                                      Max time duration of the open window
                                      activeness
                                  enabled:
                                    type: boolean
                                    description: >-
                                      State of the open window functionality.
                                      True if open window functionality is
                                      enabled (that is whether the device can go
                                      into this mode while operating)
                                  activated:
                                    type: boolean
                                    description: >-
                                      Current state of the open window. True if
                                      open window is currently detected by
                                      device and is activated. You can
                                      deactivate currently detected open window
                                      by changing this value to false.
                                required:
                                  - enabled
                                nullable: true
                              temperature_calibration_offset:
                                type: number
                                nullable: true
                                description: Offset for ambient temperature
                              display_unit:
                                type: string
                                enum:
                                  - celsius
                                  - fahrenheit
                                nullable: true
                                description: >-
                                  the temperature units: "celsius" or
                                  "fahrenheit" to set
                              oil_heater_power_level:
                                oneOf:
                                  - type: number
                                    enum:
                                      - 40
                                  - type: number
                                    enum:
                                      - 60
                                  - type: number
                                    enum:
                                      - 100
                                nullable: true
                                description: >-
                                  Set the max heating level in percentage of the
                                  nominal wattage. Oil heater allows setting 3
                                  different max power settings (40, 60 or 100%
                                  of the power), done by selecting number of
                                  active heating elements.
                              temperature_in_independent_mode:
                                type: number
                                minimum: 0
                                maximum: 100
                                nullable: true
                                description: >-
                                  Change temperature in independent mode now.
                                  Use values 0.0 and 99.0 to set ALWAYS_ON and
                                  ALWAYS_OFF, respectively. Apart from changing
                                  value for some temperature type, in
                                  "Independent device" operation mode, one also
                                  needs to call this command to change the
                                  current temperature
                              additional_socket_mode:
                                type: string
                                enum:
                                  - heating
                                  - cooling
                                  - always_on
                                  - always_off
                                nullable: true
                                description: "Command only for the socket heater, to select heating/cooling mode. ALWAYS_ON, ALWAYS_OFF modes just for convenience, as if these can be enabled also by other commands.\n\t\t"
                              pid_parameters:
                                type: object
                                properties:
                                  kp:
                                    type: number
                                    description: The proportional part gain
                                  ki:
                                    type: number
                                    description: The integral part gain
                                  kd:
                                    type: number
                                    description: The derivative part gain
                                  kd_filter_N:
                                    type: number
                                    description: The derivative filter time coefficient
                                  windup_limit:
                                    type: number
                                    description: >-
                                      The windup limit for integral part from 0
                                      to 100
                                required:
                                  - kp
                                  - ki
                                  - kd
                                  - kd_filter_N
                                  - windup_limit
                                nullable: true
                              max_heater_power:
                                type: number
                                nullable: true
                                description: Set max heater power in Watts
                              limited_heating_power:
                                type: number
                                minimum: 10
                                maximum: 100
                                nullable: true
                                description: >-
                                  Only for heaters with triac (panel/storage).
                                  Allows to limit the heating percentage between
                                  10 and 100 percent.
                              hysteresis:
                                type: object
                                properties:
                                  upper:
                                    type: number
                                    description: >-
                                      Set hysteresis parameters. Setting
                                      hysteresis parameters will change current
                                      regulator type to hysteresis. Upper offset
                                      (set temp + this -> stop heat)
                                  lower:
                                    type: number
                                    description: >-
                                      Set hysteresis parameters. Setting
                                      hysteresis parameters will change current
                                      regulator type to hysteresis. Lower offset
                                      (set temp - this -> start heat)
                                required:
                                  - upper
                                  - lower
                                nullable: true
                              regulator_type:
                                type: string
                                enum:
                                  - pid
                                  - hysteresis_or_slow_pid
                                  - unknown
                                nullable: true
                              timezone:
                                type: string
                                nullable: true
                              calibration_target_ambient_temperature:
                                type: number
                                nullable: true
                                description: >-
                                  Target for calibrating ambient temperature for
                                  heaters gen.2
                              fan_state:
                                type: string
                                enum:
                                  - 'on'
                                  - 'off'
                                nullable: true
                                description: Fan state of convection heaters gen.2
                              weekly_program:
                                type: object
                                properties:
                                  timers:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        value_type:
                                          type: string
                                          enum:
                                            - comfort
                                            - sleep
                                            - away
                                            - normal
                                            - always_heating
                                            - 'off'
                                        timestamp:
                                          type: number
                                      required:
                                        - value_type
                                        - timestamp
                                required:
                                  - timers
                                nullable: true
                                description: "The weekly program is a list of repeating pairs of values. A single pair represents time and value when the temperature mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific temperature type (set in the second field of the pair). Needs to be ordered ascending by time.\n\t\t\nFor mode \"independent device\" use only temperature types OFF and NORMAL, to avoid issues with changing the temperature by buttons from the heater"
                            required:
                              - operation_mode
                              - override_weekly_program
                              - non_repeatable_timers
                              - temperature_normal
                              - temperature_comfort
                              - temperature_sleep
                              - temperature_away
                              - temperature_vacation
                              - vacation_mode
                              - lock_status
                              - predictive_heating_type
                              - open_window
                              - temperature_calibration_offset
                              - display_unit
                              - oil_heater_power_level
                              - temperature_in_independent_mode
                              - additional_socket_mode
                              - pid_parameters
                              - max_heater_power
                              - limited_heating_power
                              - hysteresis
                              - regulator_type
                              - timezone
                              - calibration_target_ambient_temperature
                              - fan_state
                              - weekly_program
                            nullable: true
                          desired:
                            type: object
                            properties:
                              operation_mode:
                                type: string
                                enum:
                                  - weekly_program
                                  - 'off'
                                  - independent_device
                                  - control_individually
                                nullable: true
                                description: "\n\"off\"  - all control disable\n\t\t\n\"weekly_program\" - follow the weekly program, changing temperature by display buttons changes the temperature of the current temperature mode\n\t\t\n\"independent_device\"  - follow the single set value, with timers enabled\n\t\t\n\"control_individually\"  - follow the single set value, but not use any timers or weekly program"
                              override_weekly_program:
                                type: object
                                properties:
                                  value_type:
                                    type: string
                                    enum:
                                      - comfort
                                      - sleep
                                      - away
                                      - normal
                                      - always_heating
                                      - 'off'
                                    nullable: true
                                  ends_at:
                                    type: number
                                    nullable: true
                                    description: >-
                                      UTC timestamp in seconds when the override
                                      mode ends
                                required:
                                  - value_type
                                  - ends_at
                                nullable: true
                                description: >-
                                  Overwrite the currently running weekly program
                                  with a temporary change of a specific
                                  temperature type (e.g. comfort). Time value of
                                  0 means weekly program overwrite is not active
                                  anymore (disabled). Time should be a UTC
                                  timestamp when the program should end
                              non_repeatable_timers:
                                type: object
                                properties:
                                  timers:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        value_type:
                                          type: string
                                          enum:
                                            - normal
                                            - 'off'
                                            - always_heating
                                        timestamp:
                                          type: number
                                      required:
                                        - value_type
                                        - timestamp
                                required:
                                  - timers
                                nullable: true
                                description: >-
                                  A single pair represents time and value when
                                  the temperature mode should be changed. Time
                                  defines when to switch to a specific
                                  temperature type (set in the second field of
                                  the pair). Time is as local unix timestamp (so
                                  timezone is included), but in minutes, e.g. on
                                  17.05.2021 the time is 27020801. Allowed
                                  temperature types for timers: "normal", "off",
                                  "always_heating". Only used in independent
                                  mode
                              temperature_normal:
                                type: number
                                minimum: 0
                                maximum: 100
                                nullable: true
                                description: >-
                                  Set temperature value, used for operation
                                  modes "Independent device" and timers
                              temperature_comfort:
                                type: number
                                minimum: 0
                                maximum: 50
                                nullable: true
                              temperature_sleep:
                                type: number
                                minimum: 0
                                maximum: 50
                                nullable: true
                              temperature_away:
                                type: number
                                minimum: 0
                                maximum: 50
                                nullable: true
                              temperature_vacation:
                                type: number
                                minimum: 0
                                maximum: 50
                                nullable: true
                              temperature_last_set:
                                type: number
                                minimum: 0
                                maximum: 100
                                nullable: true
                                description: >-
                                  The temperature that the device is currently
                                  following
                              vacation_mode:
                                type: object
                                properties:
                                  start_timestamp:
                                    type: number
                                    nullable: true
                                    description: >-
                                      UTC timestamp in minutes when the vacation
                                      mode starts
                                  end_timestamp:
                                    type: number
                                    nullable: true
                                    description: >-
                                      UTC timestamp in minutes when the vacation
                                      mode ends
                                  advanced:
                                    type: boolean
                                    nullable: true
                                    description: >-
                                      Advanced vacation mode - heaters will be
                                      regulated regarding "away" temperature by
                                      each room: false=OFF, true=ON
                                required:
                                  - start_timestamp
                                  - end_timestamp
                                  - advanced
                                nullable: true
                              lock_status:
                                type: string
                                enum:
                                  - no_lock
                                  - child
                                  - commercial
                                nullable: true
                              predictive_heating_type:
                                type: string
                                enum:
                                  - 'off'
                                  - simple
                                  - advanced
                                nullable: true
                                description: "\n\"off\" - No predictive heating. Temperature will be change exactly with the weekly program timer\n\t\t\n\"simple\"  - Simple predictive heating. Temperature will be change before the timer, with a fixed time for each Celsius degree\n\t\t\n\"advanced\" - Advanced predictive heating. Temperature will be change before the timer, with a time based on the current room model. Model is estimated while running."
                              open_window:
                                type: object
                                properties:
                                  drop_temperature_threshold:
                                    type: number
                                    description: >-
                                      Required temperature drop to trigger
                                      (activate) the open window functionality,
                                      in Celsius degrees
                                  drop_time_range:
                                    type: number
                                    description: >-
                                      Time range when a drop of temperature will
                                      be expected, in seconds
                                  increase_temperature_threshold:
                                    type: number
                                    description: >-
                                      Required temperature increase to
                                      deactivate open window functionality
                                  increase_time_range:
                                    type: number
                                    description: >-
                                      Time range when an increase of temperature
                                      will be expected, in seconds
                                  max_time:
                                    type: number
                                    description: >-
                                      Max time duration of the open window
                                      activeness
                                  enabled:
                                    type: boolean
                                    description: >-
                                      State of the open window functionality.
                                      True if open window functionality is
                                      enabled (that is whether the device can go
                                      into this mode while operating)
                                  activated:
                                    type: boolean
                                    description: >-
                                      Current state of the open window. True if
                                      open window is currently detected by
                                      device and is activated. You can
                                      deactivate currently detected open window
                                      by changing this value to false.
                                required:
                                  - enabled
                                nullable: true
                              temperature_calibration_offset:
                                type: number
                                nullable: true
                                description: Offset for ambient temperature
                              display_unit:
                                type: string
                                enum:
                                  - celsius
                                  - fahrenheit
                                nullable: true
                                description: >-
                                  the temperature units: "celsius" or
                                  "fahrenheit" to set
                              oil_heater_power_level:
                                oneOf:
                                  - type: number
                                    enum:
                                      - 40
                                  - type: number
                                    enum:
                                      - 60
                                  - type: number
                                    enum:
                                      - 100
                                nullable: true
                                description: >-
                                  Set the max heating level in percentage of the
                                  nominal wattage. Oil heater allows setting 3
                                  different max power settings (40, 60 or 100%
                                  of the power), done by selecting number of
                                  active heating elements.
                              temperature_in_independent_mode:
                                type: number
                                minimum: 0
                                maximum: 100
                                nullable: true
                                description: >-
                                  Change temperature in independent mode now.
                                  Use values 0.0 and 99.0 to set ALWAYS_ON and
                                  ALWAYS_OFF, respectively. Apart from changing
                                  value for some temperature type, in
                                  "Independent device" operation mode, one also
                                  needs to call this command to change the
                                  current temperature
                              additional_socket_mode:
                                type: string
                                enum:
                                  - heating
                                  - cooling
                                  - always_on
                                  - always_off
                                nullable: true
                                description: "Command only for the socket heater, to select heating/cooling mode. ALWAYS_ON, ALWAYS_OFF modes just for convenience, as if these can be enabled also by other commands.\n\t\t"
                              pid_parameters:
                                type: object
                                properties:
                                  kp:
                                    type: number
                                    description: The proportional part gain
                                  ki:
                                    type: number
                                    description: The integral part gain
                                  kd:
                                    type: number
                                    description: The derivative part gain
                                  kd_filter_N:
                                    type: number
                                    description: The derivative filter time coefficient
                                  windup_limit:
                                    type: number
                                    description: >-
                                      The windup limit for integral part from 0
                                      to 100
                                required:
                                  - kp
                                  - ki
                                  - kd
                                  - kd_filter_N
                                  - windup_limit
                                nullable: true
                              max_heater_power:
                                type: number
                                nullable: true
                                description: Set max heater power in Watts
                              limited_heating_power:
                                type: number
                                minimum: 10
                                maximum: 100
                                nullable: true
                                description: >-
                                  Only for heaters with triac (panel/storage).
                                  Allows to limit the heating percentage between
                                  10 and 100 percent.
                              hysteresis:
                                type: object
                                properties:
                                  upper:
                                    type: number
                                    description: >-
                                      Set hysteresis parameters. Setting
                                      hysteresis parameters will change current
                                      regulator type to hysteresis. Upper offset
                                      (set temp + this -> stop heat)
                                  lower:
                                    type: number
                                    description: >-
                                      Set hysteresis parameters. Setting
                                      hysteresis parameters will change current
                                      regulator type to hysteresis. Lower offset
                                      (set temp - this -> start heat)
                                required:
                                  - upper
                                  - lower
                                nullable: true
                              regulator_type:
                                type: string
                                enum:
                                  - pid
                                  - hysteresis_or_slow_pid
                                  - unknown
                                nullable: true
                              timezone:
                                type: string
                                nullable: true
                              calibration_target_ambient_temperature:
                                type: number
                                nullable: true
                                description: >-
                                  Target for calibrating ambient temperature for
                                  heaters gen.2
                              fan_state:
                                type: string
                                enum:
                                  - 'on'
                                  - 'off'
                                nullable: true
                                description: Fan state of convection heaters gen.2
                              weekly_program:
                                type: object
                                properties:
                                  timers:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        value_type:
                                          type: string
                                          enum:
                                            - comfort
                                            - sleep
                                            - away
                                            - normal
                                            - always_heating
                                            - 'off'
                                        timestamp:
                                          type: number
                                      required:
                                        - value_type
                                        - timestamp
                                required:
                                  - timers
                                nullable: true
                                description: "The weekly program is a list of repeating pairs of values. A single pair represents time and value when the temperature mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific temperature type (set in the second field of the pair). Needs to be ordered ascending by time.\n\t\t\nFor mode \"independent device\" use only temperature types OFF and NORMAL, to avoid issues with changing the temperature by buttons from the heater"
                            required:
                              - operation_mode
                              - override_weekly_program
                              - non_repeatable_timers
                              - temperature_normal
                              - temperature_comfort
                              - temperature_sleep
                              - temperature_away
                              - temperature_vacation
                              - vacation_mode
                              - lock_status
                              - predictive_heating_type
                              - open_window
                              - temperature_calibration_offset
                              - display_unit
                              - oil_heater_power_level
                              - temperature_in_independent_mode
                              - additional_socket_mode
                              - pid_parameters
                              - max_heater_power
                              - limited_heating_power
                              - hysteresis
                              - regulator_type
                              - timezone
                              - calibration_target_ambient_temperature
                              - fan_state
                              - weekly_program
                            nullable: true
                          delta:
                            type: object
                            properties:
                              operation_mode:
                                type: string
                                enum:
                                  - weekly_program
                                  - 'off'
                                  - independent_device
                                  - control_individually
                                nullable: true
                                description: "\n\"off\"  - all control disable\n\t\t\n\"weekly_program\" - follow the weekly program, changing temperature by display buttons changes the temperature of the current temperature mode\n\t\t\n\"independent_device\"  - follow the single set value, with timers enabled\n\t\t\n\"control_individually\"  - follow the single set value, but not use any timers or weekly program"
                              override_weekly_program:
                                type: object
                                properties:
                                  value_type:
                                    type: string
                                    enum:
                                      - comfort
                                      - sleep
                                      - away
                                      - normal
                                      - always_heating
                                      - 'off'
                                    nullable: true
                                  ends_at:
                                    type: number
                                    nullable: true
                                    description: >-
                                      UTC timestamp in seconds when the override
                                      mode ends
                                required:
                                  - value_type
                                  - ends_at
                                nullable: true
                                description: >-
                                  Overwrite the currently running weekly program
                                  with a temporary change of a specific
                                  temperature type (e.g. comfort). Time value of
                                  0 means weekly program overwrite is not active
                                  anymore (disabled). Time should be a UTC
                                  timestamp when the program should end
                              non_repeatable_timers:
                                type: object
                                properties:
                                  timers:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        value_type:
                                          type: string
                                          enum:
                                            - normal
                                            - 'off'
                                            - always_heating
                                        timestamp:
                                          type: number
                                      required:
                                        - value_type
                                        - timestamp
                                required:
                                  - timers
                                nullable: true
                                description: >-
                                  A single pair represents time and value when
                                  the temperature mode should be changed. Time
                                  defines when to switch to a specific
                                  temperature type (set in the second field of
                                  the pair). Time is as local unix timestamp (so
                                  timezone is included), but in minutes, e.g. on
                                  17.05.2021 the time is 27020801. Allowed
                                  temperature types for timers: "normal", "off",
                                  "always_heating". Only used in independent
                                  mode
                              temperature_normal:
                                type: number
                                minimum: 0
                                maximum: 100
                                nullable: true
                                description: >-
                                  Set temperature value, used for operation
                                  modes "Independent device" and timers
                              temperature_comfort:
                                type: number
                                minimum: 0
                                maximum: 50
                                nullable: true
                              temperature_sleep:
                                type: number
                                minimum: 0
                                maximum: 50
                                nullable: true
                              temperature_away:
                                type: number
                                minimum: 0
                                maximum: 50
                                nullable: true
                              temperature_vacation:
                                type: number
                                minimum: 0
                                maximum: 50
                                nullable: true
                              temperature_last_set:
                                type: number
                                minimum: 0
                                maximum: 100
                                nullable: true
                                description: >-
                                  The temperature that the device is currently
                                  following
                              vacation_mode:
                                type: object
                                properties:
                                  start_timestamp:
                                    type: number
                                    nullable: true
                                    description: >-
                                      UTC timestamp in minutes when the vacation
                                      mode starts
                                  end_timestamp:
                                    type: number
                                    nullable: true
                                    description: >-
                                      UTC timestamp in minutes when the vacation
                                      mode ends
                                  advanced:
                                    type: boolean
                                    nullable: true
                                    description: >-
                                      Advanced vacation mode - heaters will be
                                      regulated regarding "away" temperature by
                                      each room: false=OFF, true=ON
                                nullable: true
                              lock_status:
                                type: string
                                enum:
                                  - no_lock
                                  - child
                                  - commercial
                                nullable: true
                              predictive_heating_type:
                                type: string
                                enum:
                                  - 'off'
                                  - simple
                                  - advanced
                                nullable: true
                                description: "\n\"off\" - No predictive heating. Temperature will be change exactly with the weekly program timer\n\t\t\n\"simple\"  - Simple predictive heating. Temperature will be change before the timer, with a fixed time for each Celsius degree\n\t\t\n\"advanced\" - Advanced predictive heating. Temperature will be change before the timer, with a time based on the current room model. Model is estimated while running."
                              open_window:
                                type: object
                                properties:
                                  drop_temperature_threshold:
                                    type: number
                                    description: >-
                                      Required temperature drop to trigger
                                      (activate) the open window functionality,
                                      in Celsius degrees
                                  drop_time_range:
                                    type: number
                                    description: >-
                                      Time range when a drop of temperature will
                                      be expected, in seconds
                                  increase_temperature_threshold:
                                    type: number
                                    description: >-
                                      Required temperature increase to
                                      deactivate open window functionality
                                  increase_time_range:
                                    type: number
                                    description: >-
                                      Time range when an increase of temperature
                                      will be expected, in seconds
                                  max_time:
                                    type: number
                                    description: >-
                                      Max time duration of the open window
                                      activeness
                                  enabled:
                                    type: boolean
                                    description: >-
                                      State of the open window functionality.
                                      True if open window functionality is
                                      enabled (that is whether the device can go
                                      into this mode while operating)
                                  activated:
                                    type: boolean
                                    description: >-
                                      Current state of the open window. True if
                                      open window is currently detected by
                                      device and is activated. You can
                                      deactivate currently detected open window
                                      by changing this value to false.
                                nullable: true
                              temperature_calibration_offset:
                                type: number
                                nullable: true
                                description: Offset for ambient temperature
                              display_unit:
                                type: string
                                enum:
                                  - celsius
                                  - fahrenheit
                                nullable: true
                                description: >-
                                  the temperature units: "celsius" or
                                  "fahrenheit" to set
                              oil_heater_power_level:
                                oneOf:
                                  - type: number
                                    enum:
                                      - 40
                                  - type: number
                                    enum:
                                      - 60
                                  - type: number
                                    enum:
                                      - 100
                                nullable: true
                                description: >-
                                  Set the max heating level in percentage of the
                                  nominal wattage. Oil heater allows setting 3
                                  different max power settings (40, 60 or 100%
                                  of the power), done by selecting number of
                                  active heating elements.
                              temperature_in_independent_mode:
                                type: number
                                minimum: 0
                                maximum: 100
                                nullable: true
                                description: >-
                                  Change temperature in independent mode now.
                                  Use values 0.0 and 99.0 to set ALWAYS_ON and
                                  ALWAYS_OFF, respectively. Apart from changing
                                  value for some temperature type, in
                                  "Independent device" operation mode, one also
                                  needs to call this command to change the
                                  current temperature
                              additional_socket_mode:
                                type: string
                                enum:
                                  - heating
                                  - cooling
                                  - always_on
                                  - always_off
                                nullable: true
                                description: "Command only for the socket heater, to select heating/cooling mode. ALWAYS_ON, ALWAYS_OFF modes just for convenience, as if these can be enabled also by other commands.\n\t\t"
                              pid_parameters:
                                type: object
                                properties:
                                  kp:
                                    type: number
                                    description: The proportional part gain
                                  ki:
                                    type: number
                                    description: The integral part gain
                                  kd:
                                    type: number
                                    description: The derivative part gain
                                  kd_filter_N:
                                    type: number
                                    description: The derivative filter time coefficient
                                  windup_limit:
                                    type: number
                                    description: >-
                                      The windup limit for integral part from 0
                                      to 100
                                nullable: true
                              max_heater_power:
                                type: number
                                nullable: true
                                description: Set max heater power in Watts
                              limited_heating_power:
                                type: number
                                minimum: 10
                                maximum: 100
                                nullable: true
                                description: >-
                                  Only for heaters with triac (panel/storage).
                                  Allows to limit the heating percentage between
                                  10 and 100 percent.
                              hysteresis:
                                type: object
                                properties:
                                  upper:
                                    type: number
                                    description: >-
                                      Set hysteresis parameters. Setting
                                      hysteresis parameters will change current
                                      regulator type to hysteresis. Upper offset
                                      (set temp + this -> stop heat)
                                  lower:
                                    type: number
                                    description: >-
                                      Set hysteresis parameters. Setting
                                      hysteresis parameters will change current
                                      regulator type to hysteresis. Lower offset
                                      (set temp - this -> start heat)
                                nullable: true
                              regulator_type:
                                type: string
                                enum:
                                  - pid
                                  - hysteresis_or_slow_pid
                                  - unknown
                                nullable: true
                              timezone:
                                type: string
                                nullable: true
                              calibration_target_ambient_temperature:
                                type: number
                                nullable: true
                                description: >-
                                  Target for calibrating ambient temperature for
                                  heaters gen.2
                              fan_state:
                                type: string
                                enum:
                                  - 'on'
                                  - 'off'
                                nullable: true
                                description: Fan state of convection heaters gen.2
                              weekly_program:
                                type: object
                                properties:
                                  timers:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        value_type:
                                          type: string
                                          enum:
                                            - comfort
                                            - sleep
                                            - away
                                            - normal
                                            - always_heating
                                            - 'off'
                                        timestamp:
                                          type: number
                                      required:
                                        - value_type
                                        - timestamp
                                required:
                                  - timers
                                nullable: true
                                description: "The weekly program is a list of repeating pairs of values. A single pair represents time and value when the temperature mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific temperature type (set in the second field of the pair). Needs to be ordered ascending by time.\n\t\t\nFor mode \"independent device\" use only temperature types OFF and NORMAL, to avoid issues with changing the temperature by buttons from the heater"
                            nullable: true
                        required:
                          - reported
                          - desired
                          - delta
                        description: Heater or Socket AWS IoT Thing shadow object
                      - type: object
                        properties:
                          reported:
                            type: object
                            properties:
                              lock_status:
                                type: string
                                enum:
                                  - no_lock
                                  - child
                                nullable: true
                              fan_speed_mode:
                                type: string
                                enum:
                                  - HARD_OFF
                                  - SOFT_OFF
                                  - AUTO
                                  - SLEEP
                                  - BOOST
                                  - TURN_ON
                                  - MANUAL
                                  - MANUAL_LEVEL1
                                  - MANUAL_LEVEL2
                                  - MANUAL_LEVEL3
                                  - MANUAL_LEVEL4
                                  - MANUAL_LEVEL5
                                  - MANUAL_LEVEL6
                                  - MANUAL_LEVEL7
                                  - MANUAL_LEVEL8
                                nullable: true
                                description: "\n\t\t\t\nHARD_OFF - disable fan, stop to gather data from sensors, disconnect from wifi, can be disabled only via \ndisplay\n\t\t\t\nSOFT_OFF - disable fan but device is still connected to the wifi and gather data from sensors\n\t\t\t\nAUTO - device automatically determine current fan speed level based on the measurements from sensors\n\t\t\t\nSLEEP - lower display brightness, low fan speed\n\t\t\t\nBOOST - maximum available fan speed\n\t\t\t\nTURN_ON - disable Soft/Hard OFF and enable mode which was before OFF\n\t\t\t\nMANUAL - switch to manual mode with level as for Auto Mode\n\t\t\t\nMANUAL_LEVEL1\n\t\t\t\nMANUAL_LEVEL2\n\t\t\t\nMANUAL_LEVEL3\n\t\t\t\nMANUAL_LEVEL4\n\t\t\t\nMANUAL_LEVEL5\n\t\t\t\nMANUAL_LEVEL6\n\t\t\t\nMANUAL_LEVEL7\n\t\t\t\nMANUAL_LEVEL8 (only for AP Large)"
                              repeatable_timers:
                                type: object
                                properties:
                                  timers:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        fan_speed_mode:
                                          type: string
                                          enum:
                                            - HARD_OFF
                                            - SOFT_OFF
                                            - AUTO
                                            - SLEEP
                                            - BOOST
                                            - TURN_ON
                                            - MANUAL
                                            - MANUAL_LEVEL1
                                            - MANUAL_LEVEL2
                                            - MANUAL_LEVEL3
                                            - MANUAL_LEVEL4
                                            - MANUAL_LEVEL5
                                            - MANUAL_LEVEL6
                                            - MANUAL_LEVEL7
                                            - MANUAL_LEVEL8
                                        timestamp:
                                          type: number
                                      required:
                                        - fan_speed_mode
                                        - timestamp
                                required:
                                  - timers
                                nullable: true
                                description: "The repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                              non_repeatable_timers:
                                type: object
                                properties:
                                  timers:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        fan_speed_mode:
                                          type: string
                                          enum:
                                            - HARD_OFF
                                            - SOFT_OFF
                                            - AUTO
                                            - SLEEP
                                            - BOOST
                                            - TURN_ON
                                            - MANUAL
                                            - MANUAL_LEVEL1
                                            - MANUAL_LEVEL2
                                            - MANUAL_LEVEL3
                                            - MANUAL_LEVEL4
                                            - MANUAL_LEVEL5
                                            - MANUAL_LEVEL6
                                            - MANUAL_LEVEL7
                                            - MANUAL_LEVEL8
                                        timestamp:
                                          type: number
                                      required:
                                        - fan_speed_mode
                                        - timestamp
                                required:
                                  - timers
                                nullable: true
                                description: "The non-repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is as local unix timestamp (so timezone is included), but in minutes, e.g. on 17.05.2021 the time is 27020801. when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                              aiq_displaying_mode:
                                type: boolean
                                nullable: true
                                description: "false - display AiQ Lights in Inactivity Mode only if red (default option)\n\t\t\t\t\t\ntrue - always display AiQ Lights in Inactivity Mode"
                              sensor_type:
                                type: string
                                enum:
                                  - particles
                                  - TVOC
                                  - both
                                nullable: true
                              filter_state:
                                type: string
                                enum:
                                  - OK
                                  - MEDIUM_DIRTY
                                  - DIRTY
                                  - MUST_BE_CHANGED
                                nullable: true
                              is_particle_sensor_faulty:
                                type: boolean
                                nullable: true
                              is_temp_sensor_faulty:
                                type: boolean
                                nullable: true
                              is_tvoc_sensor_faulty:
                                type: boolean
                                nullable: true
                              timezone:
                                type: string
                                nullable: true
                              display_brightness:
                                type: number
                                nullable: true
                              particles_trigger_values_threshold:
                                type: object
                                properties:
                                  particles_trigger_values_threshold_for_level1:
                                    type: number
                                  particles_trigger_values_threshold_for_level2:
                                    type: number
                                  particles_trigger_values_threshold_for_level3:
                                    type: number
                                  particles_trigger_values_threshold_for_level4:
                                    type: number
                                  particles_trigger_values_threshold_for_level5:
                                    type: number
                                  particles_trigger_values_threshold_for_level6:
                                    type: number
                                  particles_trigger_values_threshold_for_level7:
                                    type: number
                                nullable: true
                              tvoc_trigger_values_threshold:
                                type: object
                                properties:
                                  tvoc_trigger_values_threshold_for_level1:
                                    type: number
                                  tvoc_trigger_values_threshold_for_level2:
                                    type: number
                                  tvoc_trigger_values_threshold_for_level3:
                                    type: number
                                  tvoc_trigger_values_threshold_for_level4:
                                    type: number
                                  tvoc_trigger_values_threshold_for_level5:
                                    type: number
                                  tvoc_trigger_values_threshold_for_level6:
                                    type: number
                                  tvoc_trigger_values_threshold_for_level7:
                                    type: number
                                nullable: true
                              auto_mode_fan_rpm:
                                type: object
                                properties:
                                  auto_mode_fan_rpm_level1:
                                    type: number
                                  auto_mode_fan_rpm_level2:
                                    type: number
                                  auto_mode_fan_rpm_level3:
                                    type: number
                                  auto_mode_fan_rpm_level4:
                                    type: number
                                  auto_mode_fan_rpm_level5:
                                    type: number
                                  auto_mode_fan_rpm_level6:
                                    type: number
                                  auto_mode_fan_rpm_level7:
                                    type: number
                                  auto_mode_fan_rpm_level8:
                                    type: number
                                nullable: true
                              manual_sleep_boost_fan_rpm:
                                type: object
                                properties:
                                  manual_mode_fan_rpm_level1:
                                    type: number
                                  manual_mode_fan_rpm_level2:
                                    type: number
                                  manual_mode_fan_rpm_level3:
                                    type: number
                                  manual_mode_fan_rpm_level4:
                                    type: number
                                  manual_mode_fan_rpm_level5:
                                    type: number
                                  manual_mode_fan_rpm_level6:
                                    type: number
                                  manual_mode_fan_rpm_level7:
                                    type: number
                                  manual_mode_fan_rpm_level8:
                                    type: number
                                  boost_mode_fan_rpm:
                                    type: number
                                  sleep_mode_fan_rpm:
                                    type: number
                                nullable: true
                              auto_mode_fan_levels_states:
                                type: object
                                properties:
                                  auto_mode_fan_state_level1:
                                    type: boolean
                                  auto_mode_fan_state_level2:
                                    type: boolean
                                  auto_mode_fan_state_level3:
                                    type: boolean
                                  auto_mode_fan_state_level4:
                                    type: boolean
                                  auto_mode_fan_state_level5:
                                    type: boolean
                                  auto_mode_fan_state_level6:
                                    type: boolean
                                  auto_mode_fan_state_level7:
                                    type: boolean
                                  auto_mode_fan_state_level8:
                                    type: boolean
                                nullable: true
                            required:
                              - lock_status
                              - fan_speed_mode
                              - repeatable_timers
                              - non_repeatable_timers
                              - aiq_displaying_mode
                              - filter_state
                              - is_particle_sensor_faulty
                              - is_temp_sensor_faulty
                              - is_tvoc_sensor_faulty
                              - timezone
                              - display_brightness
                              - particles_trigger_values_threshold
                              - auto_mode_fan_rpm
                              - manual_sleep_boost_fan_rpm
                              - auto_mode_fan_levels_states
                            nullable: true
                          desired:
                            type: object
                            properties:
                              lock_status:
                                type: string
                                enum:
                                  - no_lock
                                  - child
                                nullable: true
                              fan_speed_mode:
                                type: string
                                enum:
                                  - HARD_OFF
                                  - SOFT_OFF
                                  - AUTO
                                  - SLEEP
                                  - BOOST
                                  - TURN_ON
                                  - MANUAL
                                  - MANUAL_LEVEL1
                                  - MANUAL_LEVEL2
                                  - MANUAL_LEVEL3
                                  - MANUAL_LEVEL4
                                  - MANUAL_LEVEL5
                                  - MANUAL_LEVEL6
                                  - MANUAL_LEVEL7
                                  - MANUAL_LEVEL8
                                nullable: true
                                description: "\n\t\t\t\nHARD_OFF - disable fan, stop to gather data from sensors, disconnect from wifi, can be disabled only via \ndisplay\n\t\t\t\nSOFT_OFF - disable fan but device is still connected to the wifi and gather data from sensors\n\t\t\t\nAUTO - device automatically determine current fan speed level based on the measurements from sensors\n\t\t\t\nSLEEP - lower display brightness, low fan speed\n\t\t\t\nBOOST - maximum available fan speed\n\t\t\t\nTURN_ON - disable Soft/Hard OFF and enable mode which was before OFF\n\t\t\t\nMANUAL - switch to manual mode with level as for Auto Mode\n\t\t\t\nMANUAL_LEVEL1\n\t\t\t\nMANUAL_LEVEL2\n\t\t\t\nMANUAL_LEVEL3\n\t\t\t\nMANUAL_LEVEL4\n\t\t\t\nMANUAL_LEVEL5\n\t\t\t\nMANUAL_LEVEL6\n\t\t\t\nMANUAL_LEVEL7\n\t\t\t\nMANUAL_LEVEL8 (only for AP Large)"
                              repeatable_timers:
                                type: object
                                properties:
                                  timers:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        fan_speed_mode:
                                          type: string
                                          enum:
                                            - HARD_OFF
                                            - SOFT_OFF
                                            - AUTO
                                            - SLEEP
                                            - BOOST
                                            - TURN_ON
                                            - MANUAL
                                            - MANUAL_LEVEL1
                                            - MANUAL_LEVEL2
                                            - MANUAL_LEVEL3
                                            - MANUAL_LEVEL4
                                            - MANUAL_LEVEL5
                                            - MANUAL_LEVEL6
                                            - MANUAL_LEVEL7
                                            - MANUAL_LEVEL8
                                        timestamp:
                                          type: number
                                      required:
                                        - fan_speed_mode
                                        - timestamp
                                required:
                                  - timers
                                nullable: true
                                description: "The repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                              non_repeatable_timers:
                                type: object
                                properties:
                                  timers:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        fan_speed_mode:
                                          type: string
                                          enum:
                                            - HARD_OFF
                                            - SOFT_OFF
                                            - AUTO
                                            - SLEEP
                                            - BOOST
                                            - TURN_ON
                                            - MANUAL
                                            - MANUAL_LEVEL1
                                            - MANUAL_LEVEL2
                                            - MANUAL_LEVEL3
                                            - MANUAL_LEVEL4
                                            - MANUAL_LEVEL5
                                            - MANUAL_LEVEL6
                                            - MANUAL_LEVEL7
                                            - MANUAL_LEVEL8
                                        timestamp:
                                          type: number
                                      required:
                                        - fan_speed_mode
                                        - timestamp
                                required:
                                  - timers
                                nullable: true
                                description: "The non-repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is as local unix timestamp (so timezone is included), but in minutes, e.g. on 17.05.2021 the time is 27020801. when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                              aiq_displaying_mode:
                                type: boolean
                                nullable: true
                                description: "false - display AiQ Lights in Inactivity Mode only if red (default option)\n\t\t\t\t\t\ntrue - always display AiQ Lights in Inactivity Mode"
                              sensor_type:
                                type: string
                                enum:
                                  - particles
                                  - TVOC
                                  - both
                                nullable: true
                              filter_state:
                                type: string
                                enum:
                                  - OK
                                  - MEDIUM_DIRTY
                                  - DIRTY
                                  - MUST_BE_CHANGED
                                nullable: true
                              is_particle_sensor_faulty:
                                type: boolean
                                nullable: true
                              is_temp_sensor_faulty:
                                type: boolean
                                nullable: true
                              is_tvoc_sensor_faulty:
                                type: boolean
                                nullable: true
                              timezone:
                                type: string
                                nullable: true
                              display_brightness:
                                type: number
                                nullable: true
                              particles_trigger_values_threshold:
                                type: object
                                properties:
                                  particles_trigger_values_threshold_for_level1:
                                    type: number
                                  particles_trigger_values_threshold_for_level2:
                                    type: number
                                  particles_trigger_values_threshold_for_level3:
                                    type: number
                                  particles_trigger_values_threshold_for_level4:
                                    type: number
                                  particles_trigger_values_threshold_for_level5:
                                    type: number
                                  particles_trigger_values_threshold_for_level6:
                                    type: number
                                  particles_trigger_values_threshold_for_level7:
                                    type: number
                                nullable: true
                              tvoc_trigger_values_threshold:
                                type: object
                                properties:
                                  tvoc_trigger_values_threshold_for_level1:
                                    type: number
                                  tvoc_trigger_values_threshold_for_level2:
                                    type: number
                                  tvoc_trigger_values_threshold_for_level3:
                                    type: number
                                  tvoc_trigger_values_threshold_for_level4:
                                    type: number
                                  tvoc_trigger_values_threshold_for_level5:
                                    type: number
                                  tvoc_trigger_values_threshold_for_level6:
                                    type: number
                                  tvoc_trigger_values_threshold_for_level7:
                                    type: number
                                nullable: true
                              auto_mode_fan_rpm:
                                type: object
                                properties:
                                  auto_mode_fan_rpm_level1:
                                    type: number
                                  auto_mode_fan_rpm_level2:
                                    type: number
                                  auto_mode_fan_rpm_level3:
                                    type: number
                                  auto_mode_fan_rpm_level4:
                                    type: number
                                  auto_mode_fan_rpm_level5:
                                    type: number
                                  auto_mode_fan_rpm_level6:
                                    type: number
                                  auto_mode_fan_rpm_level7:
                                    type: number
                                  auto_mode_fan_rpm_level8:
                                    type: number
                                nullable: true
                              manual_sleep_boost_fan_rpm:
                                type: object
                                properties:
                                  manual_mode_fan_rpm_level1:
                                    type: number
                                  manual_mode_fan_rpm_level2:
                                    type: number
                                  manual_mode_fan_rpm_level3:
                                    type: number
                                  manual_mode_fan_rpm_level4:
                                    type: number
                                  manual_mode_fan_rpm_level5:
                                    type: number
                                  manual_mode_fan_rpm_level6:
                                    type: number
                                  manual_mode_fan_rpm_level7:
                                    type: number
                                  manual_mode_fan_rpm_level8:
                                    type: number
                                  boost_mode_fan_rpm:
                                    type: number
                                  sleep_mode_fan_rpm:
                                    type: number
                                nullable: true
                              auto_mode_fan_levels_states:
                                type: object
                                properties:
                                  auto_mode_fan_state_level1:
                                    type: boolean
                                  auto_mode_fan_state_level2:
                                    type: boolean
                                  auto_mode_fan_state_level3:
                                    type: boolean
                                  auto_mode_fan_state_level4:
                                    type: boolean
                                  auto_mode_fan_state_level5:
                                    type: boolean
                                  auto_mode_fan_state_level6:
                                    type: boolean
                                  auto_mode_fan_state_level7:
                                    type: boolean
                                  auto_mode_fan_state_level8:
                                    type: boolean
                                nullable: true
                            required:
                              - lock_status
                              - fan_speed_mode
                              - repeatable_timers
                              - non_repeatable_timers
                              - aiq_displaying_mode
                              - filter_state
                              - is_particle_sensor_faulty
                              - is_temp_sensor_faulty
                              - is_tvoc_sensor_faulty
                              - timezone
                              - display_brightness
                              - particles_trigger_values_threshold
                              - auto_mode_fan_rpm
                              - manual_sleep_boost_fan_rpm
                              - auto_mode_fan_levels_states
                            nullable: true
                          delta:
                            type: object
                            properties:
                              lock_status:
                                type: string
                                enum:
                                  - no_lock
                                  - child
                                nullable: true
                              fan_speed_mode:
                                type: string
                                enum:
                                  - HARD_OFF
                                  - SOFT_OFF
                                  - AUTO
                                  - SLEEP
                                  - BOOST
                                  - TURN_ON
                                  - MANUAL
                                  - MANUAL_LEVEL1
                                  - MANUAL_LEVEL2
                                  - MANUAL_LEVEL3
                                  - MANUAL_LEVEL4
                                  - MANUAL_LEVEL5
                                  - MANUAL_LEVEL6
                                  - MANUAL_LEVEL7
                                  - MANUAL_LEVEL8
                                nullable: true
                                description: "\n\t\t\t\nHARD_OFF - disable fan, stop to gather data from sensors, disconnect from wifi, can be disabled only via \ndisplay\n\t\t\t\nSOFT_OFF - disable fan but device is still connected to the wifi and gather data from sensors\n\t\t\t\nAUTO - device automatically determine current fan speed level based on the measurements from sensors\n\t\t\t\nSLEEP - lower display brightness, low fan speed\n\t\t\t\nBOOST - maximum available fan speed\n\t\t\t\nTURN_ON - disable Soft/Hard OFF and enable mode which was before OFF\n\t\t\t\nMANUAL - switch to manual mode with level as for Auto Mode\n\t\t\t\nMANUAL_LEVEL1\n\t\t\t\nMANUAL_LEVEL2\n\t\t\t\nMANUAL_LEVEL3\n\t\t\t\nMANUAL_LEVEL4\n\t\t\t\nMANUAL_LEVEL5\n\t\t\t\nMANUAL_LEVEL6\n\t\t\t\nMANUAL_LEVEL7\n\t\t\t\nMANUAL_LEVEL8 (only for AP Large)"
                              repeatable_timers:
                                type: object
                                properties:
                                  timers:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        fan_speed_mode:
                                          type: string
                                          enum:
                                            - HARD_OFF
                                            - SOFT_OFF
                                            - AUTO
                                            - SLEEP
                                            - BOOST
                                            - TURN_ON
                                            - MANUAL
                                            - MANUAL_LEVEL1
                                            - MANUAL_LEVEL2
                                            - MANUAL_LEVEL3
                                            - MANUAL_LEVEL4
                                            - MANUAL_LEVEL5
                                            - MANUAL_LEVEL6
                                            - MANUAL_LEVEL7
                                            - MANUAL_LEVEL8
                                        timestamp:
                                          type: number
                                      required:
                                        - fan_speed_mode
                                        - timestamp
                                required:
                                  - timers
                                nullable: true
                                description: "The repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                              non_repeatable_timers:
                                type: object
                                properties:
                                  timers:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        fan_speed_mode:
                                          type: string
                                          enum:
                                            - HARD_OFF
                                            - SOFT_OFF
                                            - AUTO
                                            - SLEEP
                                            - BOOST
                                            - TURN_ON
                                            - MANUAL
                                            - MANUAL_LEVEL1
                                            - MANUAL_LEVEL2
                                            - MANUAL_LEVEL3
                                            - MANUAL_LEVEL4
                                            - MANUAL_LEVEL5
                                            - MANUAL_LEVEL6
                                            - MANUAL_LEVEL7
                                            - MANUAL_LEVEL8
                                        timestamp:
                                          type: number
                                      required:
                                        - fan_speed_mode
                                        - timestamp
                                required:
                                  - timers
                                nullable: true
                                description: "The non-repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is as local unix timestamp (so timezone is included), but in minutes, e.g. on 17.05.2021 the time is 27020801. when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                              aiq_displaying_mode:
                                type: boolean
                                nullable: true
                                description: "false - display AiQ Lights in Inactivity Mode only if red (default option)\n\t\t\t\t\t\ntrue - always display AiQ Lights in Inactivity Mode"
                              sensor_type:
                                type: string
                                enum:
                                  - particles
                                  - TVOC
                                  - both
                                nullable: true
                              filter_state:
                                type: string
                                enum:
                                  - OK
                                  - MEDIUM_DIRTY
                                  - DIRTY
                                  - MUST_BE_CHANGED
                                nullable: true
                              is_particle_sensor_faulty:
                                type: boolean
                                nullable: true
                              is_temp_sensor_faulty:
                                type: boolean
                                nullable: true
                              is_tvoc_sensor_faulty:
                                type: boolean
                                nullable: true
                              timezone:
                                type: string
                                nullable: true
                              display_brightness:
                                type: number
                                nullable: true
                              particles_trigger_values_threshold:
                                type: object
                                properties:
                                  particles_trigger_values_threshold_for_level1:
                                    type: number
                                  particles_trigger_values_threshold_for_level2:
                                    type: number
                                  particles_trigger_values_threshold_for_level3:
                                    type: number
                                  particles_trigger_values_threshold_for_level4:
                                    type: number
                                  particles_trigger_values_threshold_for_level5:
                                    type: number
                                  particles_trigger_values_threshold_for_level6:
                                    type: number
                                  particles_trigger_values_threshold_for_level7:
                                    type: number
                                nullable: true
                              tvoc_trigger_values_threshold:
                                type: object
                                properties:
                                  tvoc_trigger_values_threshold_for_level1:
                                    type: number
                                  tvoc_trigger_values_threshold_for_level2:
                                    type: number
                                  tvoc_trigger_values_threshold_for_level3:
                                    type: number
                                  tvoc_trigger_values_threshold_for_level4:
                                    type: number
                                  tvoc_trigger_values_threshold_for_level5:
                                    type: number
                                  tvoc_trigger_values_threshold_for_level6:
                                    type: number
                                  tvoc_trigger_values_threshold_for_level7:
                                    type: number
                                nullable: true
                              auto_mode_fan_rpm:
                                type: object
                                properties:
                                  auto_mode_fan_rpm_level1:
                                    type: number
                                  auto_mode_fan_rpm_level2:
                                    type: number
                                  auto_mode_fan_rpm_level3:
                                    type: number
                                  auto_mode_fan_rpm_level4:
                                    type: number
                                  auto_mode_fan_rpm_level5:
                                    type: number
                                  auto_mode_fan_rpm_level6:
                                    type: number
                                  auto_mode_fan_rpm_level7:
                                    type: number
                                  auto_mode_fan_rpm_level8:
                                    type: number
                                nullable: true
                              manual_sleep_boost_fan_rpm:
                                type: object
                                properties:
                                  manual_mode_fan_rpm_level1:
                                    type: number
                                  manual_mode_fan_rpm_level2:
                                    type: number
                                  manual_mode_fan_rpm_level3:
                                    type: number
                                  manual_mode_fan_rpm_level4:
                                    type: number
                                  manual_mode_fan_rpm_level5:
                                    type: number
                                  manual_mode_fan_rpm_level6:
                                    type: number
                                  manual_mode_fan_rpm_level7:
                                    type: number
                                  manual_mode_fan_rpm_level8:
                                    type: number
                                  boost_mode_fan_rpm:
                                    type: number
                                  sleep_mode_fan_rpm:
                                    type: number
                                nullable: true
                              auto_mode_fan_levels_states:
                                type: object
                                properties:
                                  auto_mode_fan_state_level1:
                                    type: boolean
                                  auto_mode_fan_state_level2:
                                    type: boolean
                                  auto_mode_fan_state_level3:
                                    type: boolean
                                  auto_mode_fan_state_level4:
                                    type: boolean
                                  auto_mode_fan_state_level5:
                                    type: boolean
                                  auto_mode_fan_state_level6:
                                    type: boolean
                                  auto_mode_fan_state_level7:
                                    type: boolean
                                  auto_mode_fan_state_level8:
                                    type: boolean
                                nullable: true
                            nullable: true
                        required:
                          - reported
                          - desired
                          - delta
                        description: Air Purifier AWS IoT Thing shadow object
                      - type: object
                        properties:
                          reported:
                            type: object
                            properties:
                              ens210_ranges:
                                type: object
                                properties:
                                  temperature_green:
                                    type: number
                                  temperature_red:
                                    type: number
                                  humidity_yellow_low:
                                    type: number
                                  humidity_yellow_high:
                                    type: number
                                  humidity_red_low:
                                    type: number
                                  humidity_red_high:
                                    type: number
                                required:
                                  - temperature_green
                                  - temperature_red
                                  - humidity_yellow_low
                                  - humidity_yellow_high
                                  - humidity_red_low
                                  - humidity_red_high
                                nullable: true
                              ccs811_ranges:
                                type: object
                                properties:
                                  eco2_red:
                                    type: number
                                  eco2_yellow:
                                    type: number
                                  tvoc_red:
                                    type: number
                                  tvoc_yellow:
                                    type: number
                                required:
                                  - eco2_red
                                  - eco2_yellow
                                  - tvoc_red
                                  - tvoc_yellow
                                nullable: true
                              sampling_period:
                                type: number
                                nullable: true
                              timezone:
                                type: string
                                nullable: true
                            required:
                              - ens210_ranges
                              - ccs811_ranges
                              - sampling_period
                              - timezone
                            nullable: true
                          desired:
                            type: object
                            properties:
                              ens210_ranges:
                                type: object
                                properties:
                                  temperature_green:
                                    type: number
                                  temperature_red:
                                    type: number
                                  humidity_yellow_low:
                                    type: number
                                  humidity_yellow_high:
                                    type: number
                                  humidity_red_low:
                                    type: number
                                  humidity_red_high:
                                    type: number
                                required:
                                  - temperature_green
                                  - temperature_red
                                  - humidity_yellow_low
                                  - humidity_yellow_high
                                  - humidity_red_low
                                  - humidity_red_high
                                nullable: true
                              ccs811_ranges:
                                type: object
                                properties:
                                  eco2_red:
                                    type: number
                                  eco2_yellow:
                                    type: number
                                  tvoc_red:
                                    type: number
                                  tvoc_yellow:
                                    type: number
                                required:
                                  - eco2_red
                                  - eco2_yellow
                                  - tvoc_red
                                  - tvoc_yellow
                                nullable: true
                              sampling_period:
                                type: number
                                nullable: true
                              timezone:
                                type: string
                                nullable: true
                            required:
                              - ens210_ranges
                              - ccs811_ranges
                              - sampling_period
                              - timezone
                            nullable: true
                          delta:
                            type: object
                            properties:
                              ens210_ranges:
                                type: object
                                properties:
                                  temperature_green:
                                    type: number
                                  temperature_red:
                                    type: number
                                  humidity_yellow_low:
                                    type: number
                                  humidity_yellow_high:
                                    type: number
                                  humidity_red_low:
                                    type: number
                                  humidity_red_high:
                                    type: number
                                nullable: true
                              ccs811_ranges:
                                type: object
                                properties:
                                  eco2_red:
                                    type: number
                                  eco2_yellow:
                                    type: number
                                  tvoc_red:
                                    type: number
                                  tvoc_yellow:
                                    type: number
                                nullable: true
                              sampling_period:
                                type: number
                                nullable: true
                              timezone:
                                type: string
                                nullable: true
                            nullable: true
                        required:
                          - reported
                          - desired
                          - delta
                        description: Air Sensor AWS IoT Thing shadow object
                    nullable: true
                  lastMetrics:
                    oneOf:
                      - type: object
                        properties:
                          deviceId:
                            type: string
                          time:
                            type: number
                            minimum: 0
                            maximum: 9999999999
                            description: Date in seconds since epoch (UTC time)
                            example: 1579098983
                          temperature:
                            type: number
                            description: >-
                              What is the current target temperature for the
                              heater regulator. Temperature in Celsius degrees
                          humidity:
                            type: number
                            description: "SOCKET: Measured humidity - Relative humidity percentage multiplied by 100.\n\t\t\t\t\t\t\nValid ONLY FOR SOCKET HEATER. So for the panel heater, this field will be dummy bytes.\n\t\t\t\t\t\t\nCONVECTOR: Tilt sensor state. 1 = convector fallen and not heating"
                          temperatureAmbient:
                            type: number
                            description: >-
                              Actual temperature after applying the calibration
                              offset. If the temperature sensor is faulty, this
                              field will be equal -100 C. Temperature in Celsius
                              degrees
                          currentPower:
                            type: number
                            description: >-
                              Power measured with the dedicated IC chip. In
                              Watts. Due to the chip behavior, this value is
                              filtered for a few seconds. To determine if the
                              heater is heating RIGHT NOW use the control_signal
                              field or heater_flag
                          controlSignal:
                            type: number
                            description: >-
                              Current value of control signal - so the
                              percentage of the maximum heater power. Value from
                              0 to 100. It is the value applied by the heater
                              right now
                          currentOperationMode:
                            type: number
                            description: "0 - \"Off\"\n\t\t\t\t\t\t\n1 - \"Weekly program\"\n\t\t\t\t\t\t\n2 - \"Independent device\" (uses timers)\n\t\t\t\t\t\t\n3 - \"Control Individually\" (follows the single set temperature)"
                          energyUsage:
                            type: number
                            description: 'Energy used since the heater startup. In Wh. '
                          timeSinceHeaterStartup:
                            type: number
                            description: >-
                              Time in seconds since heater startup. Knowing this
                              information and energy_usage the cloud can
                              calculate the energy usage in any time range (e.g.
                              during last 24 hours)
                          openWindowsStatus:
                            type: number
                            description: "Whether the open window functionality is enabled (can be activated by opening a window) and active now (was triggered and the heater is not heating).\n\t\t\t\t 0 - disabled, not active now 3 - enabled, not active now 2 - enabled and active now!"
                          currentTemperatureTypeInWeeklyProgram:
                            type: number
                            description: "Current temperature type: 0=normal, 1=comfort, 2=sleep, 3=away, 4=vacation, 5=off\n\t\t\tTemperature type followed currently (only if weekly program is active).\n\t\t\tIf the heater is in other mode than \"Weekly program\" this field will contains value \"-1\".\n\t\t\tIf the NTP time is not synchronized this field will contain value \"-2\" (because when NTP time is not synchronized, current weekly program status cannot be determined"
                          heaterFlag:
                            type: number
                            description: 'Heating/Cooling status: 0=off, 1=on'
                          powerStatus:
                            type: number
                            description: >-
                              If the device is on (not in operation mode off or
                              temperature is not set to 0): 0=off, 1=on
                        required:
                          - deviceId
                          - time
                          - temperature
                          - humidity
                          - temperatureAmbient
                          - currentPower
                          - controlSignal
                          - currentOperationMode
                          - energyUsage
                          - timeSinceHeaterStartup
                          - openWindowsStatus
                          - currentTemperatureTypeInWeeklyProgram
                          - heaterFlag
                          - powerStatus
                        description: Heater last metrics. If null, no metrics were found
                      - type: object
                        properties:
                          deviceId:
                            type: string
                            description: AWS IoT Thing Name (UUID)
                          time:
                            type: number
                            minimum: 0
                            maximum: 9999999999
                            description: Date in seconds since epoch (UTC time)
                            example: 1579098983
                          setFanLevelInAuto:
                            type: number
                            description: >-
                              Current fan speed level, relevant only when
                              operation_mode=auto. Level1=0, Level8=7
                          controlSignal:
                            type: number
                            description: >-
                              Current value of control signal applied to the
                              device motor. So it is the percentage of maximum
                              motor input signal.
                          massPm_10:
                            type: number
                            description: >-
                              Mass of particles with diameter < 1 micrometers in
                              volume of one cubic meter [µg/m3] in range
                              <0,1000>
                          particles10Level:
                            type: number
                            description: >-
                              Warning level of mass of particles with diameter <
                              1 micrometers
                          massPm_25:
                            type: number
                            description: >-
                              Mass of particles with diameter < 2.5 micrometers
                              in volume of one cubic meter [µg/m3] in range
                              <0,1000>
                          particles25Level:
                            type: number
                            description: >-
                              Warning level of mass of particles with diameter <
                              2.5 micrometers
                          massPm_100:
                            type: number
                            description: >-
                              Mass of particles with diameter < 10.0 micrometers
                              in volume of one cubic meter [µg/m3] in range
                              <0,1000>
                          particles100Level:
                            type: number
                            description: >-
                              Warning level of mass of particles with diameter <
                              10 micrometers
                          numberPm_05:
                            type: number
                            description: >-
                              Total number of particles wit diameter < 0.5
                              micrometers in cubic centimeter [#/cm3] in range
                              <0,3000>
                          numberPm_10:
                            type: number
                            description: >-
                              Total number of particles wit diameter < 1
                              micrometers in cubic centimeter [#/cm3] in range
                              <0,3000>
                          numberPm_25:
                            type: number
                            description: >-
                              Total number of particles wit diameter < 2.5
                              micrometers in cubic centimeter [#/cm3] in range
                              <0,3000>
                          numberPm_50:
                            type: number
                            description: >-
                              Total number of particles wit diameter < 5
                              micrometers in cubic centimeter [#/cm3] in range
                              <0,3000>
                          numberPm_100:
                            type: number
                            description: >-
                              Total number of particles wit diameter < 10
                              micrometers in cubic centimeter [#/cm3] in range
                              <0,3000>
                          temperature:
                            type: number
                            description: Temperature in Celsius degrees
                          temperatureLevel:
                            type: number
                            description: Warning level of temperature
                          humidity:
                            type: number
                            description: Relative humidity in percents %, multiplied by 100
                          humidityLevel:
                            type: number
                            description: Warning level of humidity
                          runtimeLevelSleepMs:
                            type: number
                            description: >-
                              Number of milliseconds, during which the device
                              works in sleep mode
                          runtimeLevelBoostMs:
                            type: number
                            description: >-
                              Number of milliseconds, during which the device
                              works in boost mode
                          runtimeLevelLevel1Ms:
                            type: number
                            description: >-
                              Number of milliseconds, during which the device
                              using Level1 fan speed (in auto and manual)
                          runtimeLevelLevel2Ms:
                            type: number
                            description: >-
                              Number of milliseconds, during which the device
                              using Level2 fan speed (in auto and manual)
                          runtimeLevelLevel3Ms:
                            type: number
                            description: >-
                              Number of milliseconds, during which the device
                              using Level3 fan speed (in auto and manual)
                          runtimeLevelLevel4Ms:
                            type: number
                            description: >-
                              Number of milliseconds, during which the device
                              using Level4 fan speed (in auto and manual)
                          runtimeLevelLevel5Ms:
                            type: number
                            description: >-
                              Number of milliseconds, during which the device
                              using Level5 fan speed (in auto and manual)
                          runtimeLevelLevel6Ms:
                            type: number
                            description: >-
                              Number of milliseconds, during which the device
                              using Level6 fan speed (in auto and manual)
                          runtimeLevelLevel7Ms:
                            type: number
                            description: >-
                              Number of milliseconds, during which the device
                              using Level7 fan speed (in auto and manual)
                          runtimeLevelLevel8Ms:
                            type: number
                            description: >-
                              Number of milliseconds, during which the device
                              using Level8 fan speed (in auto and manual)
                          airQualityIndex:
                            type: number
                            description: >-
                              Air Quality Index calculated from TVOC and eCO2
                              measurements by sensor, in range <1,5>
                          eco2:
                            type: number
                            description: >-
                              Equivalent CO2 in range <400-65000> [parts per
                              million CO2 equiv.]
                          eco2Level:
                            type: number
                            description: Warning level of CO2
                          tvoc:
                            type: number
                            description: >-
                              Total Volatile Organic Compounds in range
                              <0-65000> [part per billion]
                          tvocLevel:
                            type: number
                            description: Warning level of Total Volatile Organic Compounds
                        required:
                          - deviceId
                          - time
                          - setFanLevelInAuto
                          - controlSignal
                          - massPm_10
                          - particles10Level
                          - massPm_25
                          - particles25Level
                          - massPm_100
                          - particles100Level
                          - numberPm_05
                          - numberPm_10
                          - numberPm_25
                          - numberPm_50
                          - numberPm_100
                          - temperature
                          - temperatureLevel
                          - humidity
                          - humidityLevel
                          - runtimeLevelSleepMs
                          - runtimeLevelBoostMs
                          - runtimeLevelLevel1Ms
                          - runtimeLevelLevel2Ms
                          - runtimeLevelLevel3Ms
                          - runtimeLevelLevel4Ms
                          - runtimeLevelLevel5Ms
                          - runtimeLevelLevel6Ms
                          - runtimeLevelLevel7Ms
                          - runtimeLevelLevel8Ms
                          - airQualityIndex
                          - eco2
                          - eco2Level
                          - tvoc
                          - tvocLevel
                        description: >-
                          Air purifier last metrics. If null, no metrics were
                          found
                      - type: object
                        properties:
                          deviceId:
                            type: string
                          time:
                            type: number
                            minimum: 0
                            maximum: 9999999999
                            description: Date in seconds since epoch (UTC time)
                            example: 1579098983
                          temperature:
                            type: number
                            description: Temperature in Celsius degrees
                          humidity:
                            type: number
                            description: 2 - bytes [ unsigned integer ] [ 100 x 1%]
                          eco2:
                            type: number
                            description: >-
                              2 - bytes [ unsigned integer ] [ parts per million
                              ]
                          tvoc:
                            type: number
                            description: >-
                              2 - bytes [ unsigned integer ] [ parts per million
                              ]
                          batteryPercentage:
                            type: number
                            description: 2 - bytes [ unsigned integer ] [ 10 x 1% ]
                          batteryVoltage:
                            type: number
                            description: 2 - bytes [ unsigned integer ] [ millivolts ]
                          chargingStatus:
                            type: number
                            description: >-
                              0 - not charging ; 1 - charging with LED turn Off;
                              2 - charging with LED turn On ( updated 2 - 30 s
                              after change )
                          tvocSensorCalibrated:
                            type: boolean
                            description: false - not calibrated, true - calibrated
                          tvocSensorCountdownRemainingTime:
                            type: number
                            description: >-
                              Seconds to finish calibration, if sensor
                              calibrated then equal to 0
                          tvocSensorCountdownRemainingTimeTo:
                            type: number
                            description: >-
                              Seconds to finish calibration, if sensor
                              calibrated then equal to 0
                          tvocSensorCountdownTotalTime:
                            type: number
                            description: >-
                              Total time needed to perform tvoc sensor
                              calibration
                          ens210SensorCalibrated:
                            type: boolean
                            description: false - not calibrated, true - calibrated
                          ens210SensorCountdownRemainingTime:
                            type: number
                            description: >-
                              Seconds to finish calibration, if sensor
                              calibrated then equal to 0
                          ens210SensorCountdownRemainingTimeTo:
                            type: number
                            description: Seconds to finish calibration
                          ens210SensorCountdownTotalTime:
                            type: number
                            description: >-
                              Total time needed to perform ens210 sensor
                              calibration
                        required:
                          - deviceId
                          - time
                          - temperature
                          - humidity
                          - eco2
                          - tvoc
                          - batteryPercentage
                          - batteryVoltage
                          - chargingStatus
                          - tvocSensorCalibrated
                          - tvocSensorCountdownRemainingTime
                          - tvocSensorCountdownRemainingTimeTo
                          - tvocSensorCountdownTotalTime
                          - ens210SensorCalibrated
                          - ens210SensorCountdownRemainingTime
                          - ens210SensorCountdownRemainingTimeTo
                          - ens210SensorCountdownTotalTime
                        description: >-
                          Air sensor last metrics. If null, no metrics were
                          found
                    nullable: true
                    description: >-
                      Last metrics sent by device. Type of object matches to
                      device type. If null, no metrics were found
                  energyUsageForCurrentDay:
                    type: number
                    description: Energy usage for current calendar day. Measured in Wh
                  sensorRooms:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Room ID
                          example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
                        name:
                          type: string
                          description: Room name
                          example: Living room
                        houseId:
                          type: string
                          description: ID of house the room is attached to
                          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                        roomComfortTemperature:
                          type: number
                          nullable: true
                          description: Room temperature in comfort mode
                          example: 23
                        roomSleepTemperature:
                          type: number
                          nullable: true
                          description: Room temperature in sleep mode
                          example: 27
                        roomAwayTemperature:
                          type: number
                          nullable: true
                          description: Room temperature in away mode
                          example: 27
                        overrideModeType:
                          type: string
                          enum:
                            - continuous
                            - not_continuous
                          nullable: true
                          description: >-
                            Override mode type. If not continuous,
                            overrideEndDate is required
                        overrideEndDate:
                          type: number
                          minimum: 0
                          maximum: 9999999999
                          description: Date in seconds since epoch (UTC time)
                          example: 1579098983
                          nullable: true
                        roomProgramId:
                          type: string
                          description: ID of room program attached to the room
                          nullable: true
                          example: b6730c1e-c775-43ba-8fa0-e6d07c39e21c
                        roomControlSource:
                          type: string
                          enum:
                            - mobile_api
                            - open_api
                            - tibber
                          nullable: true
                          description: >-
                            The desired control source of every device in this
                            room
                        mode:
                          type: string
                          enum:
                            - weekly_program
                            - comfort
                            - sleep
                            - away
                            - vacation
                            - normal
                            - always_heating
                            - 'off'
                          nullable: true
                          description: Room mode
                        createdAt:
                          type: string
                          format: date-time
                          nullable: true
                          description: Room creation date
                      required:
                        - id
                        - name
                        - houseId
                        - roomComfortTemperature
                        - roomSleepTemperature
                        - roomAwayTemperature
                        - overrideModeType
                        - overrideEndDate
                        - roomProgramId
                        - roomControlSource
                        - mode
                        - createdAt
                    description: >-
                      If device type is sensor, shows which rooms this device is
                      assigned to
                  houseName:
                    type: string
                    description: House name
                    example: Home
                  permissions:
                    type: object
                    properties:
                      maxTemperature:
                        type: number
                        nullable: true
                        description: >-
                          The maximum number of degrees Celsius that the
                          customer can set. Null value means there is no limit
                        example: 30
                      changeTemperature:
                        type: boolean
                        description: 'Permission: Can customer change the temperature?'
                        example: true
                    required:
                      - maxTemperature
                      - changeTemperature
                  nearestTimer:
                    type: object
                    properties:
                      time:
                        type: number
                        description: Minutes until next timer activates
                      setting:
                        type: string
                        description: Setting to activate
                    required:
                      - time
                      - setting
                    description: Nearest timer to activate
                  airPurifierDefaultSettings:
                    type: object
                    properties:
                      lock_status:
                        type: string
                        enum:
                          - no_lock
                          - child
                        nullable: true
                      fan_speed_mode:
                        type: string
                        enum:
                          - HARD_OFF
                          - SOFT_OFF
                          - AUTO
                          - SLEEP
                          - BOOST
                          - TURN_ON
                          - MANUAL
                          - MANUAL_LEVEL1
                          - MANUAL_LEVEL2
                          - MANUAL_LEVEL3
                          - MANUAL_LEVEL4
                          - MANUAL_LEVEL5
                          - MANUAL_LEVEL6
                          - MANUAL_LEVEL7
                          - MANUAL_LEVEL8
                        nullable: true
                        description: "\n\t\t\t\nHARD_OFF - disable fan, stop to gather data from sensors, disconnect from wifi, can be disabled only via \ndisplay\n\t\t\t\nSOFT_OFF - disable fan but device is still connected to the wifi and gather data from sensors\n\t\t\t\nAUTO - device automatically determine current fan speed level based on the measurements from sensors\n\t\t\t\nSLEEP - lower display brightness, low fan speed\n\t\t\t\nBOOST - maximum available fan speed\n\t\t\t\nTURN_ON - disable Soft/Hard OFF and enable mode which was before OFF\n\t\t\t\nMANUAL - switch to manual mode with level as for Auto Mode\n\t\t\t\nMANUAL_LEVEL1\n\t\t\t\nMANUAL_LEVEL2\n\t\t\t\nMANUAL_LEVEL3\n\t\t\t\nMANUAL_LEVEL4\n\t\t\t\nMANUAL_LEVEL5\n\t\t\t\nMANUAL_LEVEL6\n\t\t\t\nMANUAL_LEVEL7\n\t\t\t\nMANUAL_LEVEL8 (only for AP Large)"
                      repeatable_timers:
                        type: object
                        properties:
                          timers:
                            type: array
                            items:
                              type: object
                              properties:
                                fan_speed_mode:
                                  type: string
                                  enum:
                                    - HARD_OFF
                                    - SOFT_OFF
                                    - AUTO
                                    - SLEEP
                                    - BOOST
                                    - TURN_ON
                                    - MANUAL
                                    - MANUAL_LEVEL1
                                    - MANUAL_LEVEL2
                                    - MANUAL_LEVEL3
                                    - MANUAL_LEVEL4
                                    - MANUAL_LEVEL5
                                    - MANUAL_LEVEL6
                                    - MANUAL_LEVEL7
                                    - MANUAL_LEVEL8
                                timestamp:
                                  type: number
                              required:
                                - fan_speed_mode
                                - timestamp
                        required:
                          - timers
                        nullable: true
                        description: "The repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                      non_repeatable_timers:
                        type: object
                        properties:
                          timers:
                            type: array
                            items:
                              type: object
                              properties:
                                fan_speed_mode:
                                  type: string
                                  enum:
                                    - HARD_OFF
                                    - SOFT_OFF
                                    - AUTO
                                    - SLEEP
                                    - BOOST
                                    - TURN_ON
                                    - MANUAL
                                    - MANUAL_LEVEL1
                                    - MANUAL_LEVEL2
                                    - MANUAL_LEVEL3
                                    - MANUAL_LEVEL4
                                    - MANUAL_LEVEL5
                                    - MANUAL_LEVEL6
                                    - MANUAL_LEVEL7
                                    - MANUAL_LEVEL8
                                timestamp:
                                  type: number
                              required:
                                - fan_speed_mode
                                - timestamp
                        required:
                          - timers
                        nullable: true
                        description: "The non-repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is as local unix timestamp (so timezone is included), but in minutes, e.g. on 17.05.2021 the time is 27020801. when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                      aiq_displaying_mode:
                        type: boolean
                        nullable: true
                        description: "false - display AiQ Lights in Inactivity Mode only if red (default option)\n\t\t\t\t\t\ntrue - always display AiQ Lights in Inactivity Mode"
                      sensor_type:
                        type: string
                        enum:
                          - particles
                          - TVOC
                          - both
                        nullable: true
                      filter_state:
                        type: string
                        enum:
                          - OK
                          - MEDIUM_DIRTY
                          - DIRTY
                          - MUST_BE_CHANGED
                        nullable: true
                      is_particle_sensor_faulty:
                        type: boolean
                        nullable: true
                      is_temp_sensor_faulty:
                        type: boolean
                        nullable: true
                      is_tvoc_sensor_faulty:
                        type: boolean
                        nullable: true
                      timezone:
                        type: string
                        nullable: true
                      display_brightness:
                        type: number
                        nullable: true
                      particles_trigger_values_threshold:
                        type: object
                        properties:
                          particles_trigger_values_threshold_for_level1:
                            type: number
                          particles_trigger_values_threshold_for_level2:
                            type: number
                          particles_trigger_values_threshold_for_level3:
                            type: number
                          particles_trigger_values_threshold_for_level4:
                            type: number
                          particles_trigger_values_threshold_for_level5:
                            type: number
                          particles_trigger_values_threshold_for_level6:
                            type: number
                          particles_trigger_values_threshold_for_level7:
                            type: number
                        nullable: true
                      tvoc_trigger_values_threshold:
                        type: object
                        properties:
                          tvoc_trigger_values_threshold_for_level1:
                            type: number
                          tvoc_trigger_values_threshold_for_level2:
                            type: number
                          tvoc_trigger_values_threshold_for_level3:
                            type: number
                          tvoc_trigger_values_threshold_for_level4:
                            type: number
                          tvoc_trigger_values_threshold_for_level5:
                            type: number
                          tvoc_trigger_values_threshold_for_level6:
                            type: number
                          tvoc_trigger_values_threshold_for_level7:
                            type: number
                        nullable: true
                      auto_mode_fan_rpm:
                        type: object
                        properties:
                          auto_mode_fan_rpm_level1:
                            type: number
                          auto_mode_fan_rpm_level2:
                            type: number
                          auto_mode_fan_rpm_level3:
                            type: number
                          auto_mode_fan_rpm_level4:
                            type: number
                          auto_mode_fan_rpm_level5:
                            type: number
                          auto_mode_fan_rpm_level6:
                            type: number
                          auto_mode_fan_rpm_level7:
                            type: number
                          auto_mode_fan_rpm_level8:
                            type: number
                        nullable: true
                      manual_sleep_boost_fan_rpm:
                        type: object
                        properties:
                          manual_mode_fan_rpm_level1:
                            type: number
                          manual_mode_fan_rpm_level2:
                            type: number
                          manual_mode_fan_rpm_level3:
                            type: number
                          manual_mode_fan_rpm_level4:
                            type: number
                          manual_mode_fan_rpm_level5:
                            type: number
                          manual_mode_fan_rpm_level6:
                            type: number
                          manual_mode_fan_rpm_level7:
                            type: number
                          manual_mode_fan_rpm_level8:
                            type: number
                          boost_mode_fan_rpm:
                            type: number
                          sleep_mode_fan_rpm:
                            type: number
                        nullable: true
                      auto_mode_fan_levels_states:
                        type: object
                        properties:
                          auto_mode_fan_state_level1:
                            type: boolean
                          auto_mode_fan_state_level2:
                            type: boolean
                          auto_mode_fan_state_level3:
                            type: boolean
                          auto_mode_fan_state_level4:
                            type: boolean
                          auto_mode_fan_state_level5:
                            type: boolean
                          auto_mode_fan_state_level6:
                            type: boolean
                          auto_mode_fan_state_level7:
                            type: boolean
                          auto_mode_fan_state_level8:
                            type: boolean
                        nullable: true
                    nullable: true
                  airSensorAdditionalItems:
                    type: object
                    properties:
                      tempColor:
                        type: number
                        description: Temperature color, 1=red, 2=yellow, 3=green, 4=blue
                      humidityColor:
                        type: number
                        description: Humidity color, 1=red, 2=yellow, 3=green, 4=blue
                      tvocColor:
                        type: number
                        description: TVOC color, 1=red, 2=yellow, 3=green, 4=blue
                      eco2Color:
                        type: number
                        description: ECO2 color, 1=red, 2=yellow, 3=green, 4=blue
                      maxTvoc:
                        type: number
                        description: Maximum TVOC for the progress bar
                      changePeriod:
                        type: boolean
                        nullable: true
                        description: Is it possible to change the Period
                    required:
                      - tempColor
                      - humidityColor
                      - tvocColor
                      - eco2Color
                      - maxTvoc
                      - changePeriod
                    description: Air sensor additional items.
                    nullable: true
                  socketTemperatureSensor:
                    type: string
                    enum:
                      - 'on'
                      - 'off'
                    nullable: true
                    description: Sockets temperature sensor status
                required:
                  - deviceId
                  - macAddress
                  - deviceType
                  - isConnected
                  - customName
                  - houseId
                  - roomId
                  - isArchived
                  - isEnabled
                  - controlSource
                  - createdAt
                  - deviceSettings
                  - lastMetrics
                  - energyUsageForCurrentDay
                  - permissions
                  - airPurifierDefaultSettings
                  - airSensorAdditionalItems
                  - socketTemperatureSensor
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: getDeviceData
      summary: Get device data
      description: Returns the last state of device
    parameters:
      - schema:
          type: string
          format: uuid
          description: Device ID
        name: deviceId
        in: path
        required: true
        description: Device ID
  /devices/{deviceId}/rename:
    post:
      tags:
        - device
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  deviceId:
                    type: string
                    format: uuid
                    description: Device ID
                  ableDeviceId:
                    type: string
                    description: Able could device ID
                  macAddress:
                    type: string
                    description: MAC address of the device
                    example: 0000000ec60893a4
                  deviceType:
                    type: string
                    format: uuid
                    description: Id of Device type
                  customName:
                    type: string
                    description: Custom name of the device
                    example: My device
                  houseId:
                    type: string
                    description: House ID where the device is located
                    example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                    nullable: true
                  isArchived:
                    type: boolean
                    description: Whether the device is archived
                  createdAt:
                    type: string
                    format: date-time
                    description: Device creation date
                required:
                  - deviceId
                  - ableDeviceId
                  - macAddress
                  - deviceType
                  - customName
                  - houseId
                  - isArchived
                  - createdAt
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: renameDevice
      summary: Rename device
      description: Changes the custom name of device
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                newName:
                  type: string
                  description: New custom name for chosen device
                  example: My device
              required:
                - newName
    parameters:
      - schema:
          type: string
          description: Able could device ID
        name: ableDeviceId
        in: path
        required: true
        description: Able could device ID
      - schema:
          type: string
          format: uuid
          description: Device ID
        name: deviceId
        in: path
        required: true
        description: Device ID
      - schema:
          type: string
          description: Gree could device ID
        name: greeDeviceId
        in: path
        required: true
        description: Gree could device ID
  /customer/auth/sign-up:
    post:
      tags:
        - customer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  idToken:
                    type: string
                    description: JWT ID token
                    example: >-
                      eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTY1MjQ2MTQ1MiwiZXhwIjoxNjUyNDYyMDUyfQ.PaqG93AJYMp8stHdGh9LCoxU8jrI9So66hzbrPe8UwU
                  refreshToken:
                    type: string
                    description: JWT Refresh token
                    example: >-
                      eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6InJlZnJlc2giLCJpYXQiOjE2NTI0NjE0NTIsImV4cCI6MTY1MjQ2MjA1Mn0.PNzSmBp6nxKigzp-hOiEPpRl9ji3ZIl188SY5A9IJHI
                required:
                  - idToken
                  - refreshToken
        '400':
          description: Verification failed
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomerNotFoundError'
      operationId: signUp
      summary: Sign up
      description: Creates customer and returns JWT tokens
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  oneOf:
                    - type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - email
                        value:
                          type: string
                          format: email
                          description: Customer email
                      required:
                        - type
                        - value
                    - type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - phoneNumber
                        value:
                          type: string
                          description: Customer phone number
                      required:
                        - type
                        - value
                oneTimeCode:
                  type: string
                  description: One-time code that is used to verify customer registration
                password:
                  type: string
                  description: Customer password
              required:
                - login
                - oneTimeCode
                - password
    parameters: []
  /customer/auth/verify-code:
    post:
      tags:
        - customer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                required:
                  - status
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomerIdentityAlreadyInUseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: getVerifyCode
      summary: Send verify code
      description: >-
        Sends one-time code to email or phone number when modifying the password
        or email / sign up
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  oneOf:
                    - type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - email
                        value:
                          type: string
                          format: email
                          description: Customer email
                      required:
                        - type
                        - value
                    - type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - phoneNumber
                        value:
                          type: string
                          description: Customer phone number
                      required:
                        - type
                        - value
              required:
                - login
    parameters: []
  /customer/change-identity:
    post:
      tags:
        - customer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                required:
                  - status
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomerNotFoundError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: changeIdentity
      summary: Change email address or phone
      description: change customer email-address or phone
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  oneOf:
                    - type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - email
                        value:
                          type: string
                          format: email
                          description: Customer email
                      required:
                        - type
                        - value
                    - type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - phoneNumber
                        value:
                          type: string
                          description: Customer phone number
                      required:
                        - type
                        - value
                oneTimeCode:
                  type: string
                  description: One-time code that is used to verify customer registration
              required:
                - login
                - oneTimeCode
    parameters: []
  /customer/delete:
    delete:
      tags:
        - customer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                required:
                  - status
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
      operationId: deleteCustomer
      summary: Delete customer
      description: Delete customer data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                keepMetrics:
                  type: boolean
              required:
                - keepMetrics
    parameters: []
  /customer/check-setting:
    get:
      tags:
        - customer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  postalCode:
                    type: string
                    description: Postal code
                    example: '49101'
                  country:
                    type: string
                    description: Country where the customer is from
                    example: CA
                  phoneNumber:
                    type: string
                    description: Phone number with country code
                    example: '+15433848374'
                  needEdit:
                    type: boolean
                    description: prompt the customer to modify the information
                  houseList:
                    type: array
                    items:
                      type: object
                      properties:
                        houseId:
                          type: string
                          description: House ID
                          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                        houseName:
                          type: string
                          description: House name
                          example: Home
                        postalCode:
                          type: string
                          description: Postal code
                          example: '49101'
                      required:
                        - houseId
                        - houseName
                        - postalCode
                required:
                  - postalCode
                  - country
                  - phoneNumber
                  - needEdit
                  - houseList
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: checkCustomerSetting
      summary: Check customer setting
      description: >-
        Checks if the user information is complete, and if not, pop up to
        supplement in application
    parameters: []
  /customer/check-status:
    post:
      tags:
        - customer
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: checkStatus
      summary: Check customer status
      description: Returns customer's login token, and migration verification
    parameters: []
  /customer/details:
    get:
      tags:
        - customer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Customer ID, UUID
                    example: 27af30e2-69df-4274-8930-93404dcddb41
                  firstName:
                    type: string
                    nullable: true
                    description: First name of customer
                    example: Carl
                  lastName:
                    type: string
                    nullable: true
                    description: Last name of customer
                    example: Johnson
                  phoneNumber:
                    type: string
                    nullable: true
                    description: Phone number with country code
                    example: '+15433848374'
                  phoneNumberInfo:
                    type: string
                    nullable: true
                    description: Additional Phone number with country code
                    example: '+15433848374'
                  email:
                    type: string
                    format: email
                    nullable: true
                    description: Customer email
                    example: carl_johnson1972@gmail.com
                  emailInfo:
                    type: string
                    format: email
                    nullable: true
                    description: Customer additional email
                    example: carl_johnson1972@gmail.com
                  postalCode:
                    type: string
                    nullable: true
                    description: Postal code
                    example: '49101'
                  countryCode:
                    type: string
                    nullable: true
                    description: Code of country where the customer is from
                    example: '47'
                  country:
                    type: string
                    nullable: true
                    description: Country where the customer is from
                    example: CA
                  temperatureUnit:
                    type: string
                    enum:
                      - C
                      - F
                    description: Temperature unit preferred by customer
                  twentyFourHours:
                    type: boolean
                    description: Is 24-hour time mode enabled for customer
                    example: true
                  newsletterSubscription:
                    type: boolean
                    description: Does customer have newsletter subscriptions
                    example: false
                  textMessageSubscription:
                    type: boolean
                    description: Does customer have text message subscription
                    example: false
                  accountType:
                    type: string
                    enum:
                      - individual
                      - business
                    description: Account type
                  companyName:
                    type: string
                    nullable: true
                    description: Company name
                  businessName:
                    type: string
                    nullable: true
                    description: Business name
                  businessEmail:
                    type: string
                    nullable: true
                    description: Business email
                  businessPhoneNumber:
                    type: string
                    nullable: true
                    description: Business phone number
                  apiAccessStatus:
                    type: string
                    enum:
                      - pending
                      - approved
                      - suspended
                    nullable: true
                    description: API access status
                  createdAt:
                    type: string
                    format: date-time
                    description: Customer creation date
                required:
                  - id
                  - firstName
                  - lastName
                  - phoneNumber
                  - phoneNumberInfo
                  - email
                  - emailInfo
                  - postalCode
                  - countryCode
                  - country
                  - temperatureUnit
                  - twentyFourHours
                  - newsletterSubscription
                  - textMessageSubscription
                  - accountType
                  - companyName
                  - businessName
                  - businessEmail
                  - businessPhoneNumber
                  - apiAccessStatus
                  - createdAt
      security:
        - JWT: []
        - ApiKey: []
      operationId: getCustomerDetails
      summary: Get customer details
      description: Returns customer's firstName, lastName, preferred temperature unit, etc.
    patch:
      tags:
        - customer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Customer ID, UUID
                    example: 27af30e2-69df-4274-8930-93404dcddb41
                  firstName:
                    type: string
                    nullable: true
                    description: First name of customer
                    example: Carl
                  lastName:
                    type: string
                    nullable: true
                    description: Last name of customer
                    example: Johnson
                  phoneNumber:
                    type: string
                    nullable: true
                    description: Phone number with country code
                    example: '+15433848374'
                  phoneNumberInfo:
                    type: string
                    nullable: true
                    description: Additional Phone number with country code
                    example: '+15433848374'
                  email:
                    type: string
                    format: email
                    nullable: true
                    description: Customer email
                    example: carl_johnson1972@gmail.com
                  emailInfo:
                    type: string
                    format: email
                    nullable: true
                    description: Customer additional email
                    example: carl_johnson1972@gmail.com
                  postalCode:
                    type: string
                    nullable: true
                    description: Postal code
                    example: '49101'
                  countryCode:
                    type: string
                    nullable: true
                    description: Code of country where the customer is from
                    example: '47'
                  country:
                    type: string
                    nullable: true
                    description: Country where the customer is from
                    example: CA
                  temperatureUnit:
                    type: string
                    enum:
                      - C
                      - F
                    description: Temperature unit preferred by customer
                  twentyFourHours:
                    type: boolean
                    description: Is 24-hour time mode enabled for customer
                    example: true
                  newsletterSubscription:
                    type: boolean
                    description: Does customer have newsletter subscriptions
                    example: false
                  textMessageSubscription:
                    type: boolean
                    description: Does customer have text message subscription
                    example: false
                  accountType:
                    type: string
                    enum:
                      - individual
                      - business
                    description: Account type
                  companyName:
                    type: string
                    nullable: true
                    description: Company name
                  businessName:
                    type: string
                    nullable: true
                    description: Business name
                  businessEmail:
                    type: string
                    nullable: true
                    description: Business email
                  businessPhoneNumber:
                    type: string
                    nullable: true
                    description: Business phone number
                  apiAccessStatus:
                    type: string
                    enum:
                      - pending
                      - approved
                      - suspended
                    nullable: true
                    description: API access status
                  createdAt:
                    type: string
                    format: date-time
                    description: Customer creation date
                required:
                  - id
                  - firstName
                  - lastName
                  - phoneNumber
                  - phoneNumberInfo
                  - email
                  - emailInfo
                  - postalCode
                  - countryCode
                  - country
                  - temperatureUnit
                  - twentyFourHours
                  - newsletterSubscription
                  - textMessageSubscription
                  - accountType
                  - companyName
                  - businessName
                  - businessEmail
                  - businessPhoneNumber
                  - apiAccessStatus
                  - createdAt
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: updateCustomerDetails
      summary: Update customer details
      description: Updates customer's firstName, lastName, preferred temperature unit, etc.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Customer email
                  example: carl_johnson1972@gmail.com
                emailInfo:
                  type: string
                  format: email
                  description: Customer additional email
                  example: carl_johnson1972@gmail.com
                phoneNumber:
                  type: string
                  description: Phone number with country code
                  example: '+15433848374'
                firstName:
                  type: string
                  description: First name of customer
                  example: Carl
                lastName:
                  type: string
                  description: Last name of customer
                  example: Johnson
                postalCode:
                  type: string
                  description: Postal code
                  example: '49101'
                countryCode:
                  type: string
                  description: Code of country where the customer is from
                  example: '47'
                twentyFourHours:
                  type: boolean
                  description: Is 24-hour time mode enabled for customer
                  example: true
                country:
                  type: string
                  description: Country where the customer is from
                  example: CA
                temperatureUnit:
                  type: string
                  enum:
                    - C
                    - F
                  description: Temperature unit preferred by customer
                accountType:
                  type: string
                  enum:
                    - individual
                    - business
                  description: Account type
                companyName:
                  type: string
                  description: Company name
                businessName:
                  type: string
                  description: Business name
                businessEmail:
                  type: string
                  description: Business email
                businessPhoneNumber:
                  type: string
                  description: Business phone number
                newsletterSubscription:
                  type: boolean
                  description: Does customer have newsletter subscriptions
                  example: false
                textMessageSubscription:
                  type: boolean
                  description: Does customer have text message subscription
                  example: false
              description: At least one field must be defined
              minProperties: 1
        description: At least one field must be defined
    parameters: []
  /devices/types:
    get:
      summary: Get device types
      operationId: getDeviceTypes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: Device Type ID
                        name:
                          type: string
                          description: Name of parent type
                          example: Heaters
                        childTypes:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                format: uuid
                                description: Device Type ID
                              name:
                                type: string
                                description: Name of child type
                                example: GL-Oil Heater G3
                            required:
                              - id
                              - name
                      required:
                        - id
                        - name
                        - childTypes
                required:
                  - items
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '500':
          description: Internal Server Error
      tags:
        - device
      security:
        - JWT: []
        - ApiKey: []
    parameters: []
  /customer/auth/sign-in:
    post:
      tags:
        - customer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  idToken:
                    type: string
                    description: JWT ID token
                    example: >-
                      eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTY1MjQ2MTQ1MiwiZXhwIjoxNjUyNDYyMDUyfQ.PaqG93AJYMp8stHdGh9LCoxU8jrI9So66hzbrPe8UwU
                  refreshToken:
                    type: string
                    description: JWT Refresh token
                    example: >-
                      eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6InJlZnJlc2giLCJpYXQiOjE2NTI0NjE0NTIsImV4cCI6MTY1MjQ2MjA1Mn0.PNzSmBp6nxKigzp-hOiEPpRl9ji3ZIl188SY5A9IJHI
                required:
                  - idToken
                  - refreshToken
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '500':
          description: Internal Server Error
      operationId: signIn
      summary: Sign in customer
      description: Returns JWT tokens
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  oneOf:
                    - type: string
                      format: email
                      description: Customer email
                      example: carl_johnson1972@gmail.com
                    - type: string
                      description: Phone number with country code
                      example: '+15433848374'
                password:
                  type: string
                  description: Customer's password
              required:
                - login
                - password
    parameters: []
  /customer/auth/sign-out:
    delete:
      tags:
        - customer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status message
                required:
                  - status
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomerNotFoundError'
                  - $ref: '#/components/schemas/RefreshTokenNotFoundError'
        '500':
          description: Internal Server Error
      operationId: signOut
      summary: Sign out customer
      security:
        - JWT_Refresh: []
      description: Invalidates refresh token
    parameters: []
  /customer/auth/refresh:
    post:
      tags:
        - customer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  idToken:
                    type: string
                    description: JWT ID token
                    example: >-
                      eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTY1MjQ2MTQ1MiwiZXhwIjoxNjUyNDYyMDUyfQ.PaqG93AJYMp8stHdGh9LCoxU8jrI9So66hzbrPe8UwU
                  refreshToken:
                    type: string
                    description: JWT Refresh token
                    example: >-
                      eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6InJlZnJlc2giLCJpYXQiOjE2NTI0NjE0NTIsImV4cCI6MTY1MjQ2MjA1Mn0.PNzSmBp6nxKigzp-hOiEPpRl9ji3ZIl188SY5A9IJHI
                required:
                  - idToken
                  - refreshToken
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomerNotFoundError'
                  - $ref: '#/components/schemas/RefreshTokenNotFoundError'
        '500':
          description: Internal Server Error
      security:
        - JWT_Refresh: []
      operationId: refreshCustomerTokens
      summary: Refresh customer tokens
      description: Returns new JWT tokens
    parameters: []
  /customer/change-password:
    post:
      tags:
        - customer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                required:
                  - status
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomerNotFoundError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: changePassword
      summary: Change password
      description: Changes the password of the customer making request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                  description: Old customer password
                password:
                  type: string
                  description: New customer password
              required:
                - oldPassword
                - password
    parameters: []
  /customer/auth/forgot-password:
    post:
      tags:
        - customer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                  needAppSendEmail:
                    type: boolean
                    description: Whether the app need send albe cloud forget password email
                required:
                  - status
                  - needAppSendEmail
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomerIdentityAlreadyInUseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomerNotFoundError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: forgotPassword
      summary: Forgot password
      description: Sends an email message with one-time code to verify password reset.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  oneOf:
                    - type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - email
                        value:
                          type: string
                          format: email
                          description: Customer email
                      required:
                        - type
                        - value
                    - type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - phoneNumber
                        value:
                          type: string
                          description: Customer phone number
                      required:
                        - type
                        - value
                ableCustomerExist:
                  type: boolean
                  description: Whether the able customer exists
              required:
                - login
    parameters: []
  /customer/auth/forgot-password/confirm:
    post:
      tags:
        - customer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                required:
                  - status
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IncorrectOneTimeCodeError'
                  - $ref: '#/components/schemas/OneTimeCodeExpiredError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomerNotFoundError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: forgotPasswordConfirm
      summary: Confirm forgot password
      description: >-
        Sets a new password for customer. Requires a one-time code received in
        email message sent after using forgotPassword endpoint
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  oneOf:
                    - type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - email
                        value:
                          type: string
                          format: email
                          description: Customer email
                      required:
                        - type
                        - value
                    - type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - phoneNumber
                        value:
                          type: string
                          description: Customer phone number
                      required:
                        - type
                        - value
                newPassword:
                  type: string
                confirmationCode:
                  type: string
                  minLength: 6
                  maxLength: 6
                ableCustomerExist:
                  type: boolean
                  description: Whether the able customer exists
              required:
                - login
                - newPassword
                - confirmationCode
    parameters: []
  /houses/{houseId}/roomPrograms:
    get:
      tags:
        - house
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Room program ID
                        name:
                          type: string
                          description: Room program name
                        houseId:
                          type: string
                          description: House ID
                          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                        data:
                          type: object
                          properties:
                            monday:
                              type: array
                              items:
                                type: object
                                properties:
                                  startTime:
                                    type: string
                                    description: Time in HH:mm format (e.g. 23:59)
                                  temperatureType:
                                    type: string
                                    enum:
                                      - comfort
                                      - sleep
                                      - away
                                      - normal
                                      - always_heating
                                      - 'off'
                                    description: Temperature type
                                required:
                                  - startTime
                                  - temperatureType
                              minItems: 1
                            tuesday:
                              type: array
                              items:
                                type: object
                                properties:
                                  startTime:
                                    type: string
                                    description: Time in HH:mm format (e.g. 23:59)
                                  temperatureType:
                                    type: string
                                    enum:
                                      - comfort
                                      - sleep
                                      - away
                                      - normal
                                      - always_heating
                                      - 'off'
                                    description: Temperature type
                                required:
                                  - startTime
                                  - temperatureType
                              minItems: 1
                            wednesday:
                              type: array
                              items:
                                type: object
                                properties:
                                  startTime:
                                    type: string
                                    description: Time in HH:mm format (e.g. 23:59)
                                  temperatureType:
                                    type: string
                                    enum:
                                      - comfort
                                      - sleep
                                      - away
                                      - normal
                                      - always_heating
                                      - 'off'
                                    description: Temperature type
                                required:
                                  - startTime
                                  - temperatureType
                              minItems: 1
                            thursday:
                              type: array
                              items:
                                type: object
                                properties:
                                  startTime:
                                    type: string
                                    description: Time in HH:mm format (e.g. 23:59)
                                  temperatureType:
                                    type: string
                                    enum:
                                      - comfort
                                      - sleep
                                      - away
                                      - normal
                                      - always_heating
                                      - 'off'
                                    description: Temperature type
                                required:
                                  - startTime
                                  - temperatureType
                              minItems: 1
                            friday:
                              type: array
                              items:
                                type: object
                                properties:
                                  startTime:
                                    type: string
                                    description: Time in HH:mm format (e.g. 23:59)
                                  temperatureType:
                                    type: string
                                    enum:
                                      - comfort
                                      - sleep
                                      - away
                                      - normal
                                      - always_heating
                                      - 'off'
                                    description: Temperature type
                                required:
                                  - startTime
                                  - temperatureType
                              minItems: 1
                            saturday:
                              type: array
                              items:
                                type: object
                                properties:
                                  startTime:
                                    type: string
                                    description: Time in HH:mm format (e.g. 23:59)
                                  temperatureType:
                                    type: string
                                    enum:
                                      - comfort
                                      - sleep
                                      - away
                                      - normal
                                      - always_heating
                                      - 'off'
                                    description: Temperature type
                                required:
                                  - startTime
                                  - temperatureType
                              minItems: 1
                            sunday:
                              type: array
                              items:
                                type: object
                                properties:
                                  startTime:
                                    type: string
                                    description: Time in HH:mm format (e.g. 23:59)
                                  temperatureType:
                                    type: string
                                    enum:
                                      - comfort
                                      - sleep
                                      - away
                                      - normal
                                      - always_heating
                                      - 'off'
                                    description: Temperature type
                                required:
                                  - startTime
                                  - temperatureType
                              minItems: 1
                          description: Room program data
                        isDefault:
                          type: boolean
                          description: Is the room program generated by App
                      required:
                        - id
                        - name
                        - houseId
                        - data
                        - isDefault
                required:
                  - items
      operationId: listRoomPrograms
      summary: List room programs
    post:
      tags:
        - house
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  roomProgram:
                    type: object
                    properties:
                      id:
                        type: string
                        description: Room program ID
                      name:
                        type: string
                        description: Room program name
                      houseId:
                        type: string
                        description: House ID
                        example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                      data:
                        type: object
                        properties:
                          monday:
                            type: array
                            items:
                              type: object
                              properties:
                                startTime:
                                  type: string
                                  description: Time in HH:mm format (e.g. 23:59)
                                temperatureType:
                                  type: string
                                  enum:
                                    - comfort
                                    - sleep
                                    - away
                                    - normal
                                    - always_heating
                                    - 'off'
                                  description: Temperature type
                              required:
                                - startTime
                                - temperatureType
                            minItems: 1
                          tuesday:
                            type: array
                            items:
                              type: object
                              properties:
                                startTime:
                                  type: string
                                  description: Time in HH:mm format (e.g. 23:59)
                                temperatureType:
                                  type: string
                                  enum:
                                    - comfort
                                    - sleep
                                    - away
                                    - normal
                                    - always_heating
                                    - 'off'
                                  description: Temperature type
                              required:
                                - startTime
                                - temperatureType
                            minItems: 1
                          wednesday:
                            type: array
                            items:
                              type: object
                              properties:
                                startTime:
                                  type: string
                                  description: Time in HH:mm format (e.g. 23:59)
                                temperatureType:
                                  type: string
                                  enum:
                                    - comfort
                                    - sleep
                                    - away
                                    - normal
                                    - always_heating
                                    - 'off'
                                  description: Temperature type
                              required:
                                - startTime
                                - temperatureType
                            minItems: 1
                          thursday:
                            type: array
                            items:
                              type: object
                              properties:
                                startTime:
                                  type: string
                                  description: Time in HH:mm format (e.g. 23:59)
                                temperatureType:
                                  type: string
                                  enum:
                                    - comfort
                                    - sleep
                                    - away
                                    - normal
                                    - always_heating
                                    - 'off'
                                  description: Temperature type
                              required:
                                - startTime
                                - temperatureType
                            minItems: 1
                          friday:
                            type: array
                            items:
                              type: object
                              properties:
                                startTime:
                                  type: string
                                  description: Time in HH:mm format (e.g. 23:59)
                                temperatureType:
                                  type: string
                                  enum:
                                    - comfort
                                    - sleep
                                    - away
                                    - normal
                                    - always_heating
                                    - 'off'
                                  description: Temperature type
                              required:
                                - startTime
                                - temperatureType
                            minItems: 1
                          saturday:
                            type: array
                            items:
                              type: object
                              properties:
                                startTime:
                                  type: string
                                  description: Time in HH:mm format (e.g. 23:59)
                                temperatureType:
                                  type: string
                                  enum:
                                    - comfort
                                    - sleep
                                    - away
                                    - normal
                                    - always_heating
                                    - 'off'
                                  description: Temperature type
                              required:
                                - startTime
                                - temperatureType
                            minItems: 1
                          sunday:
                            type: array
                            items:
                              type: object
                              properties:
                                startTime:
                                  type: string
                                  description: Time in HH:mm format (e.g. 23:59)
                                temperatureType:
                                  type: string
                                  enum:
                                    - comfort
                                    - sleep
                                    - away
                                    - normal
                                    - always_heating
                                    - 'off'
                                  description: Temperature type
                              required:
                                - startTime
                                - temperatureType
                            minItems: 1
                        description: Room program data
                      isDefault:
                        type: boolean
                        description: Is the room program generated by App
                    required:
                      - id
                      - name
                      - houseId
                      - data
                      - isDefault
                  timezone:
                    type: object
                    properties:
                      region:
                        type: string
                        example: Europe/London
                      timeShift:
                        type: string
                        examples: *ref_0
                    required:
                      - region
                      - timeShift
                    nullable: true
                required:
                  - roomProgram
                  - timezone
      security:
        - JWT: []
        - ApiKey: []
      operationId: createRoomProgram
      summary: Create room program
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Room program name
              required:
                - name
    parameters:
      - schema:
          type: string
          description: House ID
          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
        name: houseId
        in: path
        required: true
        description: House ID
  /roomPrograms/{roomProgramId}:
    get:
      tags:
        - house
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Room program ID
                  name:
                    type: string
                    description: Room program name
                  houseId:
                    type: string
                    description: House ID
                    example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                  data:
                    type: object
                    properties:
                      monday:
                        type: array
                        items:
                          type: object
                          properties:
                            startTime:
                              type: string
                              description: Time in HH:mm format (e.g. 23:59)
                            temperatureType:
                              type: string
                              enum:
                                - comfort
                                - sleep
                                - away
                                - normal
                                - always_heating
                                - 'off'
                              description: Temperature type
                          required:
                            - startTime
                            - temperatureType
                        minItems: 1
                      tuesday:
                        type: array
                        items:
                          type: object
                          properties:
                            startTime:
                              type: string
                              description: Time in HH:mm format (e.g. 23:59)
                            temperatureType:
                              type: string
                              enum:
                                - comfort
                                - sleep
                                - away
                                - normal
                                - always_heating
                                - 'off'
                              description: Temperature type
                          required:
                            - startTime
                            - temperatureType
                        minItems: 1
                      wednesday:
                        type: array
                        items:
                          type: object
                          properties:
                            startTime:
                              type: string
                              description: Time in HH:mm format (e.g. 23:59)
                            temperatureType:
                              type: string
                              enum:
                                - comfort
                                - sleep
                                - away
                                - normal
                                - always_heating
                                - 'off'
                              description: Temperature type
                          required:
                            - startTime
                            - temperatureType
                        minItems: 1
                      thursday:
                        type: array
                        items:
                          type: object
                          properties:
                            startTime:
                              type: string
                              description: Time in HH:mm format (e.g. 23:59)
                            temperatureType:
                              type: string
                              enum:
                                - comfort
                                - sleep
                                - away
                                - normal
                                - always_heating
                                - 'off'
                              description: Temperature type
                          required:
                            - startTime
                            - temperatureType
                        minItems: 1
                      friday:
                        type: array
                        items:
                          type: object
                          properties:
                            startTime:
                              type: string
                              description: Time in HH:mm format (e.g. 23:59)
                            temperatureType:
                              type: string
                              enum:
                                - comfort
                                - sleep
                                - away
                                - normal
                                - always_heating
                                - 'off'
                              description: Temperature type
                          required:
                            - startTime
                            - temperatureType
                        minItems: 1
                      saturday:
                        type: array
                        items:
                          type: object
                          properties:
                            startTime:
                              type: string
                              description: Time in HH:mm format (e.g. 23:59)
                            temperatureType:
                              type: string
                              enum:
                                - comfort
                                - sleep
                                - away
                                - normal
                                - always_heating
                                - 'off'
                              description: Temperature type
                          required:
                            - startTime
                            - temperatureType
                        minItems: 1
                      sunday:
                        type: array
                        items:
                          type: object
                          properties:
                            startTime:
                              type: string
                              description: Time in HH:mm format (e.g. 23:59)
                            temperatureType:
                              type: string
                              enum:
                                - comfort
                                - sleep
                                - away
                                - normal
                                - always_heating
                                - 'off'
                              description: Temperature type
                          required:
                            - startTime
                            - temperatureType
                        minItems: 1
                    description: Room program data
                  isDefault:
                    type: boolean
                    description: Is the room program generated by App
                required:
                  - id
                  - name
                  - houseId
                  - data
                  - isDefault
      security:
        - JWT: []
        - ApiKey: []
      operationId: getRoomProgram
      summary: Get room program
    parameters:
      - schema:
          type: string
          description: Room program ID
        name: roomProgramId
        in: path
        required: true
        description: Room program ID
  /houses/{houseId}/roomPrograms/{roomProgramId}:
    patch:
      tags:
        - house
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Room program ID
                  name:
                    type: string
                    description: Room program name
                  houseId:
                    type: string
                    description: House ID
                    example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                  data:
                    type: object
                    properties:
                      monday:
                        type: array
                        items:
                          type: object
                          properties:
                            startTime:
                              type: string
                              description: Time in HH:mm format (e.g. 23:59)
                            temperatureType:
                              type: string
                              enum:
                                - comfort
                                - sleep
                                - away
                                - normal
                                - always_heating
                                - 'off'
                              description: Temperature type
                          required:
                            - startTime
                            - temperatureType
                        minItems: 1
                      tuesday:
                        type: array
                        items:
                          type: object
                          properties:
                            startTime:
                              type: string
                              description: Time in HH:mm format (e.g. 23:59)
                            temperatureType:
                              type: string
                              enum:
                                - comfort
                                - sleep
                                - away
                                - normal
                                - always_heating
                                - 'off'
                              description: Temperature type
                          required:
                            - startTime
                            - temperatureType
                        minItems: 1
                      wednesday:
                        type: array
                        items:
                          type: object
                          properties:
                            startTime:
                              type: string
                              description: Time in HH:mm format (e.g. 23:59)
                            temperatureType:
                              type: string
                              enum:
                                - comfort
                                - sleep
                                - away
                                - normal
                                - always_heating
                                - 'off'
                              description: Temperature type
                          required:
                            - startTime
                            - temperatureType
                        minItems: 1
                      thursday:
                        type: array
                        items:
                          type: object
                          properties:
                            startTime:
                              type: string
                              description: Time in HH:mm format (e.g. 23:59)
                            temperatureType:
                              type: string
                              enum:
                                - comfort
                                - sleep
                                - away
                                - normal
                                - always_heating
                                - 'off'
                              description: Temperature type
                          required:
                            - startTime
                            - temperatureType
                        minItems: 1
                      friday:
                        type: array
                        items:
                          type: object
                          properties:
                            startTime:
                              type: string
                              description: Time in HH:mm format (e.g. 23:59)
                            temperatureType:
                              type: string
                              enum:
                                - comfort
                                - sleep
                                - away
                                - normal
                                - always_heating
                                - 'off'
                              description: Temperature type
                          required:
                            - startTime
                            - temperatureType
                        minItems: 1
                      saturday:
                        type: array
                        items:
                          type: object
                          properties:
                            startTime:
                              type: string
                              description: Time in HH:mm format (e.g. 23:59)
                            temperatureType:
                              type: string
                              enum:
                                - comfort
                                - sleep
                                - away
                                - normal
                                - always_heating
                                - 'off'
                              description: Temperature type
                          required:
                            - startTime
                            - temperatureType
                        minItems: 1
                      sunday:
                        type: array
                        items:
                          type: object
                          properties:
                            startTime:
                              type: string
                              description: Time in HH:mm format (e.g. 23:59)
                            temperatureType:
                              type: string
                              enum:
                                - comfort
                                - sleep
                                - away
                                - normal
                                - always_heating
                                - 'off'
                              description: Temperature type
                          required:
                            - startTime
                            - temperatureType
                        minItems: 1
                    description: Room program data
                  isDefault:
                    type: boolean
                    description: Is the room program generated by App
                required:
                  - id
                  - name
                  - houseId
                  - data
                  - isDefault
      security:
        - JWT: []
        - ApiKey: []
      operationId: updateRoomProgram
      summary: Update room program
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Room program name
                data:
                  type: object
                  properties:
                    monday:
                      type: array
                      items:
                        type: object
                        properties:
                          startTime:
                            type: string
                            description: Time in HH:mm format (e.g. 23:59)
                          temperatureType:
                            type: string
                            enum:
                              - comfort
                              - sleep
                              - away
                              - normal
                              - always_heating
                              - 'off'
                            description: Temperature type
                        required:
                          - startTime
                          - temperatureType
                      minItems: 1
                    tuesday:
                      type: array
                      items:
                        type: object
                        properties:
                          startTime:
                            type: string
                            description: Time in HH:mm format (e.g. 23:59)
                          temperatureType:
                            type: string
                            enum:
                              - comfort
                              - sleep
                              - away
                              - normal
                              - always_heating
                              - 'off'
                            description: Temperature type
                        required:
                          - startTime
                          - temperatureType
                      minItems: 1
                    wednesday:
                      type: array
                      items:
                        type: object
                        properties:
                          startTime:
                            type: string
                            description: Time in HH:mm format (e.g. 23:59)
                          temperatureType:
                            type: string
                            enum:
                              - comfort
                              - sleep
                              - away
                              - normal
                              - always_heating
                              - 'off'
                            description: Temperature type
                        required:
                          - startTime
                          - temperatureType
                      minItems: 1
                    thursday:
                      type: array
                      items:
                        type: object
                        properties:
                          startTime:
                            type: string
                            description: Time in HH:mm format (e.g. 23:59)
                          temperatureType:
                            type: string
                            enum:
                              - comfort
                              - sleep
                              - away
                              - normal
                              - always_heating
                              - 'off'
                            description: Temperature type
                        required:
                          - startTime
                          - temperatureType
                      minItems: 1
                    friday:
                      type: array
                      items:
                        type: object
                        properties:
                          startTime:
                            type: string
                            description: Time in HH:mm format (e.g. 23:59)
                          temperatureType:
                            type: string
                            enum:
                              - comfort
                              - sleep
                              - away
                              - normal
                              - always_heating
                              - 'off'
                            description: Temperature type
                        required:
                          - startTime
                          - temperatureType
                      minItems: 1
                    saturday:
                      type: array
                      items:
                        type: object
                        properties:
                          startTime:
                            type: string
                            description: Time in HH:mm format (e.g. 23:59)
                          temperatureType:
                            type: string
                            enum:
                              - comfort
                              - sleep
                              - away
                              - normal
                              - always_heating
                              - 'off'
                            description: Temperature type
                        required:
                          - startTime
                          - temperatureType
                      minItems: 1
                    sunday:
                      type: array
                      items:
                        type: object
                        properties:
                          startTime:
                            type: string
                            description: Time in HH:mm format (e.g. 23:59)
                          temperatureType:
                            type: string
                            enum:
                              - comfort
                              - sleep
                              - away
                              - normal
                              - always_heating
                              - 'off'
                            description: Temperature type
                        required:
                          - startTime
                          - temperatureType
                      minItems: 1
                  description: Room program data
    delete:
      tags:
        - house
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                required:
                  - status
      security:
        - JWT: []
        - ApiKey: []
      operationId: deleteRoomProgram
      summary: Delete room program
    parameters:
      - schema:
          type: string
          description: House ID
          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
        name: houseId
        in: path
        required: true
        description: House ID
      - schema:
          type: string
          description: Room program ID
        name: roomProgramId
        in: path
        required: true
        description: Room program ID
  /rooms/{roomId}/program:
    post:
      tags:
        - room
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  room:
                    type: object
                    properties:
                      id:
                        type: string
                        description: Room ID
                        example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
                      name:
                        type: string
                        description: Room name
                        example: Living room
                      houseId:
                        type: string
                        description: ID of house the room is attached to
                        example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                      roomComfortTemperature:
                        type: number
                        nullable: true
                        description: Room temperature in comfort mode
                        example: 23
                      roomSleepTemperature:
                        type: number
                        nullable: true
                        description: Room temperature in sleep mode
                        example: 27
                      roomAwayTemperature:
                        type: number
                        nullable: true
                        description: Room temperature in away mode
                        example: 27
                      overrideModeType:
                        type: string
                        enum:
                          - continuous
                          - not_continuous
                        nullable: true
                        description: >-
                          Override mode type. If not continuous, overrideEndDate
                          is required
                      overrideEndDate:
                        type: number
                        minimum: 0
                        maximum: 9999999999
                        description: Date in seconds since epoch (UTC time)
                        example: 1579098983
                        nullable: true
                      roomProgramId:
                        type: string
                        description: ID of room program attached to the room
                        nullable: true
                        example: b6730c1e-c775-43ba-8fa0-e6d07c39e21c
                      roomControlSource:
                        type: string
                        enum:
                          - mobile_api
                          - open_api
                          - tibber
                        nullable: true
                        description: >-
                          The desired control source of every device in this
                          room
                      mode:
                        type: string
                        enum:
                          - weekly_program
                          - comfort
                          - sleep
                          - away
                          - vacation
                          - normal
                          - always_heating
                          - 'off'
                        nullable: true
                        description: Room mode
                      createdAt:
                        type: string
                        format: date-time
                        nullable: true
                        description: Room creation date
                    required:
                      - id
                      - name
                      - houseId
                      - roomComfortTemperature
                      - roomSleepTemperature
                      - roomAwayTemperature
                      - overrideModeType
                      - overrideEndDate
                      - roomProgramId
                      - roomControlSource
                      - mode
                      - createdAt
                  timezone:
                    type: object
                    properties:
                      region:
                        type: string
                        example: Europe/London
                      timeShift:
                        type: string
                        examples: *ref_0
                    required:
                      - region
                      - timeShift
                    nullable: true
                required:
                  - room
                  - timezone
        '400':
          description: Room or program not found
        '403':
          description: Access denied
      security:
        - JWT: []
        - ApiKey: []
      operationId: changeRoomProgram
      summary: Change room program
      description: Sets a new program id or null to a room
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                roomProgramId:
                  type: string
                  description: >-
                    ID of the room program to assign to the room. Null to remove
                    the room program
                  nullable: true
              required:
                - roomProgramId
    parameters:
      - schema:
          type: string
          description: Room ID
          example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
        name: roomId
        in: path
        required: true
        description: Room ID
  /devices/{deviceId}/timers:
    get:
      tags:
        - device
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Timer ID
                        name:
                          type: string
                          description: Timer name
                        deviceId:
                          type: string
                          format: uuid
                          description: Device ID
                        activationTime:
                          type: number
                          minimum: 0
                          maximum: 1440
                          description: >-
                            Time when timer is activated. Time in minutes since
                            start of day in local time, e.g. 21:37 is 1297. It
                            can be maximal 1 day. If repeatOn field is omitted
                            then it is a non repeatable timer.
                          example: 1297
                        repeatOn:
                          type: array
                          items:
                            type: string
                            enum:
                              - Monday
                              - Tuesday
                              - Wednesday
                              - Thursday
                              - Friday
                              - Saturday
                              - Sunday
                          description: >-
                            Days of the week when the timer should be activated.
                            Omit this field if you use non repeatable timers
                          example: &ref_1
                            - Monday
                            - Wednesday
                            - Friday
                        setting:
                          oneOf:
                            - type: string
                              enum:
                                - normal
                                - 'off'
                                - always_heating
                              description: >-
                                Setting for heater timer. Values: normal / off /
                                always_heating
                            - type: string
                              enum:
                                - HARD_OFF
                                - SOFT_OFF
                                - AUTO
                                - SLEEP
                                - BOOST
                                - TURN_ON
                                - MANUAL
                                - MANUAL_LEVEL1
                                - MANUAL_LEVEL2
                                - MANUAL_LEVEL3
                                - MANUAL_LEVEL4
                                - MANUAL_LEVEL5
                                - MANUAL_LEVEL6
                                - MANUAL_LEVEL7
                                - MANUAL_LEVEL8
                              description: >-
                                Setting for purifier timer. Values: HARD_OFF /
                                SOFT_OFF / AUTO / SLEEP / BOOST / TURN_ON /
                                MANUAL / MANUAL_LEVEL1 / MANUAL_LEVEL2 /
                                MANUAL_LEVEL3 / MANUAL_LEVEL4 / MANUAL_LEVEL5 /
                                MANUAL_LEVEL6 / MANUAL_LEVEL7 / MANUAL_LEVEL8
                        isActive:
                          type: boolean
                          description: Is timer turned on
                        createdAt:
                          type: string
                          format: date-time
                          description: Timer creation date
                      required:
                        - id
                        - name
                        - deviceId
                        - activationTime
                        - setting
                        - isActive
                        - createdAt
                required:
                  - items
      security:
        - JWT: []
        - ApiKey: []
      operationId: listTimers
      summary: List device timers
    post:
      tags:
        - device
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Timer ID
                  name:
                    type: string
                    description: Timer name
                  deviceId:
                    type: string
                    format: uuid
                    description: Device ID
                  activationTime:
                    type: number
                    minimum: 0
                    maximum: 1440
                    description: >-
                      Time when timer is activated. Time in minutes since start
                      of day in local time, e.g. 21:37 is 1297. It can be
                      maximal 1 day. If repeatOn field is omitted then it is a
                      non repeatable timer.
                    example: 1297
                  repeatOn:
                    type: array
                    items:
                      type: string
                      enum:
                        - Monday
                        - Tuesday
                        - Wednesday
                        - Thursday
                        - Friday
                        - Saturday
                        - Sunday
                    description: >-
                      Days of the week when the timer should be activated. Omit
                      this field if you use non repeatable timers
                    example: *ref_1
                  setting:
                    oneOf:
                      - type: string
                        enum:
                          - normal
                          - 'off'
                          - always_heating
                        description: >-
                          Setting for heater timer. Values: normal / off /
                          always_heating
                      - type: string
                        enum:
                          - HARD_OFF
                          - SOFT_OFF
                          - AUTO
                          - SLEEP
                          - BOOST
                          - TURN_ON
                          - MANUAL
                          - MANUAL_LEVEL1
                          - MANUAL_LEVEL2
                          - MANUAL_LEVEL3
                          - MANUAL_LEVEL4
                          - MANUAL_LEVEL5
                          - MANUAL_LEVEL6
                          - MANUAL_LEVEL7
                          - MANUAL_LEVEL8
                        description: >-
                          Setting for purifier timer. Values: HARD_OFF /
                          SOFT_OFF / AUTO / SLEEP / BOOST / TURN_ON / MANUAL /
                          MANUAL_LEVEL1 / MANUAL_LEVEL2 / MANUAL_LEVEL3 /
                          MANUAL_LEVEL4 / MANUAL_LEVEL5 / MANUAL_LEVEL6 /
                          MANUAL_LEVEL7 / MANUAL_LEVEL8
                  isActive:
                    type: boolean
                    description: Is timer turned on
                  createdAt:
                    type: string
                    format: date-time
                    description: Timer creation date
                required:
                  - id
                  - name
                  - deviceId
                  - activationTime
                  - setting
                  - isActive
                  - createdAt
      security:
        - JWT: []
        - ApiKey: []
      operationId: createTimer
      summary: Create timer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Timer name
                activationTime:
                  type: number
                  minimum: 0
                  maximum: 1440
                  description: >-
                    Time when timer is activated. Time in minutes since start of
                    day in local time, e.g. 21:37 is 1297. It can be maximal 1
                    day. If repeatOn field is omitted then it is a non
                    repeatable timer.
                  example: 1297
                repeatOn:
                  type: array
                  items:
                    type: string
                    enum:
                      - Monday
                      - Tuesday
                      - Wednesday
                      - Thursday
                      - Friday
                      - Saturday
                      - Sunday
                  description: >-
                    Days of the week when the timer should be activated. Omit
                    this field if you use non repeatable timers
                  example: *ref_1
                setting:
                  oneOf:
                    - type: string
                      enum:
                        - normal
                        - 'off'
                        - always_heating
                      description: >-
                        Setting for heater timer. Values: normal / off /
                        always_heating
                    - type: string
                      enum:
                        - HARD_OFF
                        - SOFT_OFF
                        - AUTO
                        - SLEEP
                        - BOOST
                        - TURN_ON
                        - MANUAL
                        - MANUAL_LEVEL1
                        - MANUAL_LEVEL2
                        - MANUAL_LEVEL3
                        - MANUAL_LEVEL4
                        - MANUAL_LEVEL5
                        - MANUAL_LEVEL6
                        - MANUAL_LEVEL7
                        - MANUAL_LEVEL8
                      description: >-
                        Setting for purifier timer. Values: HARD_OFF / SOFT_OFF
                        / AUTO / SLEEP / BOOST / TURN_ON / MANUAL /
                        MANUAL_LEVEL1 / MANUAL_LEVEL2 / MANUAL_LEVEL3 /
                        MANUAL_LEVEL4 / MANUAL_LEVEL5 / MANUAL_LEVEL6 /
                        MANUAL_LEVEL7 / MANUAL_LEVEL8
                isActive:
                  type: boolean
                  description: Is timer turned on
              required:
                - name
                - activationTime
                - setting
    parameters:
      - schema:
          type: string
          format: uuid
          description: Device ID
        name: deviceId
        in: path
        required: true
        description: Device ID
  /devices/{deviceId}/timers/{timerId}:
    patch:
      tags:
        - device
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Timer ID
                  name:
                    type: string
                    description: Timer name
                  deviceId:
                    type: string
                    format: uuid
                    description: Device ID
                  activationTime:
                    type: number
                    minimum: 0
                    maximum: 1440
                    description: >-
                      Time when timer is activated. Time in minutes since start
                      of day in local time, e.g. 21:37 is 1297. It can be
                      maximal 1 day. If repeatOn field is omitted then it is a
                      non repeatable timer.
                    example: 1297
                  repeatOn:
                    type: array
                    items:
                      type: string
                      enum:
                        - Monday
                        - Tuesday
                        - Wednesday
                        - Thursday
                        - Friday
                        - Saturday
                        - Sunday
                    description: >-
                      Days of the week when the timer should be activated. Omit
                      this field if you use non repeatable timers
                    example: *ref_1
                  setting:
                    oneOf:
                      - type: string
                        enum:
                          - normal
                          - 'off'
                          - always_heating
                        description: >-
                          Setting for heater timer. Values: normal / off /
                          always_heating
                      - type: string
                        enum:
                          - HARD_OFF
                          - SOFT_OFF
                          - AUTO
                          - SLEEP
                          - BOOST
                          - TURN_ON
                          - MANUAL
                          - MANUAL_LEVEL1
                          - MANUAL_LEVEL2
                          - MANUAL_LEVEL3
                          - MANUAL_LEVEL4
                          - MANUAL_LEVEL5
                          - MANUAL_LEVEL6
                          - MANUAL_LEVEL7
                          - MANUAL_LEVEL8
                        description: >-
                          Setting for purifier timer. Values: HARD_OFF /
                          SOFT_OFF / AUTO / SLEEP / BOOST / TURN_ON / MANUAL /
                          MANUAL_LEVEL1 / MANUAL_LEVEL2 / MANUAL_LEVEL3 /
                          MANUAL_LEVEL4 / MANUAL_LEVEL5 / MANUAL_LEVEL6 /
                          MANUAL_LEVEL7 / MANUAL_LEVEL8
                  isActive:
                    type: boolean
                    description: Is timer turned on
                  createdAt:
                    type: string
                    format: date-time
                    description: Timer creation date
                required:
                  - id
                  - name
                  - deviceId
                  - activationTime
                  - setting
                  - isActive
                  - createdAt
      security:
        - JWT: []
        - ApiKey: []
      operationId: updateTimer
      summary: Update timer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Timer name
                activationTime:
                  type: number
                  minimum: 0
                  maximum: 1440
                  description: >-
                    Time when timer is activated. Time in minutes since start of
                    day in local time, e.g. 21:37 is 1297. It can be maximal 1
                    day. If repeatOn field is omitted then it is a non
                    repeatable timer.
                  example: 1297
                repeatOn:
                  type: array
                  items:
                    type: string
                    enum:
                      - Monday
                      - Tuesday
                      - Wednesday
                      - Thursday
                      - Friday
                      - Saturday
                      - Sunday
                  description: >-
                    Days of the week when the timer should be activated. Omit
                    this field if you use non repeatable timers
                  example: *ref_1
                setting:
                  oneOf:
                    - type: string
                      enum:
                        - normal
                        - 'off'
                        - always_heating
                      description: >-
                        Setting for heater timer. Values: normal / off /
                        always_heating
                    - type: string
                      enum:
                        - HARD_OFF
                        - SOFT_OFF
                        - AUTO
                        - SLEEP
                        - BOOST
                        - TURN_ON
                        - MANUAL
                        - MANUAL_LEVEL1
                        - MANUAL_LEVEL2
                        - MANUAL_LEVEL3
                        - MANUAL_LEVEL4
                        - MANUAL_LEVEL5
                        - MANUAL_LEVEL6
                        - MANUAL_LEVEL7
                        - MANUAL_LEVEL8
                      description: >-
                        Setting for purifier timer. Values: HARD_OFF / SOFT_OFF
                        / AUTO / SLEEP / BOOST / TURN_ON / MANUAL /
                        MANUAL_LEVEL1 / MANUAL_LEVEL2 / MANUAL_LEVEL3 /
                        MANUAL_LEVEL4 / MANUAL_LEVEL5 / MANUAL_LEVEL6 /
                        MANUAL_LEVEL7 / MANUAL_LEVEL8
                isActive:
                  type: boolean
                  description: Is timer turned on
    delete:
      tags:
        - device
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                required:
                  - status
      security:
        - JWT: []
        - ApiKey: []
      operationId: deleteTimer
      summary: Delete timer
    parameters:
      - schema:
          type: string
          format: uuid
          description: Device ID
        name: deviceId
        in: path
        required: true
        description: Device ID
      - schema:
          type: string
          description: Timer ID
        name: timerId
        in: path
        required: true
        description: Timer ID
  /devices/{deviceId}/timers/activate:
    post:
      tags:
        - device
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                required:
                  - status
      security:
        - JWT: []
        - ApiKey: []
      description: >-
        Sends a body with non repeatable timers which are active right now to
        device. Deactivates every not chosen timer.
      operationId: activateTimers
      summary: Activate device timers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                timersToActivateIds:
                  type: array
                  items:
                    type: string
                    description: Timer ID
              required:
                - timersToActivateIds
    parameters:
      - schema:
          type: string
          format: uuid
          description: Device ID
        name: deviceId
        in: path
        required: true
        description: Device ID
  /firmwares/download:
    get:
      tags:
        - firmware
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                required:
                  - url
        '404':
          description: Firmware not found
      security:
        - JWT: []
        - ApiKey: []
      operationId: getFirmwareLink
      summary: Get firmware link
      description: Returns download presigned url that allow user to download firmware
      parameters:
        - schema:
            type: string
            format: uuid
            description: Device Type ID
          name: deviceTypeId
          in: query
          style: form
          explode: false
          required: true
          description: Device Type ID
    parameters: []
  /country:
    get:
      tags:
        - country
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        countryName:
                          type: string
                          description: Full name of country
                          example: Norway
                        countryId:
                          type: string
                          description: 2-char ID of country
                          examples: &ref_2
                            - 'NO'
                            - UK
                        countryCode:
                          type: string
                          description: Phone number code of country
                          example: '47'
                      required:
                        - countryName
                        - countryId
                        - countryCode
                required:
                  - items
      security:
        - JWT: []
        - ApiKey: []
      operationId: listCountries
      summary: List countries
    parameters: []
  /country/timezones:
    get:
      tags:
        - country
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        region:
                          type: string
                          example: Europe/London
                        timeShift:
                          type: string
                          examples: *ref_0
                        timezoneOffset:
                          type: string
                          nullable: true
                      required:
                        - region
                        - timeShift
                        - timezoneOffset
                required:
                  - items
      security:
        - JWT: []
        - ApiKey: []
      operationId: listCountryTimezones
      summary: List country timezones
      description: Returns the list of timezones for given country
      parameters:
        - schema:
            type: string
            description: 2-char ID of country
            examples: *ref_2
          name: countryId
          in: query
          style: form
          explode: false
          required: true
          description: 2-char ID of country
    parameters: []
  /country/postal-codes:
    get:
      tags:
        - country
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        postalCode:
                          type: string
                          example: '0001'
                        city:
                          type: string
                          example: OSLO
                        stateCode:
                          type: string
                          example: '0301'
                        stateName:
                          type: string
                          example: OSLO
                        countryId:
                          type: string
                          description: 2-char ID of country
                          examples:
                            - 'NO'
                            - UK
                        countryCode:
                          type: string
                          description: Phone number code of country
                          example: '47'
                      required:
                        - postalCode
                        - city
                        - stateCode
                        - stateName
                        - countryId
                        - countryCode
                required:
                  - items
      security:
        - JWT: []
        - ApiKey: []
      operationId: listPostalCodes
      summary: List country postal codes
      description: >-
        Returns the list of postal codes for given country. For now only Norway
        is accessible.
      parameters:
        - schema:
            type: string
            description: Phone number code of country
            example: '47'
          name: countryCode
          in: query
          style: form
          explode: false
          required: true
          description: Phone number code of country
    parameters: []
  /devices/{deviceId}/statistics:
    post:
      tags:
        - statistics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      timezone:
                        type: string
                        description: Region name which timezone should be used
                        example: Europe/London
                      deviceInfo:
                        type: object
                        properties:
                          deviceId:
                            type: string
                            format: uuid
                            description: Device ID
                          deviceName:
                            type: string
                            nullable: true
                            description: Custom name of the device
                            example: My device
                          isArchived:
                            type: boolean
                            description: Whether the device is archived
                          deviceType:
                            type: object
                            properties:
                              parentType:
                                type: string
                                enum:
                                  - Heaters
                              childType:
                                type: string
                                description: Name of type
                                example: GL-Oil Heater G3
                            required:
                              - parentType
                              - childType
                          totalPower:
                            type: number
                            nullable: true
                          percentage:
                            type: number
                            maximum: 100
                            minimum: 0
                          allDataFlag:
                            type: number
                            minimum: 0
                            maximum: 1
                        required:
                          - deviceId
                          - deviceName
                          - isArchived
                          - deviceType
                          - totalPower
                          - percentage
                          - allDataFlag
                      temperature:
                        type: object
                        properties:
                          items:
                            type: array
                            items:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                          min:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          max:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          now:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          levelMax:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          levelMin:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                        required:
                          - items
                          - min
                          - max
                          - now
                      energyUsage:
                        type: object
                        properties:
                          items:
                            type: array
                            items:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                          min:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          max:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          now:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          levelMax:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          levelMin:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                        required:
                          - items
                          - min
                          - max
                          - now
                    required:
                      - timezone
                      - deviceInfo
                      - temperature
                      - energyUsage
                  - type: object
                    properties:
                      timezone:
                        type: string
                        description: Region name which timezone should be used
                        example: Europe/London
                      deviceInfo:
                        type: object
                        properties:
                          deviceId:
                            type: string
                            format: uuid
                            description: Device ID
                          deviceName:
                            type: string
                            nullable: true
                            description: Custom name of the device
                            example: My device
                          isArchived:
                            type: boolean
                            description: Whether the device is archived
                          deviceType:
                            type: object
                            properties:
                              parentType:
                                type: string
                                enum:
                                  - Air Purifiers
                              childType:
                                type: string
                                description: Name of type
                                example: GL-Oil Heater G3
                            required:
                              - parentType
                              - childType
                          allDataFlag:
                            type: number
                            minimum: 0
                            maximum: 1
                        required:
                          - deviceId
                          - deviceName
                          - isArchived
                          - deviceType
                          - allDataFlag
                      temperature:
                        type: object
                        properties:
                          items:
                            type: array
                            items:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                          min:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          max:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          now:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          levelMax:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          levelMin:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                        required:
                          - items
                          - min
                          - max
                          - now
                      humidity:
                        type: object
                        properties:
                          items:
                            type: array
                            items:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                          min:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          max:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          now:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          levelMax:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          levelMin:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                        required:
                          - items
                          - min
                          - max
                          - now
                      tvoc:
                        type: object
                        properties:
                          items:
                            type: array
                            items:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                          min:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          max:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          now:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          levelMax:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          levelMin:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                        required:
                          - items
                          - min
                          - max
                          - now
                      eco2:
                        type: object
                        properties:
                          items:
                            type: array
                            items:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                          min:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          max:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          now:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          levelMax:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          levelMin:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                        required:
                          - items
                          - min
                          - max
                          - now
                      numberPm_10:
                        type: object
                        properties:
                          items:
                            type: array
                            items:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                          min:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          max:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          now:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          levelMax:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          levelMin:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                        required:
                          - items
                          - min
                          - max
                          - now
                      numberPm_25:
                        type: object
                        properties:
                          items:
                            type: array
                            items:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                          min:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          max:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          now:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          levelMax:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          levelMin:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                        required:
                          - items
                          - min
                          - max
                          - now
                      numberPm_100:
                        type: object
                        properties:
                          items:
                            type: array
                            items:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                          min:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          max:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          now:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          levelMax:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          levelMin:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                        required:
                          - items
                          - min
                          - max
                          - now
                    required:
                      - timezone
                      - deviceInfo
                      - temperature
                      - humidity
                      - tvoc
                      - eco2
                      - numberPm_10
                      - numberPm_25
                      - numberPm_100
                  - type: object
                    properties:
                      timezone:
                        type: string
                        description: Region name which timezone should be used
                        example: Europe/London
                      deviceInfo:
                        type: object
                        properties:
                          deviceId:
                            type: string
                            format: uuid
                            description: Device ID
                          deviceName:
                            type: string
                            nullable: true
                            description: Custom name of the device
                            example: My device
                          isArchived:
                            type: boolean
                            description: Whether the device is archived
                          deviceType:
                            type: object
                            properties:
                              parentType:
                                type: string
                                enum:
                                  - Sensors
                              childType:
                                type: string
                                description: Name of type
                                example: GL-Oil Heater G3
                            required:
                              - parentType
                              - childType
                          allDataFlag:
                            type: number
                            minimum: 0
                            maximum: 1
                        required:
                          - deviceId
                          - deviceName
                          - isArchived
                          - deviceType
                          - allDataFlag
                      temperature:
                        type: object
                        properties:
                          items:
                            type: array
                            items:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                          min:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          max:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          now:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          levelMax:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          levelMin:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                        required:
                          - items
                          - min
                          - max
                          - now
                      humidity:
                        type: object
                        properties:
                          items:
                            type: array
                            items:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                          min:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          max:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          now:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          levelMax:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          levelMin:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                        required:
                          - items
                          - min
                          - max
                          - now
                      tvoc:
                        type: object
                        properties:
                          items:
                            type: array
                            items:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                          min:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          max:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          now:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          levelMax:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          levelMin:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                        required:
                          - items
                          - min
                          - max
                          - now
                      eco2:
                        type: object
                        properties:
                          items:
                            type: array
                            items:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                          min:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          max:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          now:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          levelMax:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                          levelMin:
                            type: object
                            properties:
                              startTimestamp:
                                type: number
                              endTimestamp:
                                type: number
                              startPeriod:
                                type: string
                              endPeriod:
                                type: string
                              value:
                                type: number
                              lostStatisticData:
                                type: boolean
                              level:
                                type: number
                                minimum: 0
                                exclusiveMinimum: true
                            required:
                              - startTimestamp
                              - endTimestamp
                              - startPeriod
                              - endPeriod
                              - value
                              - lostStatisticData
                        required:
                          - items
                          - min
                          - max
                          - now
                    required:
                      - timezone
                      - deviceInfo
                      - temperature
                      - humidity
                      - tvoc
                      - eco2
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DeviceTypeMismatchError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DeviceNotFoundError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
      operationId: getSingleDeviceStatistics
      summary: Get single device statistics
      description: Returns statistics statistics for requested device
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                period:
                  type: string
                  enum:
                    - hourly
                    - daily
                    - monthly
                year:
                  type: number
                  minimum: 2015
                  exclusiveMinimum: true
                  maximum: 2100
                  exclusiveMaximum: true
                month:
                  type: number
                  minimum: 0
                  exclusiveMinimum: true
                  maximum: 12
                day:
                  type: number
                  minimum: 0
                  exclusiveMinimum: true
                  maximum: 31
              required:
                - period
    parameters:
      - schema:
          type: string
          format: uuid
          description: Device ID
        name: deviceId
        in: path
        required: true
        description: Device ID
  /rooms/{roomId}/statistics:
    post:
      tags:
        - statistics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  roomId:
                    type: string
                    description: Room ID
                    example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
                  roomName:
                    type: string
                    description: Room name
                    example: Living room
                  timezone:
                    type: string
                    description: Region name which timezone should be used
                    example: Europe/London
                  valueTotal:
                    type: number
                    description: Total energy consumption of current room. In Whs
                  percent:
                    type: number
                    minimum: 0
                    maximum: 100
                    description: >-
                      Percentage of total consumption energy in house. Here will
                      be always 100
                  allDataFlag:
                    type: number
                    minimum: 0
                    maximum: 1
                  isSensorAttached:
                    type: boolean
                  temperature:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            startTimestamp:
                              type: number
                            endTimestamp:
                              type: number
                            startPeriod:
                              type: string
                            endPeriod:
                              type: string
                            value:
                              type: number
                            lostStatisticData:
                              type: boolean
                            level:
                              type: number
                              minimum: 0
                              exclusiveMinimum: true
                          required:
                            - startTimestamp
                            - endTimestamp
                            - startPeriod
                            - endPeriod
                            - value
                            - lostStatisticData
                      min:
                        type: object
                        properties:
                          startTimestamp:
                            type: number
                          endTimestamp:
                            type: number
                          startPeriod:
                            type: string
                          endPeriod:
                            type: string
                          value:
                            type: number
                          lostStatisticData:
                            type: boolean
                          level:
                            type: number
                            minimum: 0
                            exclusiveMinimum: true
                        required:
                          - startTimestamp
                          - endTimestamp
                          - startPeriod
                          - endPeriod
                          - value
                          - lostStatisticData
                      max:
                        type: object
                        properties:
                          startTimestamp:
                            type: number
                          endTimestamp:
                            type: number
                          startPeriod:
                            type: string
                          endPeriod:
                            type: string
                          value:
                            type: number
                          lostStatisticData:
                            type: boolean
                          level:
                            type: number
                            minimum: 0
                            exclusiveMinimum: true
                        required:
                          - startTimestamp
                          - endTimestamp
                          - startPeriod
                          - endPeriod
                          - value
                          - lostStatisticData
                      now:
                        type: object
                        properties:
                          startTimestamp:
                            type: number
                          endTimestamp:
                            type: number
                          startPeriod:
                            type: string
                          endPeriod:
                            type: string
                          value:
                            type: number
                          lostStatisticData:
                            type: boolean
                          level:
                            type: number
                            minimum: 0
                            exclusiveMinimum: true
                        required:
                          - startTimestamp
                          - endTimestamp
                          - startPeriod
                          - endPeriod
                          - value
                          - lostStatisticData
                      levelMax:
                        type: object
                        properties:
                          startTimestamp:
                            type: number
                          endTimestamp:
                            type: number
                          startPeriod:
                            type: string
                          endPeriod:
                            type: string
                          value:
                            type: number
                          lostStatisticData:
                            type: boolean
                          level:
                            type: number
                            minimum: 0
                            exclusiveMinimum: true
                        required:
                          - startTimestamp
                          - endTimestamp
                          - startPeriod
                          - endPeriod
                          - value
                          - lostStatisticData
                      levelMin:
                        type: object
                        properties:
                          startTimestamp:
                            type: number
                          endTimestamp:
                            type: number
                          startPeriod:
                            type: string
                          endPeriod:
                            type: string
                          value:
                            type: number
                          lostStatisticData:
                            type: boolean
                          level:
                            type: number
                            minimum: 0
                            exclusiveMinimum: true
                        required:
                          - startTimestamp
                          - endTimestamp
                          - startPeriod
                          - endPeriod
                          - value
                          - lostStatisticData
                    required:
                      - items
                      - min
                      - max
                      - now
                  energyUsage:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            startTimestamp:
                              type: number
                            endTimestamp:
                              type: number
                            startPeriod:
                              type: string
                            endPeriod:
                              type: string
                            value:
                              type: number
                            lostStatisticData:
                              type: boolean
                            level:
                              type: number
                              minimum: 0
                              exclusiveMinimum: true
                          required:
                            - startTimestamp
                            - endTimestamp
                            - startPeriod
                            - endPeriod
                            - value
                            - lostStatisticData
                      min:
                        type: object
                        properties:
                          startTimestamp:
                            type: number
                          endTimestamp:
                            type: number
                          startPeriod:
                            type: string
                          endPeriod:
                            type: string
                          value:
                            type: number
                          lostStatisticData:
                            type: boolean
                          level:
                            type: number
                            minimum: 0
                            exclusiveMinimum: true
                        required:
                          - startTimestamp
                          - endTimestamp
                          - startPeriod
                          - endPeriod
                          - value
                          - lostStatisticData
                      max:
                        type: object
                        properties:
                          startTimestamp:
                            type: number
                          endTimestamp:
                            type: number
                          startPeriod:
                            type: string
                          endPeriod:
                            type: string
                          value:
                            type: number
                          lostStatisticData:
                            type: boolean
                          level:
                            type: number
                            minimum: 0
                            exclusiveMinimum: true
                        required:
                          - startTimestamp
                          - endTimestamp
                          - startPeriod
                          - endPeriod
                          - value
                          - lostStatisticData
                      now:
                        type: object
                        properties:
                          startTimestamp:
                            type: number
                          endTimestamp:
                            type: number
                          startPeriod:
                            type: string
                          endPeriod:
                            type: string
                          value:
                            type: number
                          lostStatisticData:
                            type: boolean
                          level:
                            type: number
                            minimum: 0
                            exclusiveMinimum: true
                        required:
                          - startTimestamp
                          - endTimestamp
                          - startPeriod
                          - endPeriod
                          - value
                          - lostStatisticData
                      levelMax:
                        type: object
                        properties:
                          startTimestamp:
                            type: number
                          endTimestamp:
                            type: number
                          startPeriod:
                            type: string
                          endPeriod:
                            type: string
                          value:
                            type: number
                          lostStatisticData:
                            type: boolean
                          level:
                            type: number
                            minimum: 0
                            exclusiveMinimum: true
                        required:
                          - startTimestamp
                          - endTimestamp
                          - startPeriod
                          - endPeriod
                          - value
                          - lostStatisticData
                      levelMin:
                        type: object
                        properties:
                          startTimestamp:
                            type: number
                          endTimestamp:
                            type: number
                          startPeriod:
                            type: string
                          endPeriod:
                            type: string
                          value:
                            type: number
                          lostStatisticData:
                            type: boolean
                          level:
                            type: number
                            minimum: 0
                            exclusiveMinimum: true
                        required:
                          - startTimestamp
                          - endTimestamp
                          - startPeriod
                          - endPeriod
                          - value
                          - lostStatisticData
                    required:
                      - items
                      - min
                      - max
                      - now
                  humidity:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            startTimestamp:
                              type: number
                            endTimestamp:
                              type: number
                            startPeriod:
                              type: string
                            endPeriod:
                              type: string
                            value:
                              type: number
                            lostStatisticData:
                              type: boolean
                            level:
                              type: number
                              minimum: 0
                              exclusiveMinimum: true
                          required:
                            - startTimestamp
                            - endTimestamp
                            - startPeriod
                            - endPeriod
                            - value
                            - lostStatisticData
                      min:
                        type: object
                        properties:
                          startTimestamp:
                            type: number
                          endTimestamp:
                            type: number
                          startPeriod:
                            type: string
                          endPeriod:
                            type: string
                          value:
                            type: number
                          lostStatisticData:
                            type: boolean
                          level:
                            type: number
                            minimum: 0
                            exclusiveMinimum: true
                        required:
                          - startTimestamp
                          - endTimestamp
                          - startPeriod
                          - endPeriod
                          - value
                          - lostStatisticData
                      max:
                        type: object
                        properties:
                          startTimestamp:
                            type: number
                          endTimestamp:
                            type: number
                          startPeriod:
                            type: string
                          endPeriod:
                            type: string
                          value:
                            type: number
                          lostStatisticData:
                            type: boolean
                          level:
                            type: number
                            minimum: 0
                            exclusiveMinimum: true
                        required:
                          - startTimestamp
                          - endTimestamp
                          - startPeriod
                          - endPeriod
                          - value
                          - lostStatisticData
                      now:
                        type: object
                        properties:
                          startTimestamp:
                            type: number
                          endTimestamp:
                            type: number
                          startPeriod:
                            type: string
                          endPeriod:
                            type: string
                          value:
                            type: number
                          lostStatisticData:
                            type: boolean
                          level:
                            type: number
                            minimum: 0
                            exclusiveMinimum: true
                        required:
                          - startTimestamp
                          - endTimestamp
                          - startPeriod
                          - endPeriod
                          - value
                          - lostStatisticData
                      levelMax:
                        type: object
                        properties:
                          startTimestamp:
                            type: number
                          endTimestamp:
                            type: number
                          startPeriod:
                            type: string
                          endPeriod:
                            type: string
                          value:
                            type: number
                          lostStatisticData:
                            type: boolean
                          level:
                            type: number
                            minimum: 0
                            exclusiveMinimum: true
                        required:
                          - startTimestamp
                          - endTimestamp
                          - startPeriod
                          - endPeriod
                          - value
                          - lostStatisticData
                      levelMin:
                        type: object
                        properties:
                          startTimestamp:
                            type: number
                          endTimestamp:
                            type: number
                          startPeriod:
                            type: string
                          endPeriod:
                            type: string
                          value:
                            type: number
                          lostStatisticData:
                            type: boolean
                          level:
                            type: number
                            minimum: 0
                            exclusiveMinimum: true
                        required:
                          - startTimestamp
                          - endTimestamp
                          - startPeriod
                          - endPeriod
                          - value
                          - lostStatisticData
                    required:
                      - items
                      - min
                      - max
                      - now
                  eco2:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            startTimestamp:
                              type: number
                            endTimestamp:
                              type: number
                            startPeriod:
                              type: string
                            endPeriod:
                              type: string
                            value:
                              type: number
                            lostStatisticData:
                              type: boolean
                            level:
                              type: number
                              minimum: 0
                              exclusiveMinimum: true
                          required:
                            - startTimestamp
                            - endTimestamp
                            - startPeriod
                            - endPeriod
                            - value
                            - lostStatisticData
                      min:
                        type: object
                        properties:
                          startTimestamp:
                            type: number
                          endTimestamp:
                            type: number
                          startPeriod:
                            type: string
                          endPeriod:
                            type: string
                          value:
                            type: number
                          lostStatisticData:
                            type: boolean
                          level:
                            type: number
                            minimum: 0
                            exclusiveMinimum: true
                        required:
                          - startTimestamp
                          - endTimestamp
                          - startPeriod
                          - endPeriod
                          - value
                          - lostStatisticData
                      max:
                        type: object
                        properties:
                          startTimestamp:
                            type: number
                          endTimestamp:
                            type: number
                          startPeriod:
                            type: string
                          endPeriod:
                            type: string
                          value:
                            type: number
                          lostStatisticData:
                            type: boolean
                          level:
                            type: number
                            minimum: 0
                            exclusiveMinimum: true
                        required:
                          - startTimestamp
                          - endTimestamp
                          - startPeriod
                          - endPeriod
                          - value
                          - lostStatisticData
                      now:
                        type: object
                        properties:
                          startTimestamp:
                            type: number
                          endTimestamp:
                            type: number
                          startPeriod:
                            type: string
                          endPeriod:
                            type: string
                          value:
                            type: number
                          lostStatisticData:
                            type: boolean
                          level:
                            type: number
                            minimum: 0
                            exclusiveMinimum: true
                        required:
                          - startTimestamp
                          - endTimestamp
                          - startPeriod
                          - endPeriod
                          - value
                          - lostStatisticData
                      levelMax:
                        type: object
                        properties:
                          startTimestamp:
                            type: number
                          endTimestamp:
                            type: number
                          startPeriod:
                            type: string
                          endPeriod:
                            type: string
                          value:
                            type: number
                          lostStatisticData:
                            type: boolean
                          level:
                            type: number
                            minimum: 0
                            exclusiveMinimum: true
                        required:
                          - startTimestamp
                          - endTimestamp
                          - startPeriod
                          - endPeriod
                          - value
                          - lostStatisticData
                      levelMin:
                        type: object
                        properties:
                          startTimestamp:
                            type: number
                          endTimestamp:
                            type: number
                          startPeriod:
                            type: string
                          endPeriod:
                            type: string
                          value:
                            type: number
                          lostStatisticData:
                            type: boolean
                          level:
                            type: number
                            minimum: 0
                            exclusiveMinimum: true
                        required:
                          - startTimestamp
                          - endTimestamp
                          - startPeriod
                          - endPeriod
                          - value
                          - lostStatisticData
                    required:
                      - items
                      - min
                      - max
                      - now
                  tvoc:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            startTimestamp:
                              type: number
                            endTimestamp:
                              type: number
                            startPeriod:
                              type: string
                            endPeriod:
                              type: string
                            value:
                              type: number
                            lostStatisticData:
                              type: boolean
                            level:
                              type: number
                              minimum: 0
                              exclusiveMinimum: true
                          required:
                            - startTimestamp
                            - endTimestamp
                            - startPeriod
                            - endPeriod
                            - value
                            - lostStatisticData
                      min:
                        type: object
                        properties:
                          startTimestamp:
                            type: number
                          endTimestamp:
                            type: number
                          startPeriod:
                            type: string
                          endPeriod:
                            type: string
                          value:
                            type: number
                          lostStatisticData:
                            type: boolean
                          level:
                            type: number
                            minimum: 0
                            exclusiveMinimum: true
                        required:
                          - startTimestamp
                          - endTimestamp
                          - startPeriod
                          - endPeriod
                          - value
                          - lostStatisticData
                      max:
                        type: object
                        properties:
                          startTimestamp:
                            type: number
                          endTimestamp:
                            type: number
                          startPeriod:
                            type: string
                          endPeriod:
                            type: string
                          value:
                            type: number
                          lostStatisticData:
                            type: boolean
                          level:
                            type: number
                            minimum: 0
                            exclusiveMinimum: true
                        required:
                          - startTimestamp
                          - endTimestamp
                          - startPeriod
                          - endPeriod
                          - value
                          - lostStatisticData
                      now:
                        type: object
                        properties:
                          startTimestamp:
                            type: number
                          endTimestamp:
                            type: number
                          startPeriod:
                            type: string
                          endPeriod:
                            type: string
                          value:
                            type: number
                          lostStatisticData:
                            type: boolean
                          level:
                            type: number
                            minimum: 0
                            exclusiveMinimum: true
                        required:
                          - startTimestamp
                          - endTimestamp
                          - startPeriod
                          - endPeriod
                          - value
                          - lostStatisticData
                      levelMax:
                        type: object
                        properties:
                          startTimestamp:
                            type: number
                          endTimestamp:
                            type: number
                          startPeriod:
                            type: string
                          endPeriod:
                            type: string
                          value:
                            type: number
                          lostStatisticData:
                            type: boolean
                          level:
                            type: number
                            minimum: 0
                            exclusiveMinimum: true
                        required:
                          - startTimestamp
                          - endTimestamp
                          - startPeriod
                          - endPeriod
                          - value
                          - lostStatisticData
                      levelMin:
                        type: object
                        properties:
                          startTimestamp:
                            type: number
                          endTimestamp:
                            type: number
                          startPeriod:
                            type: string
                          endPeriod:
                            type: string
                          value:
                            type: number
                          lostStatisticData:
                            type: boolean
                          level:
                            type: number
                            minimum: 0
                            exclusiveMinimum: true
                        required:
                          - startTimestamp
                          - endTimestamp
                          - startPeriod
                          - endPeriod
                          - value
                          - lostStatisticData
                    required:
                      - items
                      - min
                      - max
                      - now
                  deviceList:
                    type: array
                    items:
                      type: object
                      properties:
                        deviceInfo:
                          type: object
                          properties:
                            deviceId:
                              type: string
                              format: uuid
                              description: Device ID
                            deviceName:
                              type: string
                              nullable: true
                              description: Custom name of the device
                              example: My device
                            isArchived:
                              type: boolean
                              description: Whether the device is archived
                            totalPower:
                              type: number
                            percentage:
                              type: number
                              maximum: 100
                              minimum: 0
                            allDataFlag:
                              type: number
                              minimum: 0
                              maximum: 1
                          required:
                            - deviceId
                            - deviceName
                            - isArchived
                            - totalPower
                            - percentage
                            - allDataFlag
                        temperature:
                          type: object
                          properties:
                            items:
                              type: array
                              items:
                                type: object
                                properties:
                                  startTimestamp:
                                    type: number
                                  endTimestamp:
                                    type: number
                                  startPeriod:
                                    type: string
                                  endPeriod:
                                    type: string
                                  value:
                                    type: number
                                  lostStatisticData:
                                    type: boolean
                                  level:
                                    type: number
                                    minimum: 0
                                    exclusiveMinimum: true
                                required:
                                  - startTimestamp
                                  - endTimestamp
                                  - startPeriod
                                  - endPeriod
                                  - value
                                  - lostStatisticData
                            min:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                            max:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                            now:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                            levelMax:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                            levelMin:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                          required:
                            - items
                            - min
                            - max
                            - now
                        energyUsage:
                          type: object
                          properties:
                            items:
                              type: array
                              items:
                                type: object
                                properties:
                                  startTimestamp:
                                    type: number
                                  endTimestamp:
                                    type: number
                                  startPeriod:
                                    type: string
                                  endPeriod:
                                    type: string
                                  value:
                                    type: number
                                  lostStatisticData:
                                    type: boolean
                                  level:
                                    type: number
                                    minimum: 0
                                    exclusiveMinimum: true
                                required:
                                  - startTimestamp
                                  - endTimestamp
                                  - startPeriod
                                  - endPeriod
                                  - value
                                  - lostStatisticData
                            min:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                            max:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                            now:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                            levelMax:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                            levelMin:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                          required:
                            - items
                            - min
                            - max
                            - now
                      required:
                        - deviceInfo
                        - temperature
                        - energyUsage
                required:
                  - roomId
                  - roomName
                  - timezone
                  - valueTotal
                  - percent
                  - allDataFlag
                  - isSensorAttached
                  - temperature
                  - energyUsage
                  - deviceList
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DeviceTypeMismatchError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
      operationId: getRoomDevicesStatistics
      summary: Get room device statistics
      description: >-
        Returns general statistics for requested room and separate ones for each
        heater inside room
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                period:
                  type: string
                  enum:
                    - hourly
                    - daily
                    - monthly
                year:
                  type: number
                  minimum: 2015
                  exclusiveMinimum: true
                  maximum: 2100
                  exclusiveMaximum: true
                month:
                  type: number
                  minimum: 0
                  exclusiveMinimum: true
                  maximum: 12
                day:
                  type: number
                  minimum: 0
                  exclusiveMinimum: true
                  maximum: 31
              required:
                - period
    parameters:
      - schema:
          type: string
          description: Room ID
          example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
        name: roomId
        in: path
        required: true
        description: Room ID
  /houses/{houseId}/statistics':
    post:
      tags:
        - statistics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  houseId:
                    type: string
                    description: House ID
                    example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                  houseName:
                    type: string
                    description: House name
                    example: Home
                  timezone:
                    type: string
                    description: Region name which timezone should be used
                    example: Europe/London
                  valueTotal:
                    type: number
                    description: Total energy consumption of current house. In Whs
                  allDataFlag:
                    type: number
                    minimum: 0
                    maximum: 1
                  energyUsage:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            startTimestamp:
                              type: number
                            endTimestamp:
                              type: number
                            startPeriod:
                              type: string
                            endPeriod:
                              type: string
                            value:
                              type: number
                            lostStatisticData:
                              type: boolean
                            level:
                              type: number
                              minimum: 0
                              exclusiveMinimum: true
                          required:
                            - startTimestamp
                            - endTimestamp
                            - startPeriod
                            - endPeriod
                            - value
                            - lostStatisticData
                      min:
                        type: object
                        properties:
                          startTimestamp:
                            type: number
                          endTimestamp:
                            type: number
                          startPeriod:
                            type: string
                          endPeriod:
                            type: string
                          value:
                            type: number
                          lostStatisticData:
                            type: boolean
                          level:
                            type: number
                            minimum: 0
                            exclusiveMinimum: true
                        required:
                          - startTimestamp
                          - endTimestamp
                          - startPeriod
                          - endPeriod
                          - value
                          - lostStatisticData
                      max:
                        type: object
                        properties:
                          startTimestamp:
                            type: number
                          endTimestamp:
                            type: number
                          startPeriod:
                            type: string
                          endPeriod:
                            type: string
                          value:
                            type: number
                          lostStatisticData:
                            type: boolean
                          level:
                            type: number
                            minimum: 0
                            exclusiveMinimum: true
                        required:
                          - startTimestamp
                          - endTimestamp
                          - startPeriod
                          - endPeriod
                          - value
                          - lostStatisticData
                      now:
                        type: object
                        properties:
                          startTimestamp:
                            type: number
                          endTimestamp:
                            type: number
                          startPeriod:
                            type: string
                          endPeriod:
                            type: string
                          value:
                            type: number
                          lostStatisticData:
                            type: boolean
                          level:
                            type: number
                            minimum: 0
                            exclusiveMinimum: true
                        required:
                          - startTimestamp
                          - endTimestamp
                          - startPeriod
                          - endPeriod
                          - value
                          - lostStatisticData
                      levelMax:
                        type: object
                        properties:
                          startTimestamp:
                            type: number
                          endTimestamp:
                            type: number
                          startPeriod:
                            type: string
                          endPeriod:
                            type: string
                          value:
                            type: number
                          lostStatisticData:
                            type: boolean
                          level:
                            type: number
                            minimum: 0
                            exclusiveMinimum: true
                        required:
                          - startTimestamp
                          - endTimestamp
                          - startPeriod
                          - endPeriod
                          - value
                          - lostStatisticData
                      levelMin:
                        type: object
                        properties:
                          startTimestamp:
                            type: number
                          endTimestamp:
                            type: number
                          startPeriod:
                            type: string
                          endPeriod:
                            type: string
                          value:
                            type: number
                          lostStatisticData:
                            type: boolean
                          level:
                            type: number
                            minimum: 0
                            exclusiveMinimum: true
                        required:
                          - startTimestamp
                          - endTimestamp
                          - startPeriod
                          - endPeriod
                          - value
                          - lostStatisticData
                    required:
                      - items
                      - min
                      - max
                      - now
                  roomList:
                    type: array
                    items:
                      type: object
                      properties:
                        roomId:
                          type: string
                          description: Room ID
                          example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
                        roomName:
                          type: string
                          description: Room name
                          example: Living room
                        valueTotal:
                          type: number
                          description: Total energy consumption of current room. In Whs
                        percent:
                          type: number
                          minimum: 0
                          maximum: 100
                          description: >-
                            Percentage of total consumption energy in house.
                            Here will be always 100
                        allDataFlag:
                          type: number
                          minimum: 0
                          maximum: 1
                        isSensorAttached:
                          type: boolean
                        temperature:
                          type: object
                          properties:
                            items:
                              type: array
                              items:
                                type: object
                                properties:
                                  startTimestamp:
                                    type: number
                                  endTimestamp:
                                    type: number
                                  startPeriod:
                                    type: string
                                  endPeriod:
                                    type: string
                                  value:
                                    type: number
                                  lostStatisticData:
                                    type: boolean
                                  level:
                                    type: number
                                    minimum: 0
                                    exclusiveMinimum: true
                                required:
                                  - startTimestamp
                                  - endTimestamp
                                  - startPeriod
                                  - endPeriod
                                  - value
                                  - lostStatisticData
                            min:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                            max:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                            now:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                            levelMax:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                            levelMin:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                          required:
                            - items
                            - min
                            - max
                            - now
                        energyUsage:
                          type: object
                          properties:
                            items:
                              type: array
                              items:
                                type: object
                                properties:
                                  startTimestamp:
                                    type: number
                                  endTimestamp:
                                    type: number
                                  startPeriod:
                                    type: string
                                  endPeriod:
                                    type: string
                                  value:
                                    type: number
                                  lostStatisticData:
                                    type: boolean
                                  level:
                                    type: number
                                    minimum: 0
                                    exclusiveMinimum: true
                                required:
                                  - startTimestamp
                                  - endTimestamp
                                  - startPeriod
                                  - endPeriod
                                  - value
                                  - lostStatisticData
                            min:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                            max:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                            now:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                            levelMax:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                            levelMin:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                          required:
                            - items
                            - min
                            - max
                            - now
                        humidity:
                          type: object
                          properties:
                            items:
                              type: array
                              items:
                                type: object
                                properties:
                                  startTimestamp:
                                    type: number
                                  endTimestamp:
                                    type: number
                                  startPeriod:
                                    type: string
                                  endPeriod:
                                    type: string
                                  value:
                                    type: number
                                  lostStatisticData:
                                    type: boolean
                                  level:
                                    type: number
                                    minimum: 0
                                    exclusiveMinimum: true
                                required:
                                  - startTimestamp
                                  - endTimestamp
                                  - startPeriod
                                  - endPeriod
                                  - value
                                  - lostStatisticData
                            min:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                            max:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                            now:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                            levelMax:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                            levelMin:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                          required:
                            - items
                            - min
                            - max
                            - now
                        eco2:
                          type: object
                          properties:
                            items:
                              type: array
                              items:
                                type: object
                                properties:
                                  startTimestamp:
                                    type: number
                                  endTimestamp:
                                    type: number
                                  startPeriod:
                                    type: string
                                  endPeriod:
                                    type: string
                                  value:
                                    type: number
                                  lostStatisticData:
                                    type: boolean
                                  level:
                                    type: number
                                    minimum: 0
                                    exclusiveMinimum: true
                                required:
                                  - startTimestamp
                                  - endTimestamp
                                  - startPeriod
                                  - endPeriod
                                  - value
                                  - lostStatisticData
                            min:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                            max:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                            now:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                            levelMax:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                            levelMin:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                          required:
                            - items
                            - min
                            - max
                            - now
                        tvoc:
                          type: object
                          properties:
                            items:
                              type: array
                              items:
                                type: object
                                properties:
                                  startTimestamp:
                                    type: number
                                  endTimestamp:
                                    type: number
                                  startPeriod:
                                    type: string
                                  endPeriod:
                                    type: string
                                  value:
                                    type: number
                                  lostStatisticData:
                                    type: boolean
                                  level:
                                    type: number
                                    minimum: 0
                                    exclusiveMinimum: true
                                required:
                                  - startTimestamp
                                  - endTimestamp
                                  - startPeriod
                                  - endPeriod
                                  - value
                                  - lostStatisticData
                            min:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                            max:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                            now:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                            levelMax:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                            levelMin:
                              type: object
                              properties:
                                startTimestamp:
                                  type: number
                                endTimestamp:
                                  type: number
                                startPeriod:
                                  type: string
                                endPeriod:
                                  type: string
                                value:
                                  type: number
                                lostStatisticData:
                                  type: boolean
                                level:
                                  type: number
                                  minimum: 0
                                  exclusiveMinimum: true
                              required:
                                - startTimestamp
                                - endTimestamp
                                - startPeriod
                                - endPeriod
                                - value
                                - lostStatisticData
                          required:
                            - items
                            - min
                            - max
                            - now
                      required:
                        - roomId
                        - roomName
                        - valueTotal
                        - percent
                        - allDataFlag
                        - isSensorAttached
                        - temperature
                        - energyUsage
                  deviceList:
                    type: array
                    items:
                      oneOf:
                        - type: object
                          properties:
                            deviceInfo:
                              type: object
                              properties:
                                deviceId:
                                  type: string
                                  format: uuid
                                  description: Device ID
                                deviceName:
                                  type: string
                                  nullable: true
                                  description: Custom name of the device
                                  example: My device
                                isArchived:
                                  type: boolean
                                  description: Whether the device is archived
                                isIndependent:
                                  type: boolean
                                roomId:
                                  type: string
                                  description: Room ID where the device is located
                                  example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
                                  nullable: true
                                deviceType:
                                  type: object
                                  properties:
                                    parentType:
                                      type: string
                                      description: Name of type
                                      example: GL-Oil Heater G3
                                    childType:
                                      type: string
                                      description: Name of type
                                      example: GL-Oil Heater G3
                                  required:
                                    - parentType
                                    - childType
                                totalPower:
                                  type: number
                                  nullable: true
                                percentage:
                                  type: number
                                  maximum: 100
                                  minimum: 0
                                allDataFlag:
                                  type: number
                                  minimum: 0
                                  maximum: 1
                              required:
                                - deviceId
                                - deviceName
                                - isArchived
                                - isIndependent
                                - roomId
                                - deviceType
                                - totalPower
                                - percentage
                                - allDataFlag
                            temperature:
                              type: object
                              properties:
                                items:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      startTimestamp:
                                        type: number
                                      endTimestamp:
                                        type: number
                                      startPeriod:
                                        type: string
                                      endPeriod:
                                        type: string
                                      value:
                                        type: number
                                      lostStatisticData:
                                        type: boolean
                                      level:
                                        type: number
                                        minimum: 0
                                        exclusiveMinimum: true
                                    required:
                                      - startTimestamp
                                      - endTimestamp
                                      - startPeriod
                                      - endPeriod
                                      - value
                                      - lostStatisticData
                                min:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                max:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                now:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                levelMax:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                levelMin:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                              required:
                                - items
                                - min
                                - max
                                - now
                            energyUsage:
                              type: object
                              properties:
                                items:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      startTimestamp:
                                        type: number
                                      endTimestamp:
                                        type: number
                                      startPeriod:
                                        type: string
                                      endPeriod:
                                        type: string
                                      value:
                                        type: number
                                      lostStatisticData:
                                        type: boolean
                                      level:
                                        type: number
                                        minimum: 0
                                        exclusiveMinimum: true
                                    required:
                                      - startTimestamp
                                      - endTimestamp
                                      - startPeriod
                                      - endPeriod
                                      - value
                                      - lostStatisticData
                                min:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                max:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                now:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                levelMax:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                levelMin:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                              required:
                                - items
                                - min
                                - max
                                - now
                          required:
                            - deviceInfo
                            - temperature
                            - energyUsage
                        - type: object
                          properties:
                            deviceInfo:
                              type: object
                              properties:
                                deviceId:
                                  type: string
                                  format: uuid
                                  description: Device ID
                                deviceName:
                                  type: string
                                  nullable: true
                                  description: Custom name of the device
                                  example: My device
                                deviceType:
                                  type: object
                                  properties:
                                    parentType:
                                      type: string
                                      enum:
                                        - Air Purifiers
                                    childType:
                                      type: string
                                      description: Name of type
                                      example: GL-Oil Heater G3
                                  required:
                                    - parentType
                                    - childType
                                isArchived:
                                  type: boolean
                                  description: Whether the device is archived
                                allDataFlag:
                                  type: number
                                  minimum: 0
                                  maximum: 1
                              required:
                                - deviceId
                                - deviceName
                                - deviceType
                                - isArchived
                                - allDataFlag
                            temperature:
                              type: object
                              properties:
                                items:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      startTimestamp:
                                        type: number
                                      endTimestamp:
                                        type: number
                                      startPeriod:
                                        type: string
                                      endPeriod:
                                        type: string
                                      value:
                                        type: number
                                      lostStatisticData:
                                        type: boolean
                                      level:
                                        type: number
                                        minimum: 0
                                        exclusiveMinimum: true
                                    required:
                                      - startTimestamp
                                      - endTimestamp
                                      - startPeriod
                                      - endPeriod
                                      - value
                                      - lostStatisticData
                                min:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                max:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                now:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                levelMax:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                levelMin:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                              required:
                                - items
                                - min
                                - max
                                - now
                            humidity:
                              type: object
                              properties:
                                items:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      startTimestamp:
                                        type: number
                                      endTimestamp:
                                        type: number
                                      startPeriod:
                                        type: string
                                      endPeriod:
                                        type: string
                                      value:
                                        type: number
                                      lostStatisticData:
                                        type: boolean
                                      level:
                                        type: number
                                        minimum: 0
                                        exclusiveMinimum: true
                                    required:
                                      - startTimestamp
                                      - endTimestamp
                                      - startPeriod
                                      - endPeriod
                                      - value
                                      - lostStatisticData
                                min:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                max:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                now:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                levelMax:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                levelMin:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                              required:
                                - items
                                - min
                                - max
                                - now
                            tvoc:
                              type: object
                              properties:
                                items:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      startTimestamp:
                                        type: number
                                      endTimestamp:
                                        type: number
                                      startPeriod:
                                        type: string
                                      endPeriod:
                                        type: string
                                      value:
                                        type: number
                                      lostStatisticData:
                                        type: boolean
                                      level:
                                        type: number
                                        minimum: 0
                                        exclusiveMinimum: true
                                    required:
                                      - startTimestamp
                                      - endTimestamp
                                      - startPeriod
                                      - endPeriod
                                      - value
                                      - lostStatisticData
                                min:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                max:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                now:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                levelMax:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                levelMin:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                              required:
                                - items
                                - min
                                - max
                                - now
                            eco2:
                              type: object
                              properties:
                                items:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      startTimestamp:
                                        type: number
                                      endTimestamp:
                                        type: number
                                      startPeriod:
                                        type: string
                                      endPeriod:
                                        type: string
                                      value:
                                        type: number
                                      lostStatisticData:
                                        type: boolean
                                      level:
                                        type: number
                                        minimum: 0
                                        exclusiveMinimum: true
                                    required:
                                      - startTimestamp
                                      - endTimestamp
                                      - startPeriod
                                      - endPeriod
                                      - value
                                      - lostStatisticData
                                min:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                max:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                now:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                levelMax:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                levelMin:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                              required:
                                - items
                                - min
                                - max
                                - now
                            numberPm_10:
                              type: object
                              properties:
                                items:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      startTimestamp:
                                        type: number
                                      endTimestamp:
                                        type: number
                                      startPeriod:
                                        type: string
                                      endPeriod:
                                        type: string
                                      value:
                                        type: number
                                      lostStatisticData:
                                        type: boolean
                                      level:
                                        type: number
                                        minimum: 0
                                        exclusiveMinimum: true
                                    required:
                                      - startTimestamp
                                      - endTimestamp
                                      - startPeriod
                                      - endPeriod
                                      - value
                                      - lostStatisticData
                                min:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                max:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                now:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                levelMax:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                levelMin:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                              required:
                                - items
                                - min
                                - max
                                - now
                            numberPm_25:
                              type: object
                              properties:
                                items:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      startTimestamp:
                                        type: number
                                      endTimestamp:
                                        type: number
                                      startPeriod:
                                        type: string
                                      endPeriod:
                                        type: string
                                      value:
                                        type: number
                                      lostStatisticData:
                                        type: boolean
                                      level:
                                        type: number
                                        minimum: 0
                                        exclusiveMinimum: true
                                    required:
                                      - startTimestamp
                                      - endTimestamp
                                      - startPeriod
                                      - endPeriod
                                      - value
                                      - lostStatisticData
                                min:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                max:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                now:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                levelMax:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                levelMin:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                              required:
                                - items
                                - min
                                - max
                                - now
                            numberPm_100:
                              type: object
                              properties:
                                items:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      startTimestamp:
                                        type: number
                                      endTimestamp:
                                        type: number
                                      startPeriod:
                                        type: string
                                      endPeriod:
                                        type: string
                                      value:
                                        type: number
                                      lostStatisticData:
                                        type: boolean
                                      level:
                                        type: number
                                        minimum: 0
                                        exclusiveMinimum: true
                                    required:
                                      - startTimestamp
                                      - endTimestamp
                                      - startPeriod
                                      - endPeriod
                                      - value
                                      - lostStatisticData
                                min:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                max:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                now:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                levelMax:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                levelMin:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                              required:
                                - items
                                - min
                                - max
                                - now
                          required:
                            - deviceInfo
                            - temperature
                            - humidity
                            - tvoc
                            - eco2
                            - numberPm_10
                            - numberPm_25
                            - numberPm_100
                        - type: object
                          properties:
                            deviceInfo:
                              type: object
                              properties:
                                deviceId:
                                  type: string
                                  format: uuid
                                  description: Device ID
                                deviceName:
                                  type: string
                                  nullable: true
                                  description: Custom name of the device
                                  example: My device
                                deviceType:
                                  type: object
                                  properties:
                                    parentType:
                                      type: string
                                      enum:
                                        - Sensors
                                    childType:
                                      type: string
                                      description: Name of type
                                      example: GL-Oil Heater G3
                                  required:
                                    - parentType
                                    - childType
                                isArchived:
                                  type: boolean
                                  description: Whether the device is archived
                                allDataFlag:
                                  type: number
                                  minimum: 0
                                  maximum: 1
                              required:
                                - deviceId
                                - deviceName
                                - deviceType
                                - isArchived
                                - allDataFlag
                            temperature:
                              type: object
                              properties:
                                items:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      startTimestamp:
                                        type: number
                                      endTimestamp:
                                        type: number
                                      startPeriod:
                                        type: string
                                      endPeriod:
                                        type: string
                                      value:
                                        type: number
                                      lostStatisticData:
                                        type: boolean
                                      level:
                                        type: number
                                        minimum: 0
                                        exclusiveMinimum: true
                                    required:
                                      - startTimestamp
                                      - endTimestamp
                                      - startPeriod
                                      - endPeriod
                                      - value
                                      - lostStatisticData
                                min:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                max:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                now:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                levelMax:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                levelMin:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                              required:
                                - items
                                - min
                                - max
                                - now
                            humidity:
                              type: object
                              properties:
                                items:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      startTimestamp:
                                        type: number
                                      endTimestamp:
                                        type: number
                                      startPeriod:
                                        type: string
                                      endPeriod:
                                        type: string
                                      value:
                                        type: number
                                      lostStatisticData:
                                        type: boolean
                                      level:
                                        type: number
                                        minimum: 0
                                        exclusiveMinimum: true
                                    required:
                                      - startTimestamp
                                      - endTimestamp
                                      - startPeriod
                                      - endPeriod
                                      - value
                                      - lostStatisticData
                                min:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                max:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                now:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                levelMax:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                levelMin:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                              required:
                                - items
                                - min
                                - max
                                - now
                            tvoc:
                              type: object
                              properties:
                                items:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      startTimestamp:
                                        type: number
                                      endTimestamp:
                                        type: number
                                      startPeriod:
                                        type: string
                                      endPeriod:
                                        type: string
                                      value:
                                        type: number
                                      lostStatisticData:
                                        type: boolean
                                      level:
                                        type: number
                                        minimum: 0
                                        exclusiveMinimum: true
                                    required:
                                      - startTimestamp
                                      - endTimestamp
                                      - startPeriod
                                      - endPeriod
                                      - value
                                      - lostStatisticData
                                min:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                max:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                now:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                levelMax:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                levelMin:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                              required:
                                - items
                                - min
                                - max
                                - now
                            eco2:
                              type: object
                              properties:
                                items:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      startTimestamp:
                                        type: number
                                      endTimestamp:
                                        type: number
                                      startPeriod:
                                        type: string
                                      endPeriod:
                                        type: string
                                      value:
                                        type: number
                                      lostStatisticData:
                                        type: boolean
                                      level:
                                        type: number
                                        minimum: 0
                                        exclusiveMinimum: true
                                    required:
                                      - startTimestamp
                                      - endTimestamp
                                      - startPeriod
                                      - endPeriod
                                      - value
                                      - lostStatisticData
                                min:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                max:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                now:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                levelMax:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                                levelMin:
                                  type: object
                                  properties:
                                    startTimestamp:
                                      type: number
                                    endTimestamp:
                                      type: number
                                    startPeriod:
                                      type: string
                                    endPeriod:
                                      type: string
                                    value:
                                      type: number
                                    lostStatisticData:
                                      type: boolean
                                    level:
                                      type: number
                                      minimum: 0
                                      exclusiveMinimum: true
                                  required:
                                    - startTimestamp
                                    - endTimestamp
                                    - startPeriod
                                    - endPeriod
                                    - value
                                    - lostStatisticData
                              required:
                                - items
                                - min
                                - max
                                - now
                          required:
                            - deviceInfo
                            - temperature
                            - humidity
                            - tvoc
                            - eco2
                required:
                  - houseId
                  - houseName
                  - timezone
                  - valueTotal
                  - allDataFlag
                  - energyUsage
                  - roomList
                  - deviceList
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
      operationId: getHouseDevicesStatistics
      summary: Get house device statistics
      description: >-
        Returns general statistics for requested house and separate ones for
        each device inside house and for rooms
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                period:
                  type: string
                  enum:
                    - hourly
                    - daily
                    - monthly
                year:
                  type: number
                  minimum: 2015
                  exclusiveMinimum: true
                  maximum: 2100
                  exclusiveMaximum: true
                month:
                  type: number
                  minimum: 0
                  exclusiveMinimum: true
                  maximum: 12
                day:
                  type: number
                  minimum: 0
                  exclusiveMinimum: true
                  maximum: 31
              required:
                - period
    parameters:
      - schema:
          type: string
          description: House ID
          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
        name: houseId
        in: path
        required: true
        description: House ID
  /webhooks:
    get:
      tags:
        - webhook
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: ID of webhook
                        customerId:
                          type: string
                          description: Owner of webhook url
                        webhookUrl:
                          type: string
                          description: Url provided by customer which updates will be sent
                        deviceTypes:
                          oneOf:
                            - type: array
                              items:
                                type: string
                                format: uuid
                                description: Device Type ID
                            - type: string
                              enum:
                                - all
                          description: >-
                            The list of device child type IDs that the customer
                            wants to receive updates. Affects all devices of the
                            specified types that are in houses where the
                            customer is the owner. 'all' for tracking all
                            customer devices
                          examples: &ref_3
                            - - b6f56a1b-24b5-4239-b800-64e553572204
                              - e637a63a-8702-428f-abfd-041a28f3a689
                            - all
                      required:
                        - id
                        - customerId
                        - webhookUrl
                        - deviceTypes
                required:
                  - items
        '400':
          description: Bad request
      security:
        - JWT: []
        - ApiKey: []
      operationId: listWebhooks
      summary: Get webhooks of customer
      description: Returns list of webhooks of current customer
    post:
      tags:
        - webhook
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: ID of webhook
                  customerId:
                    type: string
                    description: Owner of webhook url
                  webhookUrl:
                    type: string
                    description: Url provided by customer which updates will be sent
                  deviceTypes:
                    oneOf:
                      - type: array
                        items:
                          type: string
                          format: uuid
                          description: Device Type ID
                      - type: string
                        enum:
                          - all
                    description: >-
                      The list of device child type IDs that the customer wants
                      to receive updates. Affects all devices of the specified
                      types that are in houses where the customer is the owner.
                      'all' for tracking all customer devices
                    examples: *ref_3
                required:
                  - id
                  - customerId
                  - webhookUrl
                  - deviceTypes
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: createWebhook
      summary: Create webhook
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                webhookUrl:
                  type: string
                  description: Url provided by customer which updates will be sent
                deviceTypes:
                  oneOf:
                    - type: array
                      items:
                        type: string
                        format: uuid
                        description: Device Type ID
                    - type: string
                      enum:
                        - all
                  description: >-
                    The list of device child type IDs that the customer wants to
                    receive updates. Affects all devices of the specified types
                    that are in houses where the customer is the owner. 'all'
                    for tracking all customer devices
                  examples: *ref_3
              required:
                - webhookUrl
                - deviceTypes
    parameters: []
  /webhooks/{webhookId}:
    patch:
      tags:
        - webhook
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: ID of webhook
                  customerId:
                    type: string
                    description: Owner of webhook url
                  webhookUrl:
                    type: string
                    description: Url provided by customer which updates will be sent
                  deviceTypes:
                    oneOf:
                      - type: array
                        items:
                          type: string
                          format: uuid
                          description: Device Type ID
                      - type: string
                        enum:
                          - all
                    description: >-
                      The list of device child type IDs that the customer wants
                      to receive updates. Affects all devices of the specified
                      types that are in houses where the customer is the owner.
                      'all' for tracking all customer devices
                    examples: *ref_3
                required:
                  - id
                  - customerId
                  - webhookUrl
                  - deviceTypes
        '400':
          description: Bad request
      security:
        - JWT: []
        - ApiKey: []
      operationId: updateWebhook
      summary: Update webhook
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                webhookUrl:
                  type: string
                  description: Url provided by customer which updates will be sent
                deviceTypes:
                  oneOf:
                    - type: array
                      items:
                        type: string
                        format: uuid
                        description: Device Type ID
                    - type: string
                      enum:
                        - all
                  description: >-
                    The list of device child type IDs that the customer wants to
                    receive updates. Affects all devices of the specified types
                    that are in houses where the customer is the owner. 'all'
                    for tracking all customer devices
                  examples: *ref_3
              minProperties: 1
    delete:
      tags:
        - webhook
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                required:
                  - status
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: deleteWebhook
      summary: Delete webhook
    parameters:
      - schema:
          type: string
          description: ID of webhook
        name: webhookId
        in: path
        required: true
        description: ID of webhook
  /devices/{deviceId}/settings:
    patch:
      tags:
        - device
      responses:
        '200':
          description: JSON that describes the desired state of the device
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      deviceType:
                        type: string
                        enum:
                          - Heaters
                      enabled:
                        type: boolean
                      settings:
                        type: object
                        properties:
                          operation_mode:
                            type: string
                            enum:
                              - weekly_program
                              - 'off'
                              - independent_device
                              - control_individually
                            nullable: true
                            description: "\n\"off\"  - all control disable\n\t\t\n\"weekly_program\" - follow the weekly program, changing temperature by display buttons changes the temperature of the current temperature mode\n\t\t\n\"independent_device\"  - follow the single set value, with timers enabled\n\t\t\n\"control_individually\"  - follow the single set value, but not use any timers or weekly program"
                          override_weekly_program:
                            type: object
                            properties:
                              value_type:
                                type: string
                                enum:
                                  - comfort
                                  - sleep
                                  - away
                                  - normal
                                  - always_heating
                                  - 'off'
                                nullable: true
                              ends_at:
                                type: number
                                nullable: true
                                description: >-
                                  UTC timestamp in seconds when the override
                                  mode ends
                            required:
                              - value_type
                              - ends_at
                            nullable: true
                            description: >-
                              Overwrite the currently running weekly program
                              with a temporary change of a specific temperature
                              type (e.g. comfort). Time value of 0 means weekly
                              program overwrite is not active anymore
                              (disabled). Time should be a UTC timestamp when
                              the program should end
                          non_repeatable_timers:
                            type: object
                            properties:
                              timers:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    value_type:
                                      type: string
                                      enum:
                                        - normal
                                        - 'off'
                                        - always_heating
                                    timestamp:
                                      type: number
                                  required:
                                    - value_type
                                    - timestamp
                            required:
                              - timers
                            nullable: true
                            description: >-
                              A single pair represents time and value when the
                              temperature mode should be changed. Time defines
                              when to switch to a specific temperature type (set
                              in the second field of the pair). Time is as local
                              unix timestamp (so timezone is included), but in
                              minutes, e.g. on 17.05.2021 the time is 27020801.
                              Allowed temperature types for timers: "normal",
                              "off", "always_heating". Only used in independent
                              mode
                          temperature_normal:
                            type: number
                            minimum: 0
                            maximum: 100
                            nullable: true
                            description: >-
                              Set temperature value, used for operation modes
                              "Independent device" and timers
                          temperature_comfort:
                            type: number
                            minimum: 0
                            maximum: 50
                            nullable: true
                          temperature_sleep:
                            type: number
                            minimum: 0
                            maximum: 50
                            nullable: true
                          temperature_away:
                            type: number
                            minimum: 0
                            maximum: 50
                            nullable: true
                          temperature_vacation:
                            type: number
                            minimum: 0
                            maximum: 50
                            nullable: true
                          temperature_last_set:
                            type: number
                            minimum: 0
                            maximum: 100
                            nullable: true
                            description: >-
                              The temperature that the device is currently
                              following
                          vacation_mode:
                            type: object
                            properties:
                              start_timestamp:
                                type: number
                                nullable: true
                                description: >-
                                  UTC timestamp in minutes when the vacation
                                  mode starts
                              end_timestamp:
                                type: number
                                nullable: true
                                description: >-
                                  UTC timestamp in minutes when the vacation
                                  mode ends
                              advanced:
                                type: boolean
                                nullable: true
                                description: >-
                                  Advanced vacation mode - heaters will be
                                  regulated regarding "away" temperature by each
                                  room: false=OFF, true=ON
                            required:
                              - start_timestamp
                              - end_timestamp
                              - advanced
                            nullable: true
                          lock_status:
                            type: string
                            enum:
                              - no_lock
                              - child
                              - commercial
                            nullable: true
                          predictive_heating_type:
                            type: string
                            enum:
                              - 'off'
                              - simple
                              - advanced
                            nullable: true
                            description: "\n\"off\" - No predictive heating. Temperature will be change exactly with the weekly program timer\n\t\t\n\"simple\"  - Simple predictive heating. Temperature will be change before the timer, with a fixed time for each Celsius degree\n\t\t\n\"advanced\" - Advanced predictive heating. Temperature will be change before the timer, with a time based on the current room model. Model is estimated while running."
                          open_window:
                            type: object
                            properties:
                              drop_temperature_threshold:
                                type: number
                                description: >-
                                  Required temperature drop to trigger
                                  (activate) the open window functionality, in
                                  Celsius degrees
                              drop_time_range:
                                type: number
                                description: >-
                                  Time range when a drop of temperature will be
                                  expected, in seconds
                              increase_temperature_threshold:
                                type: number
                                description: >-
                                  Required temperature increase to deactivate
                                  open window functionality
                              increase_time_range:
                                type: number
                                description: >-
                                  Time range when an increase of temperature
                                  will be expected, in seconds
                              max_time:
                                type: number
                                description: >-
                                  Max time duration of the open window
                                  activeness
                              enabled:
                                type: boolean
                                description: >-
                                  State of the open window functionality. True
                                  if open window functionality is enabled (that
                                  is whether the device can go into this mode
                                  while operating)
                              activated:
                                type: boolean
                                description: >-
                                  Current state of the open window. True if open
                                  window is currently detected by device and is
                                  activated. You can deactivate currently
                                  detected open window by changing this value to
                                  false.
                            required:
                              - enabled
                            nullable: true
                          temperature_calibration_offset:
                            type: number
                            nullable: true
                            description: Offset for ambient temperature
                          display_unit:
                            type: string
                            enum:
                              - celsius
                              - fahrenheit
                            nullable: true
                            description: >-
                              the temperature units: "celsius" or "fahrenheit"
                              to set
                          oil_heater_power_level:
                            oneOf:
                              - type: number
                                enum:
                                  - 40
                              - type: number
                                enum:
                                  - 60
                              - type: number
                                enum:
                                  - 100
                            nullable: true
                            description: >-
                              Set the max heating level in percentage of the
                              nominal wattage. Oil heater allows setting 3
                              different max power settings (40, 60 or 100% of
                              the power), done by selecting number of active
                              heating elements.
                          temperature_in_independent_mode:
                            type: number
                            minimum: 0
                            maximum: 100
                            nullable: true
                            description: >-
                              Change temperature in independent mode now. Use
                              values 0.0 and 99.0 to set ALWAYS_ON and
                              ALWAYS_OFF, respectively. Apart from changing
                              value for some temperature type, in "Independent
                              device" operation mode, one also needs to call
                              this command to change the current temperature
                          additional_socket_mode:
                            type: string
                            enum:
                              - heating
                              - cooling
                              - always_on
                              - always_off
                            nullable: true
                            description: "Command only for the socket heater, to select heating/cooling mode. ALWAYS_ON, ALWAYS_OFF modes just for convenience, as if these can be enabled also by other commands.\n\t\t"
                          pid_parameters:
                            type: object
                            properties:
                              kp:
                                type: number
                                description: The proportional part gain
                              ki:
                                type: number
                                description: The integral part gain
                              kd:
                                type: number
                                description: The derivative part gain
                              kd_filter_N:
                                type: number
                                description: The derivative filter time coefficient
                              windup_limit:
                                type: number
                                description: >-
                                  The windup limit for integral part from 0 to
                                  100
                            required:
                              - kp
                              - ki
                              - kd
                              - kd_filter_N
                              - windup_limit
                            nullable: true
                          max_heater_power:
                            type: number
                            nullable: true
                            description: Set max heater power in Watts
                          limited_heating_power:
                            type: number
                            minimum: 10
                            maximum: 100
                            nullable: true
                            description: >-
                              Only for heaters with triac (panel/storage).
                              Allows to limit the heating percentage between 10
                              and 100 percent.
                          hysteresis:
                            type: object
                            properties:
                              upper:
                                type: number
                                description: >-
                                  Set hysteresis parameters. Setting hysteresis
                                  parameters will change current regulator type
                                  to hysteresis. Upper offset (set temp + this
                                  -> stop heat)
                              lower:
                                type: number
                                description: >-
                                  Set hysteresis parameters. Setting hysteresis
                                  parameters will change current regulator type
                                  to hysteresis. Lower offset (set temp - this
                                  -> start heat)
                            required:
                              - upper
                              - lower
                            nullable: true
                          regulator_type:
                            type: string
                            enum:
                              - pid
                              - hysteresis_or_slow_pid
                              - unknown
                            nullable: true
                          timezone:
                            type: string
                            nullable: true
                          calibration_target_ambient_temperature:
                            type: number
                            nullable: true
                            description: >-
                              Target for calibrating ambient temperature for
                              heaters gen.2
                          fan_state:
                            type: string
                            enum:
                              - 'on'
                              - 'off'
                            nullable: true
                            description: Fan state of convection heaters gen.2
                          weekly_program:
                            type: object
                            properties:
                              timers:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    value_type:
                                      type: string
                                      enum:
                                        - comfort
                                        - sleep
                                        - away
                                        - normal
                                        - always_heating
                                        - 'off'
                                    timestamp:
                                      type: number
                                  required:
                                    - value_type
                                    - timestamp
                            required:
                              - timers
                            nullable: true
                            description: "The weekly program is a list of repeating pairs of values. A single pair represents time and value when the temperature mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific temperature type (set in the second field of the pair). Needs to be ordered ascending by time.\n\t\t\nFor mode \"independent device\" use only temperature types OFF and NORMAL, to avoid issues with changing the temperature by buttons from the heater"
                        nullable: true
                    required:
                      - deviceType
                      - enabled
                      - settings
                  - type: object
                    properties:
                      deviceType:
                        type: string
                        enum:
                          - Sockets
                      enabled:
                        type: boolean
                      settings:
                        type: object
                        properties:
                          operation_mode:
                            type: string
                            enum:
                              - weekly_program
                              - 'off'
                              - independent_device
                              - control_individually
                            nullable: true
                            description: "\n\"off\"  - all control disable\n\t\t\n\"weekly_program\" - follow the weekly program, changing temperature by display buttons changes the temperature of the current temperature mode\n\t\t\n\"independent_device\"  - follow the single set value, with timers enabled\n\t\t\n\"control_individually\"  - follow the single set value, but not use any timers or weekly program"
                          override_weekly_program:
                            type: object
                            properties:
                              value_type:
                                type: string
                                enum:
                                  - comfort
                                  - sleep
                                  - away
                                  - normal
                                  - always_heating
                                  - 'off'
                                nullable: true
                              ends_at:
                                type: number
                                nullable: true
                                description: >-
                                  UTC timestamp in seconds when the override
                                  mode ends
                            required:
                              - value_type
                              - ends_at
                            nullable: true
                            description: >-
                              Overwrite the currently running weekly program
                              with a temporary change of a specific temperature
                              type (e.g. comfort). Time value of 0 means weekly
                              program overwrite is not active anymore
                              (disabled). Time should be a UTC timestamp when
                              the program should end
                          non_repeatable_timers:
                            type: object
                            properties:
                              timers:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    value_type:
                                      type: string
                                      enum:
                                        - normal
                                        - 'off'
                                        - always_heating
                                    timestamp:
                                      type: number
                                  required:
                                    - value_type
                                    - timestamp
                            required:
                              - timers
                            nullable: true
                            description: >-
                              A single pair represents time and value when the
                              temperature mode should be changed. Time defines
                              when to switch to a specific temperature type (set
                              in the second field of the pair). Time is as local
                              unix timestamp (so timezone is included), but in
                              minutes, e.g. on 17.05.2021 the time is 27020801.
                              Allowed temperature types for timers: "normal",
                              "off", "always_heating". Only used in independent
                              mode
                          temperature_normal:
                            type: number
                            minimum: 0
                            maximum: 100
                            nullable: true
                            description: >-
                              Set temperature value, used for operation modes
                              "Independent device" and timers
                          temperature_comfort:
                            type: number
                            minimum: 0
                            maximum: 50
                            nullable: true
                          temperature_sleep:
                            type: number
                            minimum: 0
                            maximum: 50
                            nullable: true
                          temperature_away:
                            type: number
                            minimum: 0
                            maximum: 50
                            nullable: true
                          temperature_vacation:
                            type: number
                            minimum: 0
                            maximum: 50
                            nullable: true
                          temperature_last_set:
                            type: number
                            minimum: 0
                            maximum: 100
                            nullable: true
                            description: >-
                              The temperature that the device is currently
                              following
                          vacation_mode:
                            type: object
                            properties:
                              start_timestamp:
                                type: number
                                nullable: true
                                description: >-
                                  UTC timestamp in minutes when the vacation
                                  mode starts
                              end_timestamp:
                                type: number
                                nullable: true
                                description: >-
                                  UTC timestamp in minutes when the vacation
                                  mode ends
                              advanced:
                                type: boolean
                                nullable: true
                                description: >-
                                  Advanced vacation mode - heaters will be
                                  regulated regarding "away" temperature by each
                                  room: false=OFF, true=ON
                            required:
                              - start_timestamp
                              - end_timestamp
                              - advanced
                            nullable: true
                          lock_status:
                            type: string
                            enum:
                              - no_lock
                              - child
                              - commercial
                            nullable: true
                          predictive_heating_type:
                            type: string
                            enum:
                              - 'off'
                              - simple
                              - advanced
                            nullable: true
                            description: "\n\"off\" - No predictive heating. Temperature will be change exactly with the weekly program timer\n\t\t\n\"simple\"  - Simple predictive heating. Temperature will be change before the timer, with a fixed time for each Celsius degree\n\t\t\n\"advanced\" - Advanced predictive heating. Temperature will be change before the timer, with a time based on the current room model. Model is estimated while running."
                          open_window:
                            type: object
                            properties:
                              drop_temperature_threshold:
                                type: number
                                description: >-
                                  Required temperature drop to trigger
                                  (activate) the open window functionality, in
                                  Celsius degrees
                              drop_time_range:
                                type: number
                                description: >-
                                  Time range when a drop of temperature will be
                                  expected, in seconds
                              increase_temperature_threshold:
                                type: number
                                description: >-
                                  Required temperature increase to deactivate
                                  open window functionality
                              increase_time_range:
                                type: number
                                description: >-
                                  Time range when an increase of temperature
                                  will be expected, in seconds
                              max_time:
                                type: number
                                description: >-
                                  Max time duration of the open window
                                  activeness
                              enabled:
                                type: boolean
                                description: >-
                                  State of the open window functionality. True
                                  if open window functionality is enabled (that
                                  is whether the device can go into this mode
                                  while operating)
                              activated:
                                type: boolean
                                description: >-
                                  Current state of the open window. True if open
                                  window is currently detected by device and is
                                  activated. You can deactivate currently
                                  detected open window by changing this value to
                                  false.
                            required:
                              - enabled
                            nullable: true
                          temperature_calibration_offset:
                            type: number
                            nullable: true
                            description: Offset for ambient temperature
                          display_unit:
                            type: string
                            enum:
                              - celsius
                              - fahrenheit
                            nullable: true
                            description: >-
                              the temperature units: "celsius" or "fahrenheit"
                              to set
                          oil_heater_power_level:
                            oneOf:
                              - type: number
                                enum:
                                  - 40
                              - type: number
                                enum:
                                  - 60
                              - type: number
                                enum:
                                  - 100
                            nullable: true
                            description: >-
                              Set the max heating level in percentage of the
                              nominal wattage. Oil heater allows setting 3
                              different max power settings (40, 60 or 100% of
                              the power), done by selecting number of active
                              heating elements.
                          temperature_in_independent_mode:
                            type: number
                            minimum: 0
                            maximum: 100
                            nullable: true
                            description: >-
                              Change temperature in independent mode now. Use
                              values 0.0 and 99.0 to set ALWAYS_ON and
                              ALWAYS_OFF, respectively. Apart from changing
                              value for some temperature type, in "Independent
                              device" operation mode, one also needs to call
                              this command to change the current temperature
                          additional_socket_mode:
                            type: string
                            enum:
                              - heating
                              - cooling
                              - always_on
                              - always_off
                            nullable: true
                            description: "Command only for the socket heater, to select heating/cooling mode. ALWAYS_ON, ALWAYS_OFF modes just for convenience, as if these can be enabled also by other commands.\n\t\t"
                          pid_parameters:
                            type: object
                            properties:
                              kp:
                                type: number
                                description: The proportional part gain
                              ki:
                                type: number
                                description: The integral part gain
                              kd:
                                type: number
                                description: The derivative part gain
                              kd_filter_N:
                                type: number
                                description: The derivative filter time coefficient
                              windup_limit:
                                type: number
                                description: >-
                                  The windup limit for integral part from 0 to
                                  100
                            required:
                              - kp
                              - ki
                              - kd
                              - kd_filter_N
                              - windup_limit
                            nullable: true
                          max_heater_power:
                            type: number
                            nullable: true
                            description: Set max heater power in Watts
                          limited_heating_power:
                            type: number
                            minimum: 10
                            maximum: 100
                            nullable: true
                            description: >-
                              Only for heaters with triac (panel/storage).
                              Allows to limit the heating percentage between 10
                              and 100 percent.
                          hysteresis:
                            type: object
                            properties:
                              upper:
                                type: number
                                description: >-
                                  Set hysteresis parameters. Setting hysteresis
                                  parameters will change current regulator type
                                  to hysteresis. Upper offset (set temp + this
                                  -> stop heat)
                              lower:
                                type: number
                                description: >-
                                  Set hysteresis parameters. Setting hysteresis
                                  parameters will change current regulator type
                                  to hysteresis. Lower offset (set temp - this
                                  -> start heat)
                            required:
                              - upper
                              - lower
                            nullable: true
                          regulator_type:
                            type: string
                            enum:
                              - pid
                              - hysteresis_or_slow_pid
                              - unknown
                            nullable: true
                          timezone:
                            type: string
                            nullable: true
                          calibration_target_ambient_temperature:
                            type: number
                            nullable: true
                            description: >-
                              Target for calibrating ambient temperature for
                              heaters gen.2
                          fan_state:
                            type: string
                            enum:
                              - 'on'
                              - 'off'
                            nullable: true
                            description: Fan state of convection heaters gen.2
                          weekly_program:
                            type: object
                            properties:
                              timers:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    value_type:
                                      type: string
                                      enum:
                                        - comfort
                                        - sleep
                                        - away
                                        - normal
                                        - always_heating
                                        - 'off'
                                    timestamp:
                                      type: number
                                  required:
                                    - value_type
                                    - timestamp
                            required:
                              - timers
                            nullable: true
                            description: "The weekly program is a list of repeating pairs of values. A single pair represents time and value when the temperature mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific temperature type (set in the second field of the pair). Needs to be ordered ascending by time.\n\t\t\nFor mode \"independent device\" use only temperature types OFF and NORMAL, to avoid issues with changing the temperature by buttons from the heater"
                        nullable: true
                    required:
                      - deviceType
                      - enabled
                      - settings
                  - type: object
                    properties:
                      deviceType:
                        type: string
                        enum:
                          - Sensors
                      enabled:
                        type: boolean
                      settings:
                        type: object
                        properties:
                          ens210_ranges:
                            type: object
                            properties:
                              temperature_green:
                                type: number
                              temperature_red:
                                type: number
                              humidity_yellow_low:
                                type: number
                              humidity_yellow_high:
                                type: number
                              humidity_red_low:
                                type: number
                              humidity_red_high:
                                type: number
                            required:
                              - temperature_green
                              - temperature_red
                              - humidity_yellow_low
                              - humidity_yellow_high
                              - humidity_red_low
                              - humidity_red_high
                            nullable: true
                          ccs811_ranges:
                            type: object
                            properties:
                              eco2_red:
                                type: number
                              eco2_yellow:
                                type: number
                              tvoc_red:
                                type: number
                              tvoc_yellow:
                                type: number
                            required:
                              - eco2_red
                              - eco2_yellow
                              - tvoc_red
                              - tvoc_yellow
                            nullable: true
                          sampling_period:
                            type: number
                            nullable: true
                          timezone:
                            type: string
                            nullable: true
                        nullable: true
                    required:
                      - deviceType
                      - enabled
                      - settings
                  - type: object
                    properties:
                      deviceType:
                        type: string
                        enum:
                          - Air Purifiers
                      enabled:
                        type: boolean
                      settings:
                        type: object
                        properties:
                          lock_status:
                            type: string
                            enum:
                              - no_lock
                              - child
                            nullable: true
                          fan_speed_mode:
                            type: string
                            enum:
                              - HARD_OFF
                              - SOFT_OFF
                              - AUTO
                              - SLEEP
                              - BOOST
                              - TURN_ON
                              - MANUAL
                              - MANUAL_LEVEL1
                              - MANUAL_LEVEL2
                              - MANUAL_LEVEL3
                              - MANUAL_LEVEL4
                              - MANUAL_LEVEL5
                              - MANUAL_LEVEL6
                              - MANUAL_LEVEL7
                              - MANUAL_LEVEL8
                            nullable: true
                            description: "\n\t\t\t\nHARD_OFF - disable fan, stop to gather data from sensors, disconnect from wifi, can be disabled only via \ndisplay\n\t\t\t\nSOFT_OFF - disable fan but device is still connected to the wifi and gather data from sensors\n\t\t\t\nAUTO - device automatically determine current fan speed level based on the measurements from sensors\n\t\t\t\nSLEEP - lower display brightness, low fan speed\n\t\t\t\nBOOST - maximum available fan speed\n\t\t\t\nTURN_ON - disable Soft/Hard OFF and enable mode which was before OFF\n\t\t\t\nMANUAL - switch to manual mode with level as for Auto Mode\n\t\t\t\nMANUAL_LEVEL1\n\t\t\t\nMANUAL_LEVEL2\n\t\t\t\nMANUAL_LEVEL3\n\t\t\t\nMANUAL_LEVEL4\n\t\t\t\nMANUAL_LEVEL5\n\t\t\t\nMANUAL_LEVEL6\n\t\t\t\nMANUAL_LEVEL7\n\t\t\t\nMANUAL_LEVEL8 (only for AP Large)"
                          repeatable_timers:
                            type: object
                            properties:
                              timers:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    fan_speed_mode:
                                      type: string
                                      enum:
                                        - HARD_OFF
                                        - SOFT_OFF
                                        - AUTO
                                        - SLEEP
                                        - BOOST
                                        - TURN_ON
                                        - MANUAL
                                        - MANUAL_LEVEL1
                                        - MANUAL_LEVEL2
                                        - MANUAL_LEVEL3
                                        - MANUAL_LEVEL4
                                        - MANUAL_LEVEL5
                                        - MANUAL_LEVEL6
                                        - MANUAL_LEVEL7
                                        - MANUAL_LEVEL8
                                    timestamp:
                                      type: number
                                  required:
                                    - fan_speed_mode
                                    - timestamp
                            required:
                              - timers
                            nullable: true
                            description: "The repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                          non_repeatable_timers:
                            type: object
                            properties:
                              timers:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    fan_speed_mode:
                                      type: string
                                      enum:
                                        - HARD_OFF
                                        - SOFT_OFF
                                        - AUTO
                                        - SLEEP
                                        - BOOST
                                        - TURN_ON
                                        - MANUAL
                                        - MANUAL_LEVEL1
                                        - MANUAL_LEVEL2
                                        - MANUAL_LEVEL3
                                        - MANUAL_LEVEL4
                                        - MANUAL_LEVEL5
                                        - MANUAL_LEVEL6
                                        - MANUAL_LEVEL7
                                        - MANUAL_LEVEL8
                                    timestamp:
                                      type: number
                                  required:
                                    - fan_speed_mode
                                    - timestamp
                            required:
                              - timers
                            nullable: true
                            description: "The non-repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is as local unix timestamp (so timezone is included), but in minutes, e.g. on 17.05.2021 the time is 27020801. when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                          aiq_displaying_mode:
                            type: boolean
                            nullable: true
                            description: "false - display AiQ Lights in Inactivity Mode only if red (default option)\n\t\t\t\t\t\ntrue - always display AiQ Lights in Inactivity Mode"
                          sensor_type:
                            type: string
                            enum:
                              - particles
                              - TVOC
                              - both
                            nullable: true
                          filter_state:
                            type: string
                            enum:
                              - OK
                              - MEDIUM_DIRTY
                              - DIRTY
                              - MUST_BE_CHANGED
                            nullable: true
                          is_particle_sensor_faulty:
                            type: boolean
                            nullable: true
                          is_temp_sensor_faulty:
                            type: boolean
                            nullable: true
                          is_tvoc_sensor_faulty:
                            type: boolean
                            nullable: true
                          timezone:
                            type: string
                            nullable: true
                          display_brightness:
                            type: number
                            nullable: true
                          particles_trigger_values_threshold:
                            type: object
                            properties:
                              particles_trigger_values_threshold_for_level1:
                                type: number
                              particles_trigger_values_threshold_for_level2:
                                type: number
                              particles_trigger_values_threshold_for_level3:
                                type: number
                              particles_trigger_values_threshold_for_level4:
                                type: number
                              particles_trigger_values_threshold_for_level5:
                                type: number
                              particles_trigger_values_threshold_for_level6:
                                type: number
                              particles_trigger_values_threshold_for_level7:
                                type: number
                            nullable: true
                          tvoc_trigger_values_threshold:
                            type: object
                            properties:
                              tvoc_trigger_values_threshold_for_level1:
                                type: number
                              tvoc_trigger_values_threshold_for_level2:
                                type: number
                              tvoc_trigger_values_threshold_for_level3:
                                type: number
                              tvoc_trigger_values_threshold_for_level4:
                                type: number
                              tvoc_trigger_values_threshold_for_level5:
                                type: number
                              tvoc_trigger_values_threshold_for_level6:
                                type: number
                              tvoc_trigger_values_threshold_for_level7:
                                type: number
                            nullable: true
                          auto_mode_fan_rpm:
                            type: object
                            properties:
                              auto_mode_fan_rpm_level1:
                                type: number
                              auto_mode_fan_rpm_level2:
                                type: number
                              auto_mode_fan_rpm_level3:
                                type: number
                              auto_mode_fan_rpm_level4:
                                type: number
                              auto_mode_fan_rpm_level5:
                                type: number
                              auto_mode_fan_rpm_level6:
                                type: number
                              auto_mode_fan_rpm_level7:
                                type: number
                              auto_mode_fan_rpm_level8:
                                type: number
                            nullable: true
                          manual_sleep_boost_fan_rpm:
                            type: object
                            properties:
                              manual_mode_fan_rpm_level1:
                                type: number
                              manual_mode_fan_rpm_level2:
                                type: number
                              manual_mode_fan_rpm_level3:
                                type: number
                              manual_mode_fan_rpm_level4:
                                type: number
                              manual_mode_fan_rpm_level5:
                                type: number
                              manual_mode_fan_rpm_level6:
                                type: number
                              manual_mode_fan_rpm_level7:
                                type: number
                              manual_mode_fan_rpm_level8:
                                type: number
                              boost_mode_fan_rpm:
                                type: number
                              sleep_mode_fan_rpm:
                                type: number
                            nullable: true
                          auto_mode_fan_levels_states:
                            type: object
                            properties:
                              auto_mode_fan_state_level1:
                                type: boolean
                              auto_mode_fan_state_level2:
                                type: boolean
                              auto_mode_fan_state_level3:
                                type: boolean
                              auto_mode_fan_state_level4:
                                type: boolean
                              auto_mode_fan_state_level5:
                                type: boolean
                              auto_mode_fan_state_level6:
                                type: boolean
                              auto_mode_fan_state_level7:
                                type: boolean
                              auto_mode_fan_state_level8:
                                type: boolean
                            nullable: true
                        nullable: true
                    required:
                      - deviceType
                      - enabled
                      - settings
                description: JSON that describes the desired state of the device
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DeviceTypeMismatchError'
                  - $ref: '#/components/schemas/DeviceIsNotAttachedError'
                  - $ref: '#/components/schemas/DeviceIsUsedError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DeviceModeError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: updateDeviceSettings
      summary: Update device settings
      description: >-
        Updates device settings using AWS Device Shadow.  Provided body replaces
        state.desired in AWS Device Shadow object There are three parent device
        types (Heaters, Air Sensors, Air Purifiers) with three different object
        templates.
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    deviceType:
                      type: string
                      enum:
                        - Heaters
                    enabled:
                      type: boolean
                    settings:
                      type: object
                      properties:
                        operation_mode:
                          type: string
                          enum:
                            - weekly_program
                            - 'off'
                            - independent_device
                            - control_individually
                          nullable: true
                          description: "\n\"off\"  - all control disable\n\t\t\n\"weekly_program\" - follow the weekly program, changing temperature by display buttons changes the temperature of the current temperature mode\n\t\t\n\"independent_device\"  - follow the single set value, with timers enabled\n\t\t\n\"control_individually\"  - follow the single set value, but not use any timers or weekly program"
                        override_weekly_program:
                          type: object
                          properties:
                            value_type:
                              type: string
                              enum:
                                - comfort
                                - sleep
                                - away
                                - normal
                                - always_heating
                                - 'off'
                              nullable: true
                            ends_at:
                              type: number
                              nullable: true
                              description: >-
                                UTC timestamp in seconds when the override mode
                                ends
                          required:
                            - value_type
                            - ends_at
                          nullable: true
                          description: >-
                            Overwrite the currently running weekly program with
                            a temporary change of a specific temperature type
                            (e.g. comfort). Time value of 0 means weekly program
                            overwrite is not active anymore (disabled). Time
                            should be a UTC timestamp when the program should
                            end
                        non_repeatable_timers:
                          type: object
                          properties:
                            timers:
                              type: array
                              items:
                                type: object
                                properties:
                                  value_type:
                                    type: string
                                    enum:
                                      - normal
                                      - 'off'
                                      - always_heating
                                  timestamp:
                                    type: number
                                required:
                                  - value_type
                                  - timestamp
                          required:
                            - timers
                          nullable: true
                          description: >-
                            A single pair represents time and value when the
                            temperature mode should be changed. Time defines
                            when to switch to a specific temperature type (set
                            in the second field of the pair). Time is as local
                            unix timestamp (so timezone is included), but in
                            minutes, e.g. on 17.05.2021 the time is 27020801.
                            Allowed temperature types for timers: "normal",
                            "off", "always_heating". Only used in independent
                            mode
                        temperature_normal:
                          type: number
                          minimum: 0
                          maximum: 100
                          nullable: true
                          description: >-
                            Set temperature value, used for operation modes
                            "Independent device" and timers
                        temperature_comfort:
                          type: number
                          minimum: 0
                          maximum: 50
                          nullable: true
                        temperature_sleep:
                          type: number
                          minimum: 0
                          maximum: 50
                          nullable: true
                        temperature_away:
                          type: number
                          minimum: 0
                          maximum: 50
                          nullable: true
                        temperature_vacation:
                          type: number
                          minimum: 0
                          maximum: 50
                          nullable: true
                        temperature_last_set:
                          type: number
                          minimum: 0
                          maximum: 100
                          nullable: true
                          description: >-
                            The temperature that the device is currently
                            following
                        vacation_mode:
                          type: object
                          properties:
                            start_timestamp:
                              type: number
                              nullable: true
                              description: >-
                                UTC timestamp in minutes when the vacation mode
                                starts
                            end_timestamp:
                              type: number
                              nullable: true
                              description: >-
                                UTC timestamp in minutes when the vacation mode
                                ends
                            advanced:
                              type: boolean
                              nullable: true
                              description: >-
                                Advanced vacation mode - heaters will be
                                regulated regarding "away" temperature by each
                                room: false=OFF, true=ON
                          required:
                            - start_timestamp
                            - end_timestamp
                            - advanced
                          nullable: true
                        lock_status:
                          type: string
                          enum:
                            - no_lock
                            - child
                            - commercial
                          nullable: true
                        predictive_heating_type:
                          type: string
                          enum:
                            - 'off'
                            - simple
                            - advanced
                          nullable: true
                          description: "\n\"off\" - No predictive heating. Temperature will be change exactly with the weekly program timer\n\t\t\n\"simple\"  - Simple predictive heating. Temperature will be change before the timer, with a fixed time for each Celsius degree\n\t\t\n\"advanced\" - Advanced predictive heating. Temperature will be change before the timer, with a time based on the current room model. Model is estimated while running."
                        open_window:
                          type: object
                          properties:
                            drop_temperature_threshold:
                              type: number
                              description: >-
                                Required temperature drop to trigger (activate)
                                the open window functionality, in Celsius
                                degrees
                            drop_time_range:
                              type: number
                              description: >-
                                Time range when a drop of temperature will be
                                expected, in seconds
                            increase_temperature_threshold:
                              type: number
                              description: >-
                                Required temperature increase to deactivate open
                                window functionality
                            increase_time_range:
                              type: number
                              description: >-
                                Time range when an increase of temperature will
                                be expected, in seconds
                            max_time:
                              type: number
                              description: Max time duration of the open window activeness
                            enabled:
                              type: boolean
                              description: >-
                                State of the open window functionality. True if
                                open window functionality is enabled (that is
                                whether the device can go into this mode while
                                operating)
                            activated:
                              type: boolean
                              description: >-
                                Current state of the open window. True if open
                                window is currently detected by device and is
                                activated. You can deactivate currently detected
                                open window by changing this value to false.
                          required:
                            - enabled
                          nullable: true
                        temperature_calibration_offset:
                          type: number
                          nullable: true
                          description: Offset for ambient temperature
                        display_unit:
                          type: string
                          enum:
                            - celsius
                            - fahrenheit
                          nullable: true
                          description: >-
                            the temperature units: "celsius" or "fahrenheit" to
                            set
                        oil_heater_power_level:
                          oneOf:
                            - type: number
                              enum:
                                - 40
                            - type: number
                              enum:
                                - 60
                            - type: number
                              enum:
                                - 100
                          nullable: true
                          description: >-
                            Set the max heating level in percentage of the
                            nominal wattage. Oil heater allows setting 3
                            different max power settings (40, 60 or 100% of the
                            power), done by selecting number of active heating
                            elements.
                        temperature_in_independent_mode:
                          type: number
                          minimum: 0
                          maximum: 100
                          nullable: true
                          description: >-
                            Change temperature in independent mode now. Use
                            values 0.0 and 99.0 to set ALWAYS_ON and ALWAYS_OFF,
                            respectively. Apart from changing value for some
                            temperature type, in "Independent device" operation
                            mode, one also needs to call this command to change
                            the current temperature
                        additional_socket_mode:
                          type: string
                          enum:
                            - heating
                            - cooling
                            - always_on
                            - always_off
                          nullable: true
                          description: "Command only for the socket heater, to select heating/cooling mode. ALWAYS_ON, ALWAYS_OFF modes just for convenience, as if these can be enabled also by other commands.\n\t\t"
                        pid_parameters:
                          type: object
                          properties:
                            kp:
                              type: number
                              description: The proportional part gain
                            ki:
                              type: number
                              description: The integral part gain
                            kd:
                              type: number
                              description: The derivative part gain
                            kd_filter_N:
                              type: number
                              description: The derivative filter time coefficient
                            windup_limit:
                              type: number
                              description: The windup limit for integral part from 0 to 100
                          required:
                            - kp
                            - ki
                            - kd
                            - kd_filter_N
                            - windup_limit
                          nullable: true
                        max_heater_power:
                          type: number
                          nullable: true
                          description: Set max heater power in Watts
                        limited_heating_power:
                          type: number
                          minimum: 10
                          maximum: 100
                          nullable: true
                          description: >-
                            Only for heaters with triac (panel/storage). Allows
                            to limit the heating percentage between 10 and 100
                            percent.
                        hysteresis:
                          type: object
                          properties:
                            upper:
                              type: number
                              description: >-
                                Set hysteresis parameters. Setting hysteresis
                                parameters will change current regulator type to
                                hysteresis. Upper offset (set temp + this ->
                                stop heat)
                            lower:
                              type: number
                              description: >-
                                Set hysteresis parameters. Setting hysteresis
                                parameters will change current regulator type to
                                hysteresis. Lower offset (set temp - this ->
                                start heat)
                          required:
                            - upper
                            - lower
                          nullable: true
                        regulator_type:
                          type: string
                          enum:
                            - pid
                            - hysteresis_or_slow_pid
                            - unknown
                          nullable: true
                        timezone:
                          type: string
                          nullable: true
                        calibration_target_ambient_temperature:
                          type: number
                          nullable: true
                          description: >-
                            Target for calibrating ambient temperature for
                            heaters gen.2
                        fan_state:
                          type: string
                          enum:
                            - 'on'
                            - 'off'
                          nullable: true
                          description: Fan state of convection heaters gen.2
                        weekly_program:
                          type: object
                          properties:
                            timers:
                              type: array
                              items:
                                type: object
                                properties:
                                  value_type:
                                    type: string
                                    enum:
                                      - comfort
                                      - sleep
                                      - away
                                      - normal
                                      - always_heating
                                      - 'off'
                                  timestamp:
                                    type: number
                                required:
                                  - value_type
                                  - timestamp
                          required:
                            - timers
                          nullable: true
                          description: "The weekly program is a list of repeating pairs of values. A single pair represents time and value when the temperature mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific temperature type (set in the second field of the pair). Needs to be ordered ascending by time.\n\t\t\nFor mode \"independent device\" use only temperature types OFF and NORMAL, to avoid issues with changing the temperature by buttons from the heater"
                  required:
                    - deviceType
                    - enabled
                    - settings
                - type: object
                  properties:
                    deviceType:
                      type: string
                      enum:
                        - Sockets
                    enabled:
                      type: boolean
                    settings:
                      type: object
                      properties:
                        operation_mode:
                          type: string
                          enum:
                            - weekly_program
                            - 'off'
                            - independent_device
                            - control_individually
                          nullable: true
                          description: "\n\"off\"  - all control disable\n\t\t\n\"weekly_program\" - follow the weekly program, changing temperature by display buttons changes the temperature of the current temperature mode\n\t\t\n\"independent_device\"  - follow the single set value, with timers enabled\n\t\t\n\"control_individually\"  - follow the single set value, but not use any timers or weekly program"
                        override_weekly_program:
                          type: object
                          properties:
                            value_type:
                              type: string
                              enum:
                                - comfort
                                - sleep
                                - away
                                - normal
                                - always_heating
                                - 'off'
                              nullable: true
                            ends_at:
                              type: number
                              nullable: true
                              description: >-
                                UTC timestamp in seconds when the override mode
                                ends
                          required:
                            - value_type
                            - ends_at
                          nullable: true
                          description: >-
                            Overwrite the currently running weekly program with
                            a temporary change of a specific temperature type
                            (e.g. comfort). Time value of 0 means weekly program
                            overwrite is not active anymore (disabled). Time
                            should be a UTC timestamp when the program should
                            end
                        non_repeatable_timers:
                          type: object
                          properties:
                            timers:
                              type: array
                              items:
                                type: object
                                properties:
                                  value_type:
                                    type: string
                                    enum:
                                      - normal
                                      - 'off'
                                      - always_heating
                                  timestamp:
                                    type: number
                                required:
                                  - value_type
                                  - timestamp
                          required:
                            - timers
                          nullable: true
                          description: >-
                            A single pair represents time and value when the
                            temperature mode should be changed. Time defines
                            when to switch to a specific temperature type (set
                            in the second field of the pair). Time is as local
                            unix timestamp (so timezone is included), but in
                            minutes, e.g. on 17.05.2021 the time is 27020801.
                            Allowed temperature types for timers: "normal",
                            "off", "always_heating". Only used in independent
                            mode
                        temperature_normal:
                          type: number
                          minimum: 0
                          maximum: 100
                          nullable: true
                          description: >-
                            Set temperature value, used for operation modes
                            "Independent device" and timers
                        temperature_comfort:
                          type: number
                          minimum: 0
                          maximum: 50
                          nullable: true
                        temperature_sleep:
                          type: number
                          minimum: 0
                          maximum: 50
                          nullable: true
                        temperature_away:
                          type: number
                          minimum: 0
                          maximum: 50
                          nullable: true
                        temperature_vacation:
                          type: number
                          minimum: 0
                          maximum: 50
                          nullable: true
                        temperature_last_set:
                          type: number
                          minimum: 0
                          maximum: 100
                          nullable: true
                          description: >-
                            The temperature that the device is currently
                            following
                        vacation_mode:
                          type: object
                          properties:
                            start_timestamp:
                              type: number
                              nullable: true
                              description: >-
                                UTC timestamp in minutes when the vacation mode
                                starts
                            end_timestamp:
                              type: number
                              nullable: true
                              description: >-
                                UTC timestamp in minutes when the vacation mode
                                ends
                            advanced:
                              type: boolean
                              nullable: true
                              description: >-
                                Advanced vacation mode - heaters will be
                                regulated regarding "away" temperature by each
                                room: false=OFF, true=ON
                          required:
                            - start_timestamp
                            - end_timestamp
                            - advanced
                          nullable: true
                        lock_status:
                          type: string
                          enum:
                            - no_lock
                            - child
                            - commercial
                          nullable: true
                        predictive_heating_type:
                          type: string
                          enum:
                            - 'off'
                            - simple
                            - advanced
                          nullable: true
                          description: "\n\"off\" - No predictive heating. Temperature will be change exactly with the weekly program timer\n\t\t\n\"simple\"  - Simple predictive heating. Temperature will be change before the timer, with a fixed time for each Celsius degree\n\t\t\n\"advanced\" - Advanced predictive heating. Temperature will be change before the timer, with a time based on the current room model. Model is estimated while running."
                        open_window:
                          type: object
                          properties:
                            drop_temperature_threshold:
                              type: number
                              description: >-
                                Required temperature drop to trigger (activate)
                                the open window functionality, in Celsius
                                degrees
                            drop_time_range:
                              type: number
                              description: >-
                                Time range when a drop of temperature will be
                                expected, in seconds
                            increase_temperature_threshold:
                              type: number
                              description: >-
                                Required temperature increase to deactivate open
                                window functionality
                            increase_time_range:
                              type: number
                              description: >-
                                Time range when an increase of temperature will
                                be expected, in seconds
                            max_time:
                              type: number
                              description: Max time duration of the open window activeness
                            enabled:
                              type: boolean
                              description: >-
                                State of the open window functionality. True if
                                open window functionality is enabled (that is
                                whether the device can go into this mode while
                                operating)
                            activated:
                              type: boolean
                              description: >-
                                Current state of the open window. True if open
                                window is currently detected by device and is
                                activated. You can deactivate currently detected
                                open window by changing this value to false.
                          required:
                            - enabled
                          nullable: true
                        temperature_calibration_offset:
                          type: number
                          nullable: true
                          description: Offset for ambient temperature
                        display_unit:
                          type: string
                          enum:
                            - celsius
                            - fahrenheit
                          nullable: true
                          description: >-
                            the temperature units: "celsius" or "fahrenheit" to
                            set
                        oil_heater_power_level:
                          oneOf:
                            - type: number
                              enum:
                                - 40
                            - type: number
                              enum:
                                - 60
                            - type: number
                              enum:
                                - 100
                          nullable: true
                          description: >-
                            Set the max heating level in percentage of the
                            nominal wattage. Oil heater allows setting 3
                            different max power settings (40, 60 or 100% of the
                            power), done by selecting number of active heating
                            elements.
                        temperature_in_independent_mode:
                          type: number
                          minimum: 0
                          maximum: 100
                          nullable: true
                          description: >-
                            Change temperature in independent mode now. Use
                            values 0.0 and 99.0 to set ALWAYS_ON and ALWAYS_OFF,
                            respectively. Apart from changing value for some
                            temperature type, in "Independent device" operation
                            mode, one also needs to call this command to change
                            the current temperature
                        additional_socket_mode:
                          type: string
                          enum:
                            - heating
                            - cooling
                            - always_on
                            - always_off
                          nullable: true
                          description: "Command only for the socket heater, to select heating/cooling mode. ALWAYS_ON, ALWAYS_OFF modes just for convenience, as if these can be enabled also by other commands.\n\t\t"
                        pid_parameters:
                          type: object
                          properties:
                            kp:
                              type: number
                              description: The proportional part gain
                            ki:
                              type: number
                              description: The integral part gain
                            kd:
                              type: number
                              description: The derivative part gain
                            kd_filter_N:
                              type: number
                              description: The derivative filter time coefficient
                            windup_limit:
                              type: number
                              description: The windup limit for integral part from 0 to 100
                          required:
                            - kp
                            - ki
                            - kd
                            - kd_filter_N
                            - windup_limit
                          nullable: true
                        max_heater_power:
                          type: number
                          nullable: true
                          description: Set max heater power in Watts
                        limited_heating_power:
                          type: number
                          minimum: 10
                          maximum: 100
                          nullable: true
                          description: >-
                            Only for heaters with triac (panel/storage). Allows
                            to limit the heating percentage between 10 and 100
                            percent.
                        hysteresis:
                          type: object
                          properties:
                            upper:
                              type: number
                              description: >-
                                Set hysteresis parameters. Setting hysteresis
                                parameters will change current regulator type to
                                hysteresis. Upper offset (set temp + this ->
                                stop heat)
                            lower:
                              type: number
                              description: >-
                                Set hysteresis parameters. Setting hysteresis
                                parameters will change current regulator type to
                                hysteresis. Lower offset (set temp - this ->
                                start heat)
                          required:
                            - upper
                            - lower
                          nullable: true
                        regulator_type:
                          type: string
                          enum:
                            - pid
                            - hysteresis_or_slow_pid
                            - unknown
                          nullable: true
                        timezone:
                          type: string
                          nullable: true
                        calibration_target_ambient_temperature:
                          type: number
                          nullable: true
                          description: >-
                            Target for calibrating ambient temperature for
                            heaters gen.2
                        fan_state:
                          type: string
                          enum:
                            - 'on'
                            - 'off'
                          nullable: true
                          description: Fan state of convection heaters gen.2
                        weekly_program:
                          type: object
                          properties:
                            timers:
                              type: array
                              items:
                                type: object
                                properties:
                                  value_type:
                                    type: string
                                    enum:
                                      - comfort
                                      - sleep
                                      - away
                                      - normal
                                      - always_heating
                                      - 'off'
                                  timestamp:
                                    type: number
                                required:
                                  - value_type
                                  - timestamp
                          required:
                            - timers
                          nullable: true
                          description: "The weekly program is a list of repeating pairs of values. A single pair represents time and value when the temperature mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific temperature type (set in the second field of the pair). Needs to be ordered ascending by time.\n\t\t\nFor mode \"independent device\" use only temperature types OFF and NORMAL, to avoid issues with changing the temperature by buttons from the heater"
                        socketTemperatureSensor:
                          type: string
                          enum:
                            - 'on'
                            - 'off'
                          nullable: true
                          description: Sockets temperature sensor status
                  required:
                    - deviceType
                    - enabled
                    - settings
                - type: object
                  properties:
                    deviceType:
                      type: string
                      enum:
                        - Sensors
                    enabled:
                      type: boolean
                    settings:
                      type: object
                      properties:
                        ens210_ranges:
                          type: object
                          properties:
                            temperature_green:
                              type: number
                            temperature_red:
                              type: number
                            humidity_yellow_low:
                              type: number
                            humidity_yellow_high:
                              type: number
                            humidity_red_low:
                              type: number
                            humidity_red_high:
                              type: number
                          required:
                            - temperature_green
                            - temperature_red
                            - humidity_yellow_low
                            - humidity_yellow_high
                            - humidity_red_low
                            - humidity_red_high
                          nullable: true
                        ccs811_ranges:
                          type: object
                          properties:
                            eco2_red:
                              type: number
                            eco2_yellow:
                              type: number
                            tvoc_red:
                              type: number
                            tvoc_yellow:
                              type: number
                          required:
                            - eco2_red
                            - eco2_yellow
                            - tvoc_red
                            - tvoc_yellow
                          nullable: true
                        sampling_period:
                          type: number
                          nullable: true
                        timezone:
                          type: string
                          nullable: true
                  required:
                    - deviceType
                    - enabled
                    - settings
                - type: object
                  properties:
                    deviceType:
                      type: string
                      enum:
                        - Air Purifiers
                    enabled:
                      type: boolean
                    settings:
                      type: object
                      properties:
                        lock_status:
                          type: string
                          enum:
                            - no_lock
                            - child
                          nullable: true
                        fan_speed_mode:
                          type: string
                          enum:
                            - HARD_OFF
                            - SOFT_OFF
                            - AUTO
                            - SLEEP
                            - BOOST
                            - TURN_ON
                            - MANUAL
                            - MANUAL_LEVEL1
                            - MANUAL_LEVEL2
                            - MANUAL_LEVEL3
                            - MANUAL_LEVEL4
                            - MANUAL_LEVEL5
                            - MANUAL_LEVEL6
                            - MANUAL_LEVEL7
                            - MANUAL_LEVEL8
                          nullable: true
                          description: "\n\t\t\t\nHARD_OFF - disable fan, stop to gather data from sensors, disconnect from wifi, can be disabled only via \ndisplay\n\t\t\t\nSOFT_OFF - disable fan but device is still connected to the wifi and gather data from sensors\n\t\t\t\nAUTO - device automatically determine current fan speed level based on the measurements from sensors\n\t\t\t\nSLEEP - lower display brightness, low fan speed\n\t\t\t\nBOOST - maximum available fan speed\n\t\t\t\nTURN_ON - disable Soft/Hard OFF and enable mode which was before OFF\n\t\t\t\nMANUAL - switch to manual mode with level as for Auto Mode\n\t\t\t\nMANUAL_LEVEL1\n\t\t\t\nMANUAL_LEVEL2\n\t\t\t\nMANUAL_LEVEL3\n\t\t\t\nMANUAL_LEVEL4\n\t\t\t\nMANUAL_LEVEL5\n\t\t\t\nMANUAL_LEVEL6\n\t\t\t\nMANUAL_LEVEL7\n\t\t\t\nMANUAL_LEVEL8 (only for AP Large)"
                        repeatable_timers:
                          type: object
                          properties:
                            timers:
                              type: array
                              items:
                                type: object
                                properties:
                                  fan_speed_mode:
                                    type: string
                                    enum:
                                      - HARD_OFF
                                      - SOFT_OFF
                                      - AUTO
                                      - SLEEP
                                      - BOOST
                                      - TURN_ON
                                      - MANUAL
                                      - MANUAL_LEVEL1
                                      - MANUAL_LEVEL2
                                      - MANUAL_LEVEL3
                                      - MANUAL_LEVEL4
                                      - MANUAL_LEVEL5
                                      - MANUAL_LEVEL6
                                      - MANUAL_LEVEL7
                                      - MANUAL_LEVEL8
                                  timestamp:
                                    type: number
                                required:
                                  - fan_speed_mode
                                  - timestamp
                          required:
                            - timers
                          nullable: true
                          description: "The repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                        non_repeatable_timers:
                          type: object
                          properties:
                            timers:
                              type: array
                              items:
                                type: object
                                properties:
                                  fan_speed_mode:
                                    type: string
                                    enum:
                                      - HARD_OFF
                                      - SOFT_OFF
                                      - AUTO
                                      - SLEEP
                                      - BOOST
                                      - TURN_ON
                                      - MANUAL
                                      - MANUAL_LEVEL1
                                      - MANUAL_LEVEL2
                                      - MANUAL_LEVEL3
                                      - MANUAL_LEVEL4
                                      - MANUAL_LEVEL5
                                      - MANUAL_LEVEL6
                                      - MANUAL_LEVEL7
                                      - MANUAL_LEVEL8
                                  timestamp:
                                    type: number
                                required:
                                  - fan_speed_mode
                                  - timestamp
                          required:
                            - timers
                          nullable: true
                          description: "The non-repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is as local unix timestamp (so timezone is included), but in minutes, e.g. on 17.05.2021 the time is 27020801. when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
                        aiq_displaying_mode:
                          type: boolean
                          nullable: true
                          description: "false - display AiQ Lights in Inactivity Mode only if red (default option)\n\t\t\t\t\t\ntrue - always display AiQ Lights in Inactivity Mode"
                        sensor_type:
                          type: string
                          enum:
                            - particles
                            - TVOC
                            - both
                          nullable: true
                        filter_state:
                          type: string
                          enum:
                            - OK
                            - MEDIUM_DIRTY
                            - DIRTY
                            - MUST_BE_CHANGED
                          nullable: true
                        is_particle_sensor_faulty:
                          type: boolean
                          nullable: true
                        is_temp_sensor_faulty:
                          type: boolean
                          nullable: true
                        is_tvoc_sensor_faulty:
                          type: boolean
                          nullable: true
                        timezone:
                          type: string
                          nullable: true
                        display_brightness:
                          type: number
                          nullable: true
                        particles_trigger_values_threshold:
                          type: object
                          properties:
                            particles_trigger_values_threshold_for_level1:
                              type: number
                            particles_trigger_values_threshold_for_level2:
                              type: number
                            particles_trigger_values_threshold_for_level3:
                              type: number
                            particles_trigger_values_threshold_for_level4:
                              type: number
                            particles_trigger_values_threshold_for_level5:
                              type: number
                            particles_trigger_values_threshold_for_level6:
                              type: number
                            particles_trigger_values_threshold_for_level7:
                              type: number
                          nullable: true
                        tvoc_trigger_values_threshold:
                          type: object
                          properties:
                            tvoc_trigger_values_threshold_for_level1:
                              type: number
                            tvoc_trigger_values_threshold_for_level2:
                              type: number
                            tvoc_trigger_values_threshold_for_level3:
                              type: number
                            tvoc_trigger_values_threshold_for_level4:
                              type: number
                            tvoc_trigger_values_threshold_for_level5:
                              type: number
                            tvoc_trigger_values_threshold_for_level6:
                              type: number
                            tvoc_trigger_values_threshold_for_level7:
                              type: number
                          nullable: true
                        auto_mode_fan_rpm:
                          type: object
                          properties:
                            auto_mode_fan_rpm_level1:
                              type: number
                            auto_mode_fan_rpm_level2:
                              type: number
                            auto_mode_fan_rpm_level3:
                              type: number
                            auto_mode_fan_rpm_level4:
                              type: number
                            auto_mode_fan_rpm_level5:
                              type: number
                            auto_mode_fan_rpm_level6:
                              type: number
                            auto_mode_fan_rpm_level7:
                              type: number
                            auto_mode_fan_rpm_level8:
                              type: number
                          nullable: true
                        manual_sleep_boost_fan_rpm:
                          type: object
                          properties:
                            manual_mode_fan_rpm_level1:
                              type: number
                            manual_mode_fan_rpm_level2:
                              type: number
                            manual_mode_fan_rpm_level3:
                              type: number
                            manual_mode_fan_rpm_level4:
                              type: number
                            manual_mode_fan_rpm_level5:
                              type: number
                            manual_mode_fan_rpm_level6:
                              type: number
                            manual_mode_fan_rpm_level7:
                              type: number
                            manual_mode_fan_rpm_level8:
                              type: number
                            boost_mode_fan_rpm:
                              type: number
                            sleep_mode_fan_rpm:
                              type: number
                          nullable: true
                        auto_mode_fan_levels_states:
                          type: object
                          properties:
                            auto_mode_fan_state_level1:
                              type: boolean
                            auto_mode_fan_state_level2:
                              type: boolean
                            auto_mode_fan_state_level3:
                              type: boolean
                            auto_mode_fan_state_level4:
                              type: boolean
                            auto_mode_fan_state_level5:
                              type: boolean
                            auto_mode_fan_state_level6:
                              type: boolean
                            auto_mode_fan_state_level7:
                              type: boolean
                            auto_mode_fan_state_level8:
                              type: boolean
                          nullable: true
                        resetSettings:
                          type: boolean
                          nullable: true
                          description: Whether to reset the settings of the purifier
                  required:
                    - deviceType
                    - enabled
                    - settings
              description: JSON that describes the desired state of the device
        description: JSON that describes the desired state of the device
    parameters:
      - schema:
          type: string
          format: uuid
          description: Device ID
        name: deviceId
        in: path
        required: true
        description: Device ID
  /devices/control:
    patch:
      tags:
        - device
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                required:
                  - status
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: updateDeviceControlSource
      summary: Update device control source
      description: Updates control source of several devices
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                deviceIds:
                  type: array
                  items:
                    type: string
                    format: uuid
                    description: Device ID
                  minItems: 1
                  description: IDs of devices, which control source should be changed
                controlSource:
                  type: string
                  enum:
                    - mobile_api
                    - open_api
                    - tibber
                  description: Control source of the device. By default it is "mobile_api"
                  example: tibber
              required:
                - deviceIds
                - controlSource
    parameters: []
  /customer/api-access:
    post:
      tags:
        - customer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                required:
                  - status
      security:
        - JWT: []
      operationId: requestApiAccess
      summary: Request API access
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    accountType:
                      type: string
                      enum:
                        - individual
                    email:
                      type: string
                      format: email
                      description: Customer email
                      example: carl_johnson1972@gmail.com
                    phoneNumber:
                      type: string
                      description: Phone number with country code
                      example: '+15433848374'
                  required:
                    - accountType
                    - email
                    - phoneNumber
                - type: object
                  properties:
                    accountType:
                      type: string
                      enum:
                        - business
                    companyName:
                      type: string
                      description: Company name
                    businessName:
                      type: string
                      description: Business name
                    businessEmail:
                      type: string
                      description: Business email
                    businessPhoneNumber:
                      type: string
                      description: Business phone number
                  required:
                    - accountType
                    - companyName
                    - businessName
                    - businessEmail
                    - businessPhoneNumber
    parameters: []
  /devices/sensor/{deviceId}/rooms:
    get:
      tags:
        - device
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Room ID
                          example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
                        name:
                          type: string
                          description: Room name
                          example: Living room
                        houseId:
                          type: string
                          description: ID of house the room is attached to
                          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                        roomComfortTemperature:
                          type: number
                          nullable: true
                          description: Room temperature in comfort mode
                          example: 23
                        roomSleepTemperature:
                          type: number
                          nullable: true
                          description: Room temperature in sleep mode
                          example: 27
                        roomAwayTemperature:
                          type: number
                          nullable: true
                          description: Room temperature in away mode
                          example: 27
                        overrideModeType:
                          type: string
                          enum:
                            - continuous
                            - not_continuous
                          nullable: true
                          description: >-
                            Override mode type. If not continuous,
                            overrideEndDate is required
                        overrideEndDate:
                          type: number
                          minimum: 0
                          maximum: 9999999999
                          description: Date in seconds since epoch (UTC time)
                          example: 1579098983
                          nullable: true
                        roomProgramId:
                          type: string
                          description: ID of room program attached to the room
                          nullable: true
                          example: b6730c1e-c775-43ba-8fa0-e6d07c39e21c
                        roomControlSource:
                          type: string
                          enum:
                            - mobile_api
                            - open_api
                            - tibber
                          nullable: true
                          description: >-
                            The desired control source of every device in this
                            room
                        mode:
                          type: string
                          enum:
                            - weekly_program
                            - comfort
                            - sleep
                            - away
                            - vacation
                            - normal
                            - always_heating
                            - 'off'
                          nullable: true
                          description: Room mode
                        createdAt:
                          type: string
                          format: date-time
                          nullable: true
                          description: Room creation date
                        assigned:
                          type: boolean
                          description: Shows if the sensor is assigned to the room
                        tempFlag:
                          type: boolean
                          description: "Specifies if other devices (heaters) in the room, \n\t\tshould be controlled based on temperature reading from Air Sensor"
                          nullable: true
                        bindFlag:
                          type: boolean
                          description: >-
                            Specifies if sensor data should be displayed on the
                            Room screens
                          nullable: true
                        assignable:
                          type: boolean
                          description: Can the sensor assign to the room?
                        devices:
                          type: array
                          items:
                            type: object
                            properties:
                              deviceId:
                                type: string
                                format: uuid
                                description: Device ID
                              deviceName:
                                type: string
                                nullable: true
                                description: Custom name of the device
                                example: My device
                              lastMetrics:
                                oneOf:
                                  - type: object
                                    properties:
                                      deviceId:
                                        type: string
                                      time:
                                        type: number
                                        minimum: 0
                                        maximum: 9999999999
                                        description: Date in seconds since epoch (UTC time)
                                        example: 1579098983
                                      temperature:
                                        type: number
                                        description: >-
                                          What is the current target temperature
                                          for the heater regulator. Temperature in
                                          Celsius degrees
                                      humidity:
                                        type: number
                                        description: "SOCKET: Measured humidity - Relative humidity percentage multiplied by 100.\n\t\t\t\t\t\t\nValid ONLY FOR SOCKET HEATER. So for the panel heater, this field will be dummy bytes.\n\t\t\t\t\t\t\nCONVECTOR: Tilt sensor state. 1 = convector fallen and not heating"
                                      temperatureAmbient:
                                        type: number
                                        description: >-
                                          Actual temperature after applying the
                                          calibration offset. If the temperature
                                          sensor is faulty, this field will be
                                          equal -100 C. Temperature in Celsius
                                          degrees
                                      currentPower:
                                        type: number
                                        description: >-
                                          Power measured with the dedicated IC
                                          chip. In Watts. Due to the chip
                                          behavior, this value is filtered for a
                                          few seconds. To determine if the heater
                                          is heating RIGHT NOW use the
                                          control_signal field or heater_flag
                                      controlSignal:
                                        type: number
                                        description: >-
                                          Current value of control signal - so the
                                          percentage of the maximum heater power.
                                          Value from 0 to 100. It is the value
                                          applied by the heater right now
                                      currentOperationMode:
                                        type: number
                                        description: "0 - \"Off\"\n\t\t\t\t\t\t\n1 - \"Weekly program\"\n\t\t\t\t\t\t\n2 - \"Independent device\" (uses timers)\n\t\t\t\t\t\t\n3 - \"Control Individually\" (follows the single set temperature)"
                                      energyUsage:
                                        type: number
                                        description: >-
                                          Energy used since the heater startup. In
                                          Wh. 
                                      timeSinceHeaterStartup:
                                        type: number
                                        description: >-
                                          Time in seconds since heater startup.
                                          Knowing this information and
                                          energy_usage the cloud can calculate the
                                          energy usage in any time range (e.g.
                                          during last 24 hours)
                                      openWindowsStatus:
                                        type: number
                                        description: "Whether the open window functionality is enabled (can be activated by opening a window) and active now (was triggered and the heater is not heating).\n\t\t\t\t 0 - disabled, not active now 3 - enabled, not active now 2 - enabled and active now!"
                                      currentTemperatureTypeInWeeklyProgram:
                                        type: number
                                        description: "Current temperature type: 0=normal, 1=comfort, 2=sleep, 3=away, 4=vacation, 5=off\n\t\t\tTemperature type followed currently (only if weekly program is active).\n\t\t\tIf the heater is in other mode than \"Weekly program\" this field will contains value \"-1\".\n\t\t\tIf the NTP time is not synchronized this field will contain value \"-2\" (because when NTP time is not synchronized, current weekly program status cannot be determined"
                                      heaterFlag:
                                        type: number
                                        description: 'Heating/Cooling status: 0=off, 1=on'
                                      powerStatus:
                                        type: number
                                        description: >-
                                          If the device is on (not in operation
                                          mode off or temperature is not set to
                                          0): 0=off, 1=on
                                    required:
                                      - deviceId
                                      - time
                                      - temperature
                                      - humidity
                                      - temperatureAmbient
                                      - currentPower
                                      - controlSignal
                                      - currentOperationMode
                                      - energyUsage
                                      - timeSinceHeaterStartup
                                      - openWindowsStatus
                                      - currentTemperatureTypeInWeeklyProgram
                                      - heaterFlag
                                      - powerStatus
                                    description: >-
                                      Heater last metrics. If null, no metrics
                                      were found
                                  - type: object
                                    properties:
                                      deviceId:
                                        type: string
                                        description: AWS IoT Thing Name (UUID)
                                      time:
                                        type: number
                                        minimum: 0
                                        maximum: 9999999999
                                        description: Date in seconds since epoch (UTC time)
                                        example: 1579098983
                                      setFanLevelInAuto:
                                        type: number
                                        description: >-
                                          Current fan speed level, relevant only
                                          when operation_mode=auto. Level1=0,
                                          Level8=7
                                      controlSignal:
                                        type: number
                                        description: >-
                                          Current value of control signal applied
                                          to the device motor. So it is the
                                          percentage of maximum motor input
                                          signal.
                                      massPm_10:
                                        type: number
                                        description: >-
                                          Mass of particles with diameter < 1
                                          micrometers in volume of one cubic meter
                                          [µg/m3] in range <0,1000>
                                      particles10Level:
                                        type: number
                                        description: >-
                                          Warning level of mass of particles with
                                          diameter < 1 micrometers
                                      massPm_25:
                                        type: number
                                        description: >-
                                          Mass of particles with diameter < 2.5
                                          micrometers in volume of one cubic meter
                                          [µg/m3] in range <0,1000>
                                      particles25Level:
                                        type: number
                                        description: >-
                                          Warning level of mass of particles with
                                          diameter < 2.5 micrometers
                                      massPm_100:
                                        type: number
                                        description: >-
                                          Mass of particles with diameter < 10.0
                                          micrometers in volume of one cubic meter
                                          [µg/m3] in range <0,1000>
                                      particles100Level:
                                        type: number
                                        description: >-
                                          Warning level of mass of particles with
                                          diameter < 10 micrometers
                                      numberPm_05:
                                        type: number
                                        description: >-
                                          Total number of particles wit diameter <
                                          0.5 micrometers in cubic centimeter
                                          [#/cm3] in range <0,3000>
                                      numberPm_10:
                                        type: number
                                        description: >-
                                          Total number of particles wit diameter <
                                          1 micrometers in cubic centimeter
                                          [#/cm3] in range <0,3000>
                                      numberPm_25:
                                        type: number
                                        description: >-
                                          Total number of particles wit diameter <
                                          2.5 micrometers in cubic centimeter
                                          [#/cm3] in range <0,3000>
                                      numberPm_50:
                                        type: number
                                        description: >-
                                          Total number of particles wit diameter <
                                          5 micrometers in cubic centimeter
                                          [#/cm3] in range <0,3000>
                                      numberPm_100:
                                        type: number
                                        description: >-
                                          Total number of particles wit diameter <
                                          10 micrometers in cubic centimeter
                                          [#/cm3] in range <0,3000>
                                      temperature:
                                        type: number
                                        description: Temperature in Celsius degrees
                                      temperatureLevel:
                                        type: number
                                        description: Warning level of temperature
                                      humidity:
                                        type: number
                                        description: >-
                                          Relative humidity in percents %,
                                          multiplied by 100
                                      humidityLevel:
                                        type: number
                                        description: Warning level of humidity
                                      runtimeLevelSleepMs:
                                        type: number
                                        description: >-
                                          Number of milliseconds, during which the
                                          device works in sleep mode
                                      runtimeLevelBoostMs:
                                        type: number
                                        description: >-
                                          Number of milliseconds, during which the
                                          device works in boost mode
                                      runtimeLevelLevel1Ms:
                                        type: number
                                        description: >-
                                          Number of milliseconds, during which the
                                          device using Level1 fan speed (in auto
                                          and manual)
                                      runtimeLevelLevel2Ms:
                                        type: number
                                        description: >-
                                          Number of milliseconds, during which the
                                          device using Level2 fan speed (in auto
                                          and manual)
                                      runtimeLevelLevel3Ms:
                                        type: number
                                        description: >-
                                          Number of milliseconds, during which the
                                          device using Level3 fan speed (in auto
                                          and manual)
                                      runtimeLevelLevel4Ms:
                                        type: number
                                        description: >-
                                          Number of milliseconds, during which the
                                          device using Level4 fan speed (in auto
                                          and manual)
                                      runtimeLevelLevel5Ms:
                                        type: number
                                        description: >-
                                          Number of milliseconds, during which the
                                          device using Level5 fan speed (in auto
                                          and manual)
                                      runtimeLevelLevel6Ms:
                                        type: number
                                        description: >-
                                          Number of milliseconds, during which the
                                          device using Level6 fan speed (in auto
                                          and manual)
                                      runtimeLevelLevel7Ms:
                                        type: number
                                        description: >-
                                          Number of milliseconds, during which the
                                          device using Level7 fan speed (in auto
                                          and manual)
                                      runtimeLevelLevel8Ms:
                                        type: number
                                        description: >-
                                          Number of milliseconds, during which the
                                          device using Level8 fan speed (in auto
                                          and manual)
                                      airQualityIndex:
                                        type: number
                                        description: >-
                                          Air Quality Index calculated from TVOC
                                          and eCO2 measurements by sensor, in
                                          range <1,5>
                                      eco2:
                                        type: number
                                        description: >-
                                          Equivalent CO2 in range <400-65000>
                                          [parts per million CO2 equiv.]
                                      eco2Level:
                                        type: number
                                        description: Warning level of CO2
                                      tvoc:
                                        type: number
                                        description: >-
                                          Total Volatile Organic Compounds in
                                          range <0-65000> [part per billion]
                                      tvocLevel:
                                        type: number
                                        description: >-
                                          Warning level of Total Volatile Organic
                                          Compounds
                                    required:
                                      - deviceId
                                      - time
                                      - setFanLevelInAuto
                                      - controlSignal
                                      - massPm_10
                                      - particles10Level
                                      - massPm_25
                                      - particles25Level
                                      - massPm_100
                                      - particles100Level
                                      - numberPm_05
                                      - numberPm_10
                                      - numberPm_25
                                      - numberPm_50
                                      - numberPm_100
                                      - temperature
                                      - temperatureLevel
                                      - humidity
                                      - humidityLevel
                                      - runtimeLevelSleepMs
                                      - runtimeLevelBoostMs
                                      - runtimeLevelLevel1Ms
                                      - runtimeLevelLevel2Ms
                                      - runtimeLevelLevel3Ms
                                      - runtimeLevelLevel4Ms
                                      - runtimeLevelLevel5Ms
                                      - runtimeLevelLevel6Ms
                                      - runtimeLevelLevel7Ms
                                      - runtimeLevelLevel8Ms
                                      - airQualityIndex
                                      - eco2
                                      - eco2Level
                                      - tvoc
                                      - tvocLevel
                                    description: >-
                                      Air purifier last metrics. If null, no
                                      metrics were found
                                  - type: object
                                    properties:
                                      deviceId:
                                        type: string
                                      time:
                                        type: number
                                        minimum: 0
                                        maximum: 9999999999
                                        description: Date in seconds since epoch (UTC time)
                                        example: 1579098983
                                      temperature:
                                        type: number
                                        description: Temperature in Celsius degrees
                                      humidity:
                                        type: number
                                        description: >-
                                          2 - bytes [ unsigned integer ] [ 100 x
                                          1%]
                                      eco2:
                                        type: number
                                        description: >-
                                          2 - bytes [ unsigned integer ] [ parts
                                          per million ]
                                      tvoc:
                                        type: number
                                        description: >-
                                          2 - bytes [ unsigned integer ] [ parts
                                          per million ]
                                      batteryPercentage:
                                        type: number
                                        description: >-
                                          2 - bytes [ unsigned integer ] [ 10 x 1%
                                          ]
                                      batteryVoltage:
                                        type: number
                                        description: >-
                                          2 - bytes [ unsigned integer ] [
                                          millivolts ]
                                      chargingStatus:
                                        type: number
                                        description: >-
                                          0 - not charging ; 1 - charging with LED
                                          turn Off; 2 - charging with LED turn On
                                          ( updated 2 - 30 s after change )
                                      tvocSensorCalibrated:
                                        type: boolean
                                        description: >-
                                          false - not calibrated, true -
                                          calibrated
                                      tvocSensorCountdownRemainingTime:
                                        type: number
                                        description: >-
                                          Seconds to finish calibration, if sensor
                                          calibrated then equal to 0
                                      tvocSensorCountdownRemainingTimeTo:
                                        type: number
                                        description: >-
                                          Seconds to finish calibration, if sensor
                                          calibrated then equal to 0
                                      tvocSensorCountdownTotalTime:
                                        type: number
                                        description: >-
                                          Total time needed to perform tvoc sensor
                                          calibration
                                      ens210SensorCalibrated:
                                        type: boolean
                                        description: >-
                                          false - not calibrated, true -
                                          calibrated
                                      ens210SensorCountdownRemainingTime:
                                        type: number
                                        description: >-
                                          Seconds to finish calibration, if sensor
                                          calibrated then equal to 0
                                      ens210SensorCountdownRemainingTimeTo:
                                        type: number
                                        description: Seconds to finish calibration
                                      ens210SensorCountdownTotalTime:
                                        type: number
                                        description: >-
                                          Total time needed to perform ens210
                                          sensor calibration
                                    required:
                                      - deviceId
                                      - time
                                      - temperature
                                      - humidity
                                      - eco2
                                      - tvoc
                                      - batteryPercentage
                                      - batteryVoltage
                                      - chargingStatus
                                      - tvocSensorCalibrated
                                      - tvocSensorCountdownRemainingTime
                                      - tvocSensorCountdownRemainingTimeTo
                                      - tvocSensorCountdownTotalTime
                                      - ens210SensorCalibrated
                                      - ens210SensorCountdownRemainingTime
                                      - ens210SensorCountdownRemainingTimeTo
                                      - ens210SensorCountdownTotalTime
                                    description: >-
                                      Air sensor last metrics. If null, no
                                      metrics were found
                                nullable: true
                                description: >-
                                  Last metrics sent by device. Type of object
                                  matches to device type. If null, no metrics
                                  were found
                            required:
                              - deviceId
                              - deviceName
                              - lastMetrics
                      required:
                        - id
                        - name
                        - houseId
                        - roomComfortTemperature
                        - roomSleepTemperature
                        - roomAwayTemperature
                        - overrideModeType
                        - overrideEndDate
                        - roomProgramId
                        - roomControlSource
                        - mode
                        - createdAt
                        - assigned
                        - tempFlag
                        - bindFlag
                        - assignable
                        - devices
                required:
                  - items
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/SensorUsageError'
                  - $ref: '#/components/schemas/DeviceTypeMismatchError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DeviceNotFoundError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
      operationId: getSensorRooms
      summary: Get sensor rooms
      description: >-
        Returns a list of rooms in the house and shows which rooms the sensor is
        assigned to
    parameters:
      - schema:
          type: string
          format: uuid
          description: Device ID
        name: deviceId
        in: path
        required: true
        description: Device ID
  /devices/sensor/{deviceId}/rooms/{roomId}:
    patch:
      tags:
        - device
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                required:
                  - status
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/SensorUsageError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
      security:
        - JWT: []
        - ApiKey: []
      operationId: updateSensorRoom
      summary: Update SensorRoom
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tempFlag:
                  type: boolean
                  description: "Specifies if other devices (heaters) in the room, \n\t\tshould be controlled based on temperature reading from Air Sensor"
                bindFlag:
                  type: boolean
                  description: >-
                    Specifies if sensor data should be displayed on the Room
                    screens
    delete:
      tags:
        - device
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                required:
                  - status
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/SensorUsageError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
      security:
        - JWT: []
        - ApiKey: []
      operationId: deleteSensorRoom
      summary: Delete SensorRoom
    parameters:
      - schema:
          type: string
          format: uuid
          description: Device ID
        name: deviceId
        in: path
        required: true
        description: Device ID
      - schema:
          type: string
          description: Room ID
          example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
        name: roomId
        in: path
        required: true
        description: Room ID
  /devices/{deviceId}/calibration:
    post:
      tags:
        - device
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  deviceId:
                    type: string
                    format: uuid
                    description: Device ID
                  macAddress:
                    type: string
                    description: MAC address of the device
                    example: '00:00:00:00:00:00'
                  customName:
                    type: string
                    nullable: true
                    description: Custom name of the device
                    example: My device
                  oldTemperatureAmbient:
                    type: number
                    description: >-
                      Actual temperature after applying the calibration offset.
                      If the temperature sensor is faulty, this field will be
                      equal -100 C. Temperature in Celsius degrees
                    nullable: true
                  currentTemperatureAmbient:
                    type: number
                    description: >-
                      Actual temperature after applying the calibration offset.
                      If the temperature sensor is faulty, this field will be
                      equal -100 C. Temperature in Celsius degrees
                    nullable: true
                  powerStatus:
                    type: number
                    description: >-
                      If the device is on (not in operation mode off or
                      temperature is not set to 0): 0=off, 1=on
                    nullable: true
                  temperatureCalibrationOffset:
                    type: number
                    nullable: true
                    description: Offset for ambient temperature
                  success:
                    type: boolean
                  message:
                    type: string
                    nullable: true
                required:
                  - deviceId
                  - macAddress
                  - customName
                  - oldTemperatureAmbient
                  - currentTemperatureAmbient
                  - powerStatus
                  - temperatureCalibrationOffset
                  - success
                  - message
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceNotFoundError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: calibrateDeviceTemperature
      summary: Post calibration temperature
      description: Returns calibration related info for particular device
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                targetAmbientTemperature:
                  type: number
                  minimum: 0
                  maximum: 50
                  description: Ambient temperature near the device
              required:
                - targetAmbientTemperature
    parameters:
      - schema:
          type: string
          format: uuid
          description: Device ID
        name: deviceId
        in: path
        required: true
        description: Device ID
  /cloud-migration/migrate-customer:
    post:
      tags:
        - cloud-migration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                required:
                  - status
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomerIdentityAlreadyInUseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomerNotFoundError'
      operationId: migrateCustomer
      summary: Migrate customer
      description: Migrate customer from old cloud with all of its data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  oneOf:
                    - type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - email
                        value:
                          type: string
                          format: email
                          description: Customer email
                      required:
                        - type
                        - value
                    - type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - phoneNumber
                        value:
                          type: string
                          description: Customer phone number
                      required:
                        - type
                        - value
                password:
                  type: string
                  description: Customer password
              required:
                - login
                - password
    parameters: []
  /cloud-migration/migrate-device-by-mac:
    post:
      tags:
        - cloud-migration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                required:
                  - status
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomerNotFoundError'
      operationId: migrateDeviceByMac
      summary: Migrate device by mac
      description: Migrate device from old cloud by mac
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                macAddress:
                  type: string
                  description: MAC address of the device
                  example: '00:00:00:00:00:00'
                ableCloudSubDomainId:
                  type: string
                  description: AbleCloud's subDomainId
                customName:
                  type: string
                  description: How should the device name to be displayed
                  example: My device
                houseId:
                  type: string
                  description: >-
                    If only houseId is provided, device will not be attached to
                    any room
                  example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                roomId:
                  type: string
                  description: >-
                    If a roomId is provided, the device will be assigned to that
                    room and the corresponding house. In this case houseId is
                    not required
                  example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
              required:
                - macAddress
                - ableCloudSubDomainId
                - customName
                - houseId
    parameters: []
  /cloud-migration/migration-status:
    get:
      tags:
        - cloud-migration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  needSynchronize:
                    type: boolean
                    description: Whether the customer is not yet synchronized
                  customerDetails:
                    type: string
                    enum:
                      - ok
                      - in progress
                      - not found
                  house:
                    type: object
                    properties:
                      status:
                        type: string
                        enum:
                          - ok
                          - in progress
                          - not found
                      left:
                        type: array
                        items:
                          type: string
                          description: House ID
                          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
                    required:
                      - status
                      - left
                  room:
                    type: object
                    properties:
                      status:
                        type: string
                        enum:
                          - ok
                          - in progress
                          - not found
                      left:
                        type: array
                        items:
                          type: string
                          description: Room ID
                          example: b4fadcf7-b7d0-41c6-8e5e-0539e888aaef
                    required:
                      - status
                      - left
                  devices:
                    type: object
                    properties:
                      status:
                        type: string
                        enum:
                          - ok
                          - in progress
                          - not found
                      left:
                        type: array
                        items:
                          type: string
                          description: MAC address of the device
                          example: '00:00:00:00:00:00'
                      failed:
                        type: array
                        items:
                          type: string
                          description: MAC address of the device
                          example: '00:00:00:00:00:00'
                    required:
                      - status
                      - left
                required:
                  - needSynchronize
                  - customerDetails
                  - house
                  - room
                  - devices
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomerNotFoundError'
      operationId: migrationStatus
      summary: Get Migration Status
      description: Get user migration status
      parameters:
        - schema:
            type: string
            enum:
              - email
              - phoneNumber
            description: Type of login
          name: loginType
          in: query
          style: form
          explode: false
          required: true
          description: Type of login
        - schema:
            type: string
            description: User login
          name: login
          in: query
          style: form
          explode: false
          required: true
          description: User login
    parameters: []
  /ableCloud/{ableDeviceId}/customers:
    post:
      tags:
        - able-cloud
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DeviceTypeMismatchError'
                  - $ref: '#/components/schemas/Gen1DeviceUsageError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/HouseNotFoundError'
      operationId: ableCloudAddDevice
      summary: Add Able cloud device to customer
      description: >-
        Adds Able cloud device to customer's profile. Put device in one of
        houses.
    parameters: []
  /ableCloud/{ableDeviceId}/changeHouse:
    patch:
      tags:
        - able-cloud
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Gen1DeviceUsageError'
                  - $ref: '#/components/schemas/DeviceIsUsedError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
      operationId: ableCloudChangeHouse
      summary: Charge house of Able cloud device
      description: Charge house of Able cloud device
    parameters: []
  /ableCloud/{ableDeviceId}:
    delete:
      tags:
        - able-cloud
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Gen1DeviceUsageError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
      operationId: ableCloudDeleteDevice
      summary: Delete Able cloud device
      description: Delete Able cloud device
    parameters: []
  /ableCloud/{houseId}/devices:
    get:
      tags:
        - able-cloud
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
      operationId: ableCloudGetDevices
      summary: Get Able cloud devices
      description: Returns a list of Able cloud devices from chosen house
    parameters: []
  /ableCloud/{ableDeviceId}/renameDevice:
    patch:
      tags:
        - able-cloud
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Gen1DeviceUsageError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
      operationId: ableCloudRenameDevice
      summary: Rename Able cloud device
      description: Changes the custom name of Able cloud device
    parameters: []
  /greeCloud/{greeDeviceId}/customers:
    post:
      tags:
        - gree-cloud
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DeviceTypeMismatchError'
                  - $ref: '#/components/schemas/GreeCloudUsageError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/HouseNotFoundError'
      operationId: greeCloudAddDevice
      summary: Add Gree cloud device to customer
      description: >-
        Adds Gree cloud device to customer's profile. Put device in one of
        houses.
    parameters: []
  /greeCloud/{greeDeviceId}/changeHouse:
    patch:
      tags:
        - gree-cloud
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/GreeCloudUsageError'
                  - $ref: '#/components/schemas/DeviceIsUsedError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
      operationId: greeCloudChangeHouse
      summary: Charge house of Gree cloud device
      description: Charge house of Gree cloud device
    parameters: []
  /greeCloud/{greeDeviceId}/control:
    patch:
      tags:
        - gree-cloud
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/GreeCloudUsageError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
      operationId: greeCloudControlDevice
      summary: Control Gree cloud device
      description: Control Gree cloud device
    parameters: []
  /greeCloud/{greeDeviceId}:
    delete:
      tags:
        - gree-cloud
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/GreeCloudUsageError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
      operationId: greeCloudDeleteDevice
      summary: Delete Gree cloud device
      description: Delete Gree cloud device
    parameters: []
  /greeCloud/{houseId}/devices:
    get:
      tags:
        - gree-cloud
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
      operationId: greeCloudGetDevices
      summary: Get Gree cloud devices
      description: Returns a list of Gree cloud devices from chosen house
    parameters: []
  /greeCloud/deviceStatus:
    post:
      tags:
        - gree-cloud
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/GreeCloudUsageError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
      operationId: greeCloudGetDeviceStatus
      summary: Get Gree cloud device status
      description: Returns a list of Gree cloud device status by device id
    parameters: []
  /greeCloud/token:
    get:
      tags:
        - gree-cloud
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/GreeCloudUsageError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
      operationId: greeCloudGetToken
      summary: Get Gree cloud token
      description: Returns Gree cloud token
    parameters: []
  /greeCloud/{greeDeviceId}/renameDevice:
    patch:
      tags:
        - gree-cloud
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/GreeCloudUsageError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
      operationId: greeCloudRenameDevice
      summary: Rename Gree cloud device
      description: Changes the custom name of Gree cloud device
    parameters: []
  /price-optimisation-availability:
    get:
      tags:
        - priceOptimisation
      parameters:
        - in: query
          name: postCode
      operationId: checkPriceOptimisationAvailability
      summary: Check whether user could use price optimisation by postal code
      description: Check whether user could use price optimisation by postal code
      security:
        - JWT: []
        - ApiKey: []
      responses:
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                required:
                  - status
    parameters: []
  /houses/{houseId}/price-optimisation/devices/{deviceId}/enable:
    post:
      security:
        - JWT: []
        - ApiKey: []
      operationId: enableDevicePriceOptimisation
      summary: Enable device price optimisation
      description: Enable device price optimisation
      tags:
        - priceOptimisation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                required:
                  - status
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceOptimisationDuplicateSettings'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/HouseNotFoundError'
        '500':
          description: Internal Server Error
    parameters:
      - schema:
          type: string
          description: House id
          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
        name: houseId
        in: path
        required: true
        description: House id
      - schema:
          type: string
          format: uuid
          description: Device id
        name: deviceId
        in: path
        required: true
        description: Device id
  /houses/{houseId}/price-optimisation/enable:
    post:
      security:
        - JWT: []
        - ApiKey: []
      operationId: enablePriceOptimisation
      summary: Enable price optimisation
      description: Enable price optimisation
      tags:
        - priceOptimisation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                required:
                  - status
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceOptimisationDuplicateSettings'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/HouseNotFoundError'
        '500':
          description: Internal Server Error
    parameters:
      - schema:
          type: string
          description: House id
          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
        name: houseId
        in: path
        required: true
        description: House id
  /houses/{houseId}/ai-optimisation/enable:
    post:
      security:
        - JWT: []
        - ApiKey: []
      operationId: enableAI
      summary: Enable AI price optimisation
      description: Enable AI price optimisation
      tags:
        - priceOptimisation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                required:
                  - status
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceOptimisationDuplicateSettings'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/HouseNotFoundError'
        '500':
          description: Internal Server Error
    parameters:
      - schema:
          type: string
          description: House id
          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
        name: houseId
        in: path
        required: true
        description: House id
  /houses/{houseId}/price-optimisation/disable:
    post:
      security:
        - JWT: []
        - ApiKey: []
      operationId: disablePriceOptimisation
      summary: Disable price optimisation
      description: Disable price optimisation
      tags:
        - priceOptimisation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                required:
                  - status
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceOptimisationDuplicateSettings'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/HouseNotFoundError'
        '500':
          description: Internal Server Error
    parameters:
      - schema:
          type: string
          description: House id
          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
        name: houseId
        in: path
        required: true
        description: House id
  /houses/{houseId}/ai-optimisation/disable:
    post:
      security:
        - JWT: []
        - ApiKey: []
      operationId: disableAI
      summary: Disable AI price optimisation
      description: Disable AI price optimisation
      tags:
        - priceOptimisation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                required:
                  - status
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceOptimisationDuplicateSettings'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/HouseNotFoundError'
        '500':
          description: Internal Server Error
    parameters:
      - schema:
          type: string
          description: House id
          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
        name: houseId
        in: path
        required: true
        description: House id
  /houses/{houseId}/price-optimisation/devices/{deviceId}/disable:
    post:
      security:
        - JWT: []
        - ApiKey: []
      operationId: disableDevicePriceOptimisation
      summary: Disable device price optimisation
      description: Disable device price optimisation
      tags:
        - priceOptimisation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                required:
                  - status
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/HouseNotFoundError'
        '500':
          description: Internal Server Error
    parameters:
      - schema:
          type: string
          description: House id
          example: 95bfe226-81da-4750-81f3-59b7465a9b2c
        name: houseId
        in: path
        required: true
        description: House id
      - schema:
          type: string
          format: uuid
          description: Device id
        name: deviceId
        in: path
        required: true
        description: Device id
  /houses/{houseId}/price-optimisation:
    patch:
      security:
        - JWT: []
        - ApiKey: []
      operationId: updatePriceOptimisation
      summary: Update price optimisation settings
      description: Update price optimisation settings for a house
      tags:
        - priceOptimisation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  houseId:
                    type: string
                  settings:
                    nullable: true
                  isEnabled:
                    type: boolean
                  isAIEnabled:
                    type: boolean
                  powerRegion:
                    type: string
                  createdAt:
                    nullable: true
                  updatedAt:
                    nullable: true
                required:
                  - id
                  - houseId
                  - settings
                  - isEnabled
                  - isAIEnabled
                  - powerRegion
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/HouseNotFoundError'
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                powerRegion:
                  type: string
                  enum:
                    - NO1
                    - NO2
                    - NO3
                    - NO4
                    - NO5
                  description: Power region, for example NO1
                settings:
                  type: object
                  properties:
                    maxTemperatureOverheatComfort:
                      type: number
                    maxTemperatureUnderheatComfort:
                      type: number
                    maxTemperatureOverheatSleep:
                      type: number
                    maxTemperatureUnderheatSleep:
                      type: number
                    maxTemperatureOverheatAway:
                      type: number
                    maxTemperatureUnderheatAway:
                      type: number
                    maxTemperatureOverheatIndividual:
                      type: number
                    maxTemperatureUnderheatIndividual:
                      type: number
                  required:
                    - maxTemperatureOverheatComfort
                    - maxTemperatureUnderheatComfort
                    - maxTemperatureOverheatSleep
                    - maxTemperatureUnderheatSleep
                    - maxTemperatureOverheatAway
                    - maxTemperatureUnderheatAway
                    - maxTemperatureOverheatIndividual
                    - maxTemperatureUnderheatIndividual
                  description: Price saving optimisation settings
    get:
      tags:
        - priceOptimisation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  houseId:
                    type: string
                  settings:
                    nullable: true
                  isEnabled:
                    type: boolean
                  isAIEnabled:
                    type: boolean
                  powerRegion:
                    type: string
                  createdAt:
                    nullable: true
                  updatedAt:
                    nullable: true
                  devices:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        deviceId:
                          type: string
                          nullable: true
                        priceOptimisationId:
                          type: string
                          nullable: true
                        isEnabled:
                          type: boolean
                      required:
                        - id
                        - deviceId
                        - priceOptimisationId
                        - isEnabled
                required:
                  - id
                  - houseId
                  - settings
                  - isEnabled
                  - isAIEnabled
                  - powerRegion
                  - devices
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceOptimisationDuplicateSettings'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/HouseNotFoundError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: getPriceOptimisation
      summary: Get price optimisation settings
      description: Creates price optimisation settings for a house
    post:
      tags:
        - priceOptimisation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  houseId:
                    type: string
                  settings:
                    nullable: true
                  isEnabled:
                    type: boolean
                  isAIEnabled:
                    type: boolean
                  powerRegion:
                    type: string
                  createdAt:
                    nullable: true
                  updatedAt:
                    nullable: true
                required:
                  - id
                  - houseId
                  - settings
                  - isEnabled
                  - isAIEnabled
                  - powerRegion
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceOptimisationDuplicateSettings'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingAuthTokenError'
                  - $ref: '#/components/schemas/InvalidAuthTokenError'
                  - $ref: '#/components/schemas/IncorrectTokenType'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerHasNoPermissionError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/HouseNotFoundError'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
        - ApiKey: []
      operationId: createPriceOptimisation
      summary: Create price optimisation settings
      description: Creates price optimisation settings for a house
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                powerRegion:
                  type: string
                  enum:
                    - NO1
                    - NO2
                    - NO3
                    - NO4
                    - NO5
                  description: Power region, for example NO1
              required:
                - powerRegion
    parameters:
      - schema:
          type: string
          description: House ID
        name: houseId
        in: path
        required: true
        description: House ID
components:
  securitySchemes:
    JWT:
      scheme: bearer
      bearerFormat: JWT
      type: http
      description: >-
        JWT ID token in format "Bearer
        eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTY1MjQ2MTQ1MiwiZXhwIjoxNjUyNDYyMDUyfQ.PaqG93AJYMp8stHdGh9LCoxU8jrI9So66hzbrPe8UwU"
      x-last-modified: 1652768256214
    JWT_Refresh:
      scheme: bearer
      bearerFormat: JWT
      type: http
      description: >-
        JWT Refresh token in format "Bearer
        eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6InJlZnJlc2giLCJpYXQiOjE2NTI0NjE0NTIsImV4cCI6MTY1MjQ2MjA1Mn0.PNzSmBp6nxKigzp-hOiEPpRl9ji3ZIl188SY5A9IJHI"
      x-last-modified: 1652768291657
    ApiKey:
      type: apiKey
      in: header
      name: X-API-KEY
  schemas:
    HeaterDeviceShadow:
      title: HeaterDeviceShadow
      type: object
      properties:
        operation_mode:
          type: string
          enum:
            - weekly_program
            - 'off'
            - independent_device
            - control_individually
          nullable: true
          description: "\n\"off\"  - all control disable\n\t\t\n\"weekly_program\" - follow the weekly program, changing temperature by display buttons changes the temperature of the current temperature mode\n\t\t\n\"independent_device\"  - follow the single set value, with timers enabled\n\t\t\n\"control_individually\"  - follow the single set value, but not use any timers or weekly program"
        override_weekly_program:
          type: object
          properties:
            value_type:
              type: string
              enum:
                - comfort
                - sleep
                - away
                - 'off'
              nullable: true
            ends_at:
              type: number
              nullable: true
              description: UTC timestamp in seconds when the override mode ends
          required:
            - value_type
            - ends_at
          nullable: true
          description: >-
            Overwrite the currently running weekly program with a temporary
            change. Set a specific temperature_type for a specified type. Time
            value of 0 means weekly program overwrite is not active anymore
            (disabled). Time should be a UTC timestamp when the program should
            end
        non_repeatable_timers:
          type: object
          properties:
            timers:
              type: array
              items:
                type: object
                properties:
                  value_type:
                    type: string
                    enum:
                      - normal
                      - 'off'
                      - always_heating
                  timestamp:
                    type: number
                required:
                  - value_type
                  - timestamp
          required:
            - timers
          nullable: true
          description: >-
            A single pair represents time and value when the temperature mode
            should be changed. Time defines when to switch to a specific
            temperature type (set in the second field of the pair). Time is as
            local unix timestamp (so timezone is included), but in minutes, e.g.
            on 17.05.2021 the time is 27020801. Allowed temperature types for
            timers: "normal", "off", "always_heating". Only used in independent
            mode
        temperature_normal:
          type: number
          nullable: true
          description: >-
            Set temperature value, used for operation modes "Independent device"
            and timers
        temperature_comfort:
          type: number
          nullable: true
        temperature_sleep:
          type: number
          nullable: true
        temperature_away:
          type: number
          nullable: true
        temperature_vacation:
          type: number
          nullable: true
        vacation_mode:
          type: object
          properties:
            start_timestamp:
              type: number
              nullable: true
              description: UTC timestamp in minutes when the vacation mode starts
            end_timestamp:
              type: number
              nullable: true
              description: UTC timestamp in minutes when the vacation mode ends
            advanced:
              type: boolean
              nullable: true
              description: >-
                Advanced vacation mode - heaters will be regulated regarding
                "away" temperature by each room: false=OFF, true=ON
          required:
            - start_timestamp
            - end_timestamp
            - advanced
          nullable: true
        lock_status:
          type: string
          enum:
            - no_lock
            - child
            - commercial
          nullable: true
        predictive_heating_type:
          type: string
          enum:
            - 'off'
            - simple
            - advanced
          nullable: true
          description: "\n\"off\" - No predictive heating. Temperature will be change exactly with the weekly program timer\n\t\t\n\"simple\"  - Simple predictive heating. Temperature will be change before the timer, with a fixed time for each Celsius degree\n\t\t\n\"advanced\" - Advanced predictive heating. Temperature will be change before the timer, with a time based on the current room model. Model is estimated while running."
        open_window:
          type: object
          properties:
            drop_temperature_threshold:
              type: number
              description: >-
                Required temperature drop to trigger (activate) the open window
                functionality, in Celsius degrees
              nullable: true
            drop_time_range:
              type: number
              description: >-
                Time range when a drop of temperature will be expected, in
                seconds
              nullable: true
            increase_temperature_threshold:
              type: number
              description: >-
                Required temperature increase to deactivate open window
                functionality
              nullable: true
            increase_time_range:
              type: number
              description: >-
                Time range when an increase of temperature will be expected, in
                seconds
              nullable: true
            max_time:
              type: number
              description: Max time duration of the open window activeness
              nullable: true
            enabled:
              type: boolean
              description: >-
                State of the open window functionality. True if open window
                functionality is enabled (that is whether the device can go into
                this mode while operating)
            activated:
              type: boolean
              description: >-
                Current state of the open window. True if open window is
                currently detected by device and is activated. You can
                deactivate currently detected open window by changing this value
                to false.
          required:
            - enabled
          nullable: true
        temperature_calibration_offset:
          type: number
          nullable: true
          description: Offset for ambient temperature
        display_unit:
          type: string
          nullable: true
          description: 'the temperature units: "celsius" or "fahrenheit" to set'
        oil_heater_power_level:
          type: number
          nullable: true
          description: >-
            Set the max heating level in percentage of the nominal wattage. Oil
            heater allows setting 3 different max power settings (40, 60 or 100%
            of the power), done by selecting number of active heating elements.
        temperature_in_independent_mode:
          type: number
          nullable: true
          description: >-
            Change temperature in independent mode now. Use values 0.0 and 99.0
            to set ALWAYS_ON and ALWAYS_OFF, respectively. Apart from changing
            value for some temperature type, in "Independent device" operation
            mode, one also needs to call this command to change the current
            temperature
        additional_socket_mode:
          type: string
          enum:
            - heating
            - cooling
            - always_on
            - always_off
          nullable: true
          description: "Command only for the socket heater, to select heating/cooling mode. ALWAYS_ON, ALWAYS_OFF modes just for convenience, as if these can be enabled also by other commands. \n\t\t"
        pid_parameters:
          type: object
          properties:
            kp:
              type: number
              description: The proportional part gain
            ki:
              type: number
              description: The integral part gain
            kd:
              type: number
              description: The derivative part gain
            kd_filter_N:
              type: number
              description: The derivative filter time coefficient
            windup_limit:
              type: number
              description: The windup limit for integral part from 0 to 100
          required:
            - kp
            - ki
            - kd
            - kd_filter_N
            - windup_limit
          nullable: true
        max_heater_power:
          type: number
          nullable: true
          description: Set max heater power in Watts
        limited_heating_power:
          type: number
          nullable: true
          description: >-
            Only for heaters with triac (panel/storage). Allows to limit the
            heating percentage between 10 and 100 percent.
        hysteresis:
          type: object
          properties:
            upper:
              type: number
              description: >-
                Set hysteresis parameters. Setting hysteresis parameters will
                change current regulator type to hysteresis. Upper offset (set
                temp + this -> stop heat)
            lower:
              type: number
              description: >-
                Set hysteresis parameters. Setting hysteresis parameters will
                change current regulator type to hysteresis. Lower offset (set
                temp - this -> start heat)
          required:
            - upper
            - lower
          nullable: true
        regulator_type:
          type: string
          enum:
            - pid
            - hysteresis_or_slow_pid
            - unknown
          nullable: true
        timezone:
          type: string
          nullable: true
        weekly_program:
          type: object
          properties:
            timers:
              type: array
              items:
                type: object
                properties:
                  value_type:
                    type: string
                    enum:
                      - comfort
                      - sleep
                      - away
                      - 'off'
                  timestamp:
                    type: number
                required:
                  - value_type
                  - timestamp
          required:
            - timers
          nullable: true
          description: "The weekly program is a list of repeating pairs of values. A single pair represents time and value when the temperature mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific temperature type (set in the second field of the pair). Needs to be ordered ascending by time.\n\t\t\nFor mode \"independent device\" use only temperature types OFF and NORMAL, to avoid issues with changing the temperature by buttons from the heater"
      required:
        - operation_mode
        - override_weekly_program
        - non_repeatable_timers
        - temperature_normal
        - temperature_comfort
        - temperature_sleep
        - temperature_away
        - temperature_vacation
        - vacation_mode
        - lock_status
        - predictive_heating_type
        - open_window
        - temperature_calibration_offset
        - display_unit
        - oil_heater_power_level
        - temperature_in_independent_mode
        - additional_socket_mode
        - pid_parameters
        - max_heater_power
        - hysteresis
        - regulator_type
        - timezone
        - weekly_program
      description: Heater Device Shadow object
    AirPurifierDeviceShadow:
      title: AirPurifierDeviceShadow
      description: Air Purifier Device Shadow object
      type: object
      properties:
        lock_status:
          type: string
          enum:
            - no_lock
            - child
          nullable: true
        fan_speed_mode:
          type: string
          enum:
            - HARD_OFF
            - SOFT_OFF
            - AUTO
            - SLEEP
            - BOOST
            - TURN_ON
            - MANUAL
            - MANUAL_LEVEL1
            - MANUAL_LEVEL2
            - MANUAL_LEVEL3
            - MANUAL_LEVEL4
            - MANUAL_LEVEL5
            - MANUAL_LEVEL6
            - MANUAL_LEVEL7
            - MANUAL_LEVEL8
          nullable: true
          description: "\n\t\t\t\nHARD_OFF - disable fan, stop to gather data from sensors, disconnect from wifi, can be disabled only via \ndisplay\n\t\t\t\nSOFT_OFF - disable fan but device is still connected to the wifi and gather data from sensors\n\t\t\t\nAUTO - device automatically determine current fan speed level based on the measurements from sensors\n\t\t\t\nSLEEP - lower display brightness, low fan speed\n\t\t\t\nBOOST - maximum available fan speed\n\t\t\t\nTURN_ON - disable Soft/Hard OFF and enable mode which was before OFF\n\t\t\t\nMANUAL - switch to manual mode with level as for Auto Mode\n\t\t\t\nMANUAL_LEVEL1\n\t\t\t\nMANUAL_LEVEL2\n\t\t\t\nMANUAL_LEVEL3\n\t\t\t\nMANUAL_LEVEL4\n\t\t\t\nMANUAL_LEVEL5\n\t\t\t\nMANUAL_LEVEL6\n\t\t\t\nMANUAL_LEVEL7\n\t\t\t\nMANUAL_LEVEL8 (only for AP Large)"
        repeatable_timers:
          type: object
          properties:
            timers:
              type: array
              items:
                type: object
                properties:
                  fan_speed_mode:
                    type: string
                    enum:
                      - HARD_OFF
                      - SOFT_OFF
                      - AUTO
                      - SLEEP
                      - BOOST
                      - TURN_ON
                      - MANUAL
                      - MANUAL_LEVEL1
                      - MANUAL_LEVEL2
                      - MANUAL_LEVEL3
                      - MANUAL_LEVEL4
                      - MANUAL_LEVEL5
                      - MANUAL_LEVEL6
                      - MANUAL_LEVEL7
                      - MANUAL_LEVEL8
                  timestamp:
                    type: number
                required:
                  - fan_speed_mode
                  - timestamp
          required:
            - timers
          nullable: true
          description: "The repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is a week time, in minutes since Monday 00:00 when to switch to a specific mode (set in the second field of the pair).\n\t\t\tAllowed types are exact the same as for device_mode"
        non_repeatable_timers:
          type: object
          properties:
            timers:
              type: array
              items:
                type: object
                properties:
                  fan_speed_mode:
                    type: string
                    enum:
                      - HARD_OFF
                      - SOFT_OFF
                      - AUTO
                      - SLEEP
                      - BOOST
                      - TURN_ON
                      - MANUAL
                      - MANUAL_LEVEL1
                      - MANUAL_LEVEL2
                      - MANUAL_LEVEL3
                      - MANUAL_LEVEL4
                      - MANUAL_LEVEL5
                      - MANUAL_LEVEL6
                      - MANUAL_LEVEL7
                      - MANUAL_LEVEL8
                  timestamp:
                    type: number
                required:
                  - fan_speed_mode
                  - timestamp
          required:
            - timers
          nullable: true
          description: "The non-repeatable timer is a list of repeating pairs of values. A single pair represents time and value when the device mode should be changed. Time is as local unix timestamp (so timezone is included), but in minutes, e.g. on 17.05.2021 the time is 27020801. when to switch to a specific mode (set in the second field of the pair). \n\t\t\tAllowed types are exact the same as for device_mode"
        aiq_displaying_mode:
          type: boolean
          nullable: true
          description: "false - display AiQ Lights in Inactivity Mode only if red (default option)\n\t\t\t\t\t\ntrue - always display AiQ Lights in Inactivity Mode"
        sensor_type:
          type: string
          enum:
            - particles
            - TVOC
            - both
          nullable: true
        filter_state:
          type: string
          enum:
            - OK
            - MEDIUM_DIRTY
            - DIRTY
            - MUST_BE_CHANGED
          nullable: true
        is_particle_sensor_faulty:
          type: boolean
          nullable: true
        is_temp_sensor_faulty:
          type: boolean
          nullable: true
        is_tvoc_sensor_faulty:
          type: boolean
          nullable: true
        timezone:
          type: string
          nullable: true
        display_brightness:
          type: number
          nullable: true
        particles_trigger_values_threshold:
          type: object
          properties:
            particles_trigger_values_threshold_for_level1:
              type: number
            particles_trigger_values_threshold_for_level2:
              type: number
            particles_trigger_values_threshold_for_level3:
              type: number
            particles_trigger_values_threshold_for_level4:
              type: number
            particles_trigger_values_threshold_for_level5:
              type: number
            particles_trigger_values_threshold_for_level6:
              type: number
            particles_trigger_values_threshold_for_level7:
              type: number
          required:
            - particles_trigger_values_threshold_for_level1
            - particles_trigger_values_threshold_for_level2
            - particles_trigger_values_threshold_for_level3
            - particles_trigger_values_threshold_for_level4
            - particles_trigger_values_threshold_for_level5
            - particles_trigger_values_threshold_for_level6
          nullable: true
        tvoc_trigger_values_threshold:
          type: object
          properties:
            tvoc_trigger_values_threshold_for_level1:
              type: number
            tvoc_trigger_values_threshold_for_level2:
              type: number
            tvoc_trigger_values_threshold_for_level3:
              type: number
            tvoc_trigger_values_threshold_for_level4:
              type: number
            tvoc_trigger_values_threshold_for_level5:
              type: number
            tvoc_trigger_values_threshold_for_level6:
              type: number
            tvoc_trigger_values_threshold_for_level7:
              type: number
          required:
            - tvoc_trigger_values_threshold_for_level1
            - tvoc_trigger_values_threshold_for_level2
            - tvoc_trigger_values_threshold_for_level3
            - tvoc_trigger_values_threshold_for_level4
            - tvoc_trigger_values_threshold_for_level5
            - tvoc_trigger_values_threshold_for_level6
            - tvoc_trigger_values_threshold_for_level7
          nullable: true
        auto_mode_fan_rpm:
          type: object
          properties:
            auto_mode_fan_rpm_level1:
              type: number
            auto_mode_fan_rpm_level2:
              type: number
            auto_mode_fan_rpm_level3:
              type: number
            auto_mode_fan_rpm_level4:
              type: number
            auto_mode_fan_rpm_level5:
              type: number
            auto_mode_fan_rpm_level6:
              type: number
            auto_mode_fan_rpm_level7:
              type: number
            auto_mode_fan_rpm_level8:
              type: number
          required:
            - auto_mode_fan_rpm_level1
            - auto_mode_fan_rpm_level2
            - auto_mode_fan_rpm_level3
            - auto_mode_fan_rpm_level4
            - auto_mode_fan_rpm_level5
            - auto_mode_fan_rpm_level6
            - auto_mode_fan_rpm_level7
          nullable: true
        manual_sleep_boost_fan_rpm:
          type: object
          properties:
            manual_mode_fan_rpm_level1:
              type: number
            manual_mode_fan_rpm_level2:
              type: number
            manual_mode_fan_rpm_level3:
              type: number
            manual_mode_fan_rpm_level4:
              type: number
            manual_mode_fan_rpm_level5:
              type: number
            manual_mode_fan_rpm_level6:
              type: number
            manual_mode_fan_rpm_level7:
              type: number
            manual_mode_fan_rpm_level8:
              type: number
            boost_mode_fan_rpm:
              type: number
            sleep_mode_fan_rpm:
              type: number
          required:
            - manual_mode_fan_rpm_level1
            - manual_mode_fan_rpm_level2
            - manual_mode_fan_rpm_level3
            - manual_mode_fan_rpm_level4
            - manual_mode_fan_rpm_level5
            - manual_mode_fan_rpm_level6
            - manual_mode_fan_rpm_level7
            - boost_mode_fan_rpm
            - sleep_mode_fan_rpm
          nullable: true
        auto_mode_fan_levels_states:
          type: object
          properties:
            auto_mode_fan_state_level1:
              type: boolean
            auto_mode_fan_state_level2:
              type: boolean
            auto_mode_fan_state_level3:
              type: boolean
            auto_mode_fan_state_level4:
              type: boolean
            auto_mode_fan_state_level5:
              type: boolean
            auto_mode_fan_state_level6:
              type: boolean
            auto_mode_fan_state_level7:
              type: boolean
            auto_mode_fan_state_level8:
              type: boolean
          required:
            - auto_mode_fan_state_level1
            - auto_mode_fan_state_level2
            - auto_mode_fan_state_level3
            - auto_mode_fan_state_level4
            - auto_mode_fan_state_level5
            - auto_mode_fan_state_level6
            - auto_mode_fan_state_level7
          nullable: true
      required:
        - lock_status
        - fan_speed_mode
        - repeatable_timers
        - non_repeatable_timers
        - aiq_displaying_mode
        - filter_state
        - is_particle_sensor_faulty
        - is_temp_sensor_faulty
        - is_tvoc_sensor_faulty
        - timezone
        - display_brightness
        - particles_trigger_values_threshold
        - auto_mode_fan_rpm
        - manual_sleep_boost_fan_rpm
        - auto_mode_fan_levels_states
      nullable: true
    AirSensorDeviceShadow:
      title: AirSensorDeviceShadow
      description: Air Sensor Device Shadow object
      type: object
      properties:
        ens210_ranges:
          type: object
          properties:
            temperature_green:
              type: number
            temperature_red:
              type: number
            humidity_yellow_low:
              type: number
            humidity_yellow_high:
              type: number
            humidity_red_low:
              type: number
            humidity_red_high:
              type: number
          required:
            - temperature_green
            - temperature_red
            - humidity_yellow_low
            - humidity_yellow_high
            - humidity_red_low
            - humidity_red_high
          nullable: true
        ccs811_ranges:
          type: object
          properties:
            eco2_red:
              type: number
            eco2_yellow:
              type: number
            tvoc_red:
              type: number
            tvoc_yellow:
              type: number
          required:
            - eco2_red
            - eco2_yellow
            - tvoc_red
            - tvoc_yellow
          nullable: true
        sampling_period:
          type: number
          nullable: true
        timezone:
          type: string
          nullable: true
      required:
        - ens210_ranges
        - ccs811_ranges
        - sampling_period
        - timezone
      nullable: true
    HeaterDeviceMetrics:
      title: HeaterDeviceMetrics
      description: Heater Device metrics object
      type: object
      properties:
        deviceId:
          type: string
        time:
          type: number
          minimum: 0
          maximum: 9999999999
          description: Date in seconds since epoch (UTC time)
          example: 1579098983
        temperature:
          type: number
          description: >-
            What is the current target temperature for the heater regulator.
            Temperature in Celsius degrees
        humidity:
          type: number
          description: "SOCKET: Measured humidity - Relative humidity percentage multiplied by 100. \n\t\t\t\t\t\t\nValid ONLY FOR SOCKET HEATER. So for the panel heater, this field will be dummy bytes.\n\t\t\t\t\t\t\nCONVECTOR: Tilt sensor state. 1 = convector fallen and not heating"
        temperatureAmbient:
          type: number
          description: >-
            Actual temperature after applying the calibration offset. If the
            temperature sensor is faulty, this field will be equal -100 C.
            Temperature in Celsius degrees
        currentPower:
          type: number
          description: >-
            Power measured with the dedicated IC chip. In Watts. Due to the chip
            behavior, this value is filtered for a few seconds. To determine if
            the heater is heating RIGHT NOW use the control_signal field or
            heater_flag
        controlSignal:
          type: number
          description: >-
            Current value of control signal - so the percentage of the maximum
            heater power. Value from 0 to 100. It is the value applied by the
            heater right now
        currentOperationMode:
          type: number
          description: "0 - \"Off\"\n\t\t\t\t\t\t\n1 - \"Weekly program\"\n\t\t\t\t\t\t\n2 - \"Independent device\" (uses timers)\n\t\t\t\t\t\t\n3 - \"Control Individually\" (follows the single set temperature)"
        energyUsage:
          type: number
          description: 'Energy used since the heater startup. In Wh. '
        timeSinceHeaterStartup:
          type: number
          description: >-
            Time in seconds since heater startup. Knowing this information and
            energy_usage the cloud can calculate the energy usage in any time
            range (e.g. during last 24 hours)
        openWindowsStatus:
          type: number
          description: "Whether the open window functionality is enabled (can be activated by opening a window) and active now (was triggered and the heater is not heating).\n\t\t\t\t 0 - disabled, not active now 3 - enabled, not active now 2 - enabled and active now!"
        currentTemperatureTypeInWeeklyProgram:
          type: number
          description: "Current temperature type: 0=normal, 1=comfort, 2=sleep, 3=away, 4=vacation, 5=off\n\t\t\tTemperature type followed currently (only if weekly program is active). \n\t\t\tIf the heater is in other mode than \"Weekly program\" this field will contains value \"-1\".\n\t\t\tIf the NTP time is not synchronized this field will contain value \"-2\" (because when NTP time is not synchronized, current weekly program status cannot be determined"
        heaterFlag:
          type: number
          description: 'Heating/Cooling status: 0=off, 1=on'
        powerStatus:
          type: number
          description: >-
            If the device is on (not in operation mode off or temperature is not
            set to 0): 0=off, 1=on
      required:
        - deviceId
        - time
        - temperature
        - humidity
        - temperatureAmbient
        - currentPower
        - controlSignal
        - currentOperationMode
        - energyUsage
        - timeSinceHeaterStartup
        - openWindowsStatus
        - currentTemperatureTypeInWeeklyProgram
        - heaterFlag
        - powerStatus
    AirPurifierDeviceMetrics:
      title: AirPurifierDeviceMetrics
      description: Air Purifier Device metrics object
      type: object
      properties:
        deviceId:
          type: string
          description: AWS IoT Thing Name (UUID)
        time:
          type: number
          minimum: 0
          maximum: 9999999999
          description: Date in seconds since epoch (UTC time)
          example: 1579098983
        setFanSpeedInAutoRpm:
          type: number
          description: >-
            Current fan speed level, relevant only when operation_mode=auto.
            Level1=0, Level8=7
        controlSignal:
          type: number
          description: >-
            Current value of control signal applied to the device motor. So it
            is the percentage of maximum motor input signal.
        massPm_10:
          type: number
          description: >-
            Mass of particles with diameter < 1 micrometers in volume of one
            cubic meter [µg/m3] in range <0,1000>
        massPm_25:
          type: number
          description: >-
            Mass of particles with diameter < 2.5 micrometers in volume of one
            cubic meter [µg/m3] in range <0,1000>
        massPm_100:
          type: number
          description: >-
            Mass of particles with diameter < 10.0 micrometers in volume of one
            cubic meter [µg/m3] in range <0,1000>
        numberPm_05:
          type: number
          description: >-
            Total number of particles wit diameter < 0.5 micrometers in cubic
            centimeter [#/cm3] in range <0,3000>
        numberPm_10:
          type: number
          description: >-
            Total number of particles wit diameter < 1 micrometers in cubic
            centimeter [#/cm3] in range <0,3000>
        numberPm_25:
          type: number
          description: >-
            Total number of particles wit diameter < 2.5 micrometers in cubic
            centimeter [#/cm3] in range <0,3000>
        numberPm_50:
          type: number
          description: >-
            Total number of particles wit diameter < 5 micrometers in cubic
            centimeter [#/cm3] in range <0,3000>
        numberPm_100:
          type: number
          description: >-
            Total number of particles wit diameter < 10 micrometers in cubic
            centimeter [#/cm3] in range <0,3000>
        temperature:
          type: number
          description: Temperature in Celsius degrees
        humidity:
          type: number
          description: Relative humidity in percents %, multiplied by 100
        runtimeLevelSleepMs:
          type: number
          description: Number of milliseconds, during which the device works in sleep mode
        runtimeLevelBoostMs:
          type: number
          description: Number of milliseconds, during which the device works in boost mode
        runtimeLevelLevel1Ms:
          type: number
          description: >-
            Number of milliseconds, during which the device using Level1 fan
            speed (in auto and manual)
        runtimeLevelLevel2Ms:
          type: number
          description: >-
            Number of milliseconds, during which the device using Level2 fan
            speed (in auto and manual)
        runtimeLevelLevel3Ms:
          type: number
          description: >-
            Number of milliseconds, during which the device using Level3 fan
            speed (in auto and manual)
        runtimeLevelLevel4Ms:
          type: number
          description: >-
            Number of milliseconds, during which the device using Level4 fan
            speed (in auto and manual)
        runtimeLevelLevel5Ms:
          type: number
          description: >-
            Number of milliseconds, during which the device using Level5 fan
            speed (in auto and manual)
        runtimeLevelLevel6Ms:
          type: number
          description: >-
            Number of milliseconds, during which the device using Level6 fan
            speed (in auto and manual)
        runtimeLevelLevel7Ms:
          type: number
          description: >-
            Number of milliseconds, during which the device using Level7 fan
            speed (in auto and manual)
        runtimeLevelLevel8Ms:
          type: number
          description: >-
            Number of milliseconds, during which the device using Level8 fan
            speed (in auto and manual)
        airQualityIndex:
          type: number
          description: >-
            Air Quality Index calculated from TVOC and eCO2 measurements by
            sensor, in range <1,5>
        eco2:
          type: number
          description: Equivalent CO2 in range <400-65000> [parts per million CO2 equiv.]
        tvoc:
          type: number
          description: >-
            Total Volatile Organic Compounds in range <0-65000> [part per
            billion]
      required:
        - deviceId
        - time
        - setFanSpeedInAutoRpm
        - controlSignal
        - massPm_10
        - massPm_25
        - massPm_100
        - numberPm_05
        - numberPm_10
        - numberPm_25
        - numberPm_50
        - numberPm_100
        - temperature
        - humidity
        - runtimeLevelSleepMs
        - runtimeLevelBoostMs
        - runtimeLevelLevel1Ms
        - runtimeLevelLevel2Ms
        - runtimeLevelLevel3Ms
        - runtimeLevelLevel4Ms
        - runtimeLevelLevel5Ms
        - runtimeLevelLevel6Ms
        - runtimeLevelLevel7Ms
        - runtimeLevelLevel8Ms
        - airQualityIndex
        - eco2
        - tvoc
    AirSensorDeviceMetrics:
      title: AirSensorDeviceMetrics
      description: Air Sensor Device metrics object
      type: object
      properties:
        deviceId:
          type: string
        time:
          type: number
          minimum: 0
          maximum: 9999999999
          description: Date in seconds since epoch (UTC time)
          example: 1579098983
        temperature:
          type: number
          description: Temperature in Celsius degrees
        humidity:
          type: number
          description: 2 - bytes [ unsigned integer ] [ 100 x 1%]
        eco2:
          type: number
          description: 2 - bytes [ unsigned integer ] [ parts per million ]
        tvoc:
          type: number
          description: 2 - bytes [ unsigned integer ] [ parts per million ]
        batteryPercentage:
          type: number
          description: 2 - bytes [ unsigned integer ] [ 10 x 1% ]
        batteryVoltage:
          type: number
          description: 2 - bytes [ unsigned integer ] [ millivolts ]
        chargingStatus:
          type: boolean
          description: >-
            0 - not charging ; 1 - charging with LED turn Off; 2 - charging with
            LED turn On ( updated 2 - 30 s after change )
        tvocSensorCalibrated:
          type: boolean
          description: false - not calibrated, true - calibrated
        tvocSensorCountdownRemainingTime:
          type: number
          description: Seconds to finish calibration, if sensor calibrated then equal to 0
        tvocSensorCountdownTotalTime:
          type: number
          description: Total time needed to perform tvoc sensor calibration
        ens210SensorCalibrated:
          type: boolean
          description: false - not calibrated, true - calibrated
        ens210SensorCountdownRemainingTime:
          type: number
          description: Seconds to finish calibration, if sensor calibrated then equal to 0
        ens210SensorCountdownTotalTime:
          type: number
          description: Total time needed to perform ens210 sensor calibration
      required:
        - deviceId
        - time
        - temperature
        - humidity
        - eco2
        - tvoc
        - batteryPercentage
        - batteryVoltage
        - chargingStatus
        - tvocSensorCalibrated
        - tvocSensorCountdownRemainingTime
        - tvocSensorCountdownTotalTime
        - ens210SensorCalibrated
        - ens210SensorCountdownRemainingTime
        - ens210SensorCountdownTotalTime
    HouseNotFoundError:
      title: HouseNotFoundError
      type: object
      properties:
        error:
          type: object
          required:
            - type
            - message
            - payload
          properties:
            type:
              type: string
              enum:
                - HouseNotFoundError
            message:
              type: string
            payload:
              type: object
              required:
                - houseId
              properties:
                houseId:
                  type: string
      required:
        - error
      description: Is thrown when house with provided ID does not exist in database.
    RoomNotFoundError:
      title: RoomNotFoundError
      type: object
      properties:
        error:
          type: object
          required:
            - type
            - message
            - payload
          properties:
            type:
              type: string
              enum:
                - RoomNotFoundError
            message:
              type: string
            payload:
              type: object
              required:
                - roomId
              properties:
                roomId:
                  type: string
      required:
        - error
      description: Is thrown when room with provided ID does not exist in database.
    DeviceNotFoundError:
      title: DeviceNotFoundError
      type: object
      description: >-
        Is thrown when device with provided ID does not exist in database or AWS
        IoT Thing with provided ThingName not found in AWS Cloud.
      properties:
        error:
          type: object
          required:
            - type
            - message
            - payload
          properties:
            type:
              type: string
              enum:
                - DeviceNotFoundError
            message:
              type: string
            payload:
              type: object
              required:
                - deviceId
              properties:
                deviceId:
                  type: string
      required:
        - error
    RoomProgramNotFoundError:
      title: RoomProgramNotFoundError
      type: object
      description: >-
        Is thrown when heater weekly room program not found in database or not
        attached to room when it is required.
      properties:
        error:
          type: object
          required:
            - type
            - message
          properties:
            type:
              type: string
              enum:
                - RoomProgramNotFoundError
            message:
              type: string
            payload:
              type: object
              properties:
                roomProgramId:
                  type: string
      required:
        - error
    TimezoneNotFoundError:
      title: TimezoneNotFoundError
      type: object
      description: >-
        Is thrown when timezone not found in database or not defined in the
        house when it is required.
      properties:
        error:
          type: object
          required:
            - type
            - message
          properties:
            type:
              type: string
              enum:
                - TimezoneNotFoundError
            message:
              type: string
            payload:
              type: object
              properties:
                timezone:
                  type: string
      required:
        - error
    CustomerNotFoundError:
      title: CustomerNotFoundError
      type: object
      description: Is thrown when customer not found in database.
      properties:
        error:
          type: object
          required:
            - type
            - message
            - payload
          properties:
            type:
              type: string
              enum:
                - CustomerNotFoundError
            message:
              type: string
            payload:
              type: object
              properties:
                email:
                  type: string
                phoneNumber:
                  type: string
                customerId:
                  type: number
      required:
        - error
    RefreshTokenNotFoundError:
      title: RefreshTokenNotFoundError
      type: object
      description: Is thrown when a customer's refresh token is not found in the database..
      properties:
        error:
          type: object
          required:
            - type
            - message
            - payload
          properties:
            type:
              type: string
              enum:
                - RefreshTokenNotFoundError
            message:
              type: string
            payload:
              type: object
              properties:
                email:
                  type: string
                phoneNumber:
                  type: string
      required:
        - error
    FirmwareNotFoundError:
      title: FirmwareNotFoundError
      type: object
      description: Is thrown when firmware for provided device type not found in database.
      properties:
        error:
          type: object
          required:
            - type
            - message
            - payload
          properties:
            type:
              type: string
              enum:
                - FirmwareNotFoundError
            message:
              type: string
            payload:
              type: object
              required:
                - deviceType
              properties:
                deviceType:
                  type: string
      required:
        - error
    TimerNotFoundError:
      title: TimerNotFoundError
      type: object
      description: Is thrown when timer not found in database.
      properties:
        error:
          type: object
          required:
            - type
            - message
            - payload
          properties:
            type:
              type: string
              enum:
                - TimerNotFoundError
            message:
              type: string
            payload:
              type: object
              required:
                - timerId
              properties:
                timerId:
                  type: string
      required:
        - error
    WebhookNotFoundError:
      title: WebhookNotFoundError
      type: object
      description: >-
        Is thrown when webhook not found in database or customer is not the
        owner of it.
      properties:
        error:
          type: object
          required:
            - type
            - message
            - payload
          properties:
            type:
              type: string
              enum:
                - WebhookNotFoundError
            message:
              type: string
            payload:
              type: object
              required:
                - webhookId
                - customerId
              properties:
                webhookId:
                  type: string
                customerId:
                  type: number
      required:
        - error
    CustomerHasNoPermissionError:
      title: CustomerHasNoPermissionError
      type: object
      description: >-
        Is thrown when customer has no permission to perform some action in
        house or/and room.

        There are a lot of cases when this error is thrown. Detailed information
        comes in message.
      properties:
        error:
          type: object
          required:
            - type
            - message
            - payload
          properties:
            type:
              type: string
              enum:
                - CustomerHasNoPermissionError
            message:
              type: string
            payload:
              type: object
              required:
                - customerId
              properties:
                customerId:
                  type: number
                houseId:
                  type: number
                roomId:
                  type: number
                deviceId:
                  type: string
                deviceIds:
                  type: array
                  items:
                    type: string
                sensorId:
                  type: string
                permission:
                  type: string
      required:
        - error
    MaxTemperatureExceedsError:
      title: MaxTemperatureExceedsError
      type: object
      description: >-
        Is thrown when the set desired temperature in the house or room exceeds
        the maximum allowable one.
      properties:
        error:
          type: object
          required:
            - type
            - message
            - payload
          properties:
            type:
              type: string
              enum:
                - MaxTemperatureExceedsError
            message:
              type: string
            payload:
              type: object
              required:
                - customerId
                - temperatureField
                - allowedMaxTemperature
                - providedTemperature
              properties:
                customerId:
                  type: number
                houseId:
                  type: number
                roomId:
                  type: number
                temperatureField:
                  type: string
                allowedMaxTemperature:
                  type: number
                providedTemperature:
                  type: number
      required:
        - error
    TemperatureNotSetError:
      title: TemperatureNotSetError
      type: object
      description: >-
        Is thrown when temperature in house or room is not found when it is
        required.
      properties:
        error:
          type: object
          required:
            - type
            - message
            - payload
          properties:
            type:
              type: string
              enum:
                - TemperatureNotSetError
            message:
              type: string
            payload:
              type: object
              required:
                - temperatureField
              properties:
                houseId:
                  type: string
                roomId:
                  type: string
                temperatureField:
                  type: string
      required:
        - error
    DeviceIsNotAttachedError:
      title: DeviceIsNotAttachedError
      type: object
      description: Is thrown when device is not added to anyone's house.
      properties:
        error:
          type: object
          required:
            - type
            - message
            - payload
          properties:
            type:
              type: string
              enum:
                - DeviceIsNotAttachedError
            message:
              type: string
            payload:
              type: object
              required:
                - deviceId
              properties:
                deviceId:
                  type: string
      required:
        - error
    DeviceIsUsedError:
      title: DeviceIsUsedError
      type: object
      description: >-
        Is thrown when current user has no access to device because it is owned
        by another customer.
      properties:
        error:
          type: object
          required:
            - type
            - message
            - payload
          properties:
            type:
              type: string
              enum:
                - DeviceIsUsedError
            message:
              type: string
            payload:
              type: object
              required:
                - deviceId
              properties:
                deviceId:
                  type: string
                customerId:
                  type: string
      required:
        - error
    DeviceIsArchivedError:
      title: DeviceIsArchivedError
      type: object
      description: >-
        Is thrown when current user tries to do some actions with already
        archived device.
      properties:
        error:
          type: object
          required:
            - type
            - message
            - payload
          properties:
            type:
              type: string
              enum:
                - DeviceIsArchivedError
            message:
              type: string
            payload:
              type: object
              required:
                - deviceId
              properties:
                deviceId:
                  type: string
      required:
        - error
    DeviceDuplicateNameError:
      title: DeviceDuplicateNameError
      type: object
      description: Is thrown when current customer names new device with a duplicate name.
      properties:
        error:
          type: object
          required:
            - type
            - message
            - payload
          properties:
            type:
              type: string
              enum:
                - DeviceDuplicateNameError
            message:
              type: string
            payload:
              type: object
              required:
                - customName
              properties:
                customName:
                  type: string
      required:
        - error
    DeviceTypeMismatchError:
      title: DeviceTypeMismatchError
      type: object
      description: Is thrown when provided device type is differ from real type of device.
      properties:
        error:
          type: object
          required:
            - type
            - message
            - payload
          properties:
            type:
              type: string
              enum:
                - DeviceTypeMismatchError
            message:
              type: string
            payload:
              type: object
              required:
                - deviceId
              properties:
                deviceId:
                  type: string
      required:
        - error
    SensorUsageError:
      title: SensorUsageError
      type: object
      description: >-
        Is thrown when sensor is used in wrong way. More detailed information
        will be in message.
      properties:
        error:
          type: object
          required:
            - type
            - message
          properties:
            type:
              type: string
              enum:
                - SensorUsageError
            message:
              type: string
            payload:
              type: object
              properties:
                sensorId:
                  type: string
                roomId:
                  type: number
      required:
        - error
    Gen1DeviceUsageError:
      title: Gen1DeviceUsageError
      type: object
      description: >-
        Is thrown when gen1 device is used in wrong way. More detailed
        information will be in message.
      properties:
        error:
          type: object
          required:
            - type
            - message
          properties:
            type:
              type: string
              enum:
                - Gen1DeviceUsageError
            message:
              type: string
            payload:
              type: object
              properties:
                sensorId:
                  type: string
                roomId:
                  type: number
      required:
        - error
    HouseDuplicateName:
      title: HouseDuplicateName
      type: object
      description: Is thrown when current customer names new house with a duplicate name.
      properties:
        error:
          type: object
          required:
            - type
            - message
          properties:
            type:
              type: string
              enum:
                - HouseDuplicateName
            message:
              type: string
            payload:
              type: object
      required:
        - error
    RoomDuplicateName:
      title: RoomDuplicateName
      type: object
      description: Is thrown when current customer names new room with a duplicate name.
      properties:
        error:
          type: object
          required:
            - type
            - message
          properties:
            type:
              type: string
              enum:
                - RoomDuplicateName
            message:
              type: string
            payload:
              type: object
      required:
        - error
    PriceOptimisationDuplicateSettings:
      title: PriceOptimisationDuplicateSettings
      type: object
      description: >-
        Is thrown when current house has already posted settings for energy
        price saving.
      properties:
        error:
          type: object
          required:
            - type
            - message
          properties:
            type:
              type: string
              enum:
                - PriceOptimisationDuplicateSettings
            message:
              type: string
            payload:
              type: object
      required:
        - error
    GreeCloudUsageError:
      title: GreeCloudUsageError
      type: object
      description: Is thrown when there is any error with gree device.
      properties:
        error:
          type: object
          required:
            - type
            - message
          properties:
            type:
              type: string
              enum:
                - GreeCloudUsageError
            message:
              type: string
            payload:
              type: object
      required:
        - error
    HouseRoomMatchError:
      title: HouseRoomMatchError
      type: object
      description: Is thrown when provided room is not located in provided house.
      properties:
        error:
          type: object
          required:
            - type
            - message
            - payload
          properties:
            type:
              type: string
              enum:
                - HouseRoomMatchError
            message:
              type: string
            payload:
              type: object
              required:
                - houseId
              properties:
                houseId:
                  type: number
                roomId:
                  type: number
      required:
        - error
    RoomProgramIsUsedError:
      title: RoomProgramIsUsedError
      type: object
      description: >-
        Is thrown when room program is going to be deleted but it is used in by
        heaters in rooms.
      properties:
        error:
          type: object
          required:
            - type
            - message
            - payload
          properties:
            type:
              type: string
              enum:
                - RoomProgramIsUsedError
            message:
              type: string
            payload:
              type: object
              required:
                - roomProgramId
                - roomIds
              properties:
                roomProgramId:
                  type: number
                roomIds:
                  type: array
                  items:
                    type: number
      required:
        - error
    DefaultRoomProgramAlreadyExistsError:
      title: DefaultRoomProgramAlreadyExistsError
      type: object
      description: >-
        Is thrown when room program is going to be deleted but it is used in by
        heaters in rooms.
      properties:
        error:
          type: object
          required:
            - type
            - message
            - payload
          properties:
            type:
              type: string
              enum:
                - DefaultRoomProgramAlreadyExistsError
            message:
              type: string
            payload:
              type: object
              required:
                - houseId
              properties:
                houseId:
                  type: number
      required:
        - error
    CustomerIdentityAlreadyInUseError:
      title: CustomerIdentityAlreadyInUseError
      type: object
      description: Is thrown when customer's identity is duplicated.
      properties:
        error:
          type: object
          required:
            - type
            - message
            - payload
          properties:
            type:
              type: string
              enum:
                - CustomerIdentityAlreadyInUseError
            message:
              type: string
            payload:
              type: object
              properties:
                email:
                  type: string
                phoneNumber:
                  type: string
      required:
        - error
    InvalidAuthTokenError:
      title: InvalidAuthTokenError
      type: object
      description: Is thrown when invalid authentication token is provided.
      properties:
        error:
          type: object
          required:
            - type
            - message
          properties:
            type:
              type: string
              enum:
                - InvalidAuthTokenError
            message:
              type: string
      required:
        - error
    IncorrectTokenType:
      title: IncorrectTokenType
      type: object
      description: >-
        Is thrown when invalid typed token is provided. For example, id token is
        given instead of refresh token.
      properties:
        error:
          type: object
          required:
            - type
            - message
          properties:
            type:
              type: string
              enum:
                - IncorrectTokenType
            message:
              type: string
      required:
        - error
    MissingAuthTokenError:
      title: MissingAuthTokenError
      type: object
      description: Is thrown when authentication token is not provided when it is required.
      properties:
        error:
          type: object
          required:
            - type
            - message
          properties:
            type:
              type: string
              enum:
                - MissingAuthTokenError
            message:
              type: string
      required:
        - error
    LogInError:
      title: LogInError
      type: object
      description: Incorrect login/password
      properties:
        error:
          type: object
          required:
            - type
            - message
          properties:
            type:
              type: string
              enum:
                - LogInError
            message:
              type: string
      required:
        - error
    OneTimeCodeExpiredError:
      title: OneTimeCodeExpiredError
      type: object
      description: Is thrown when provided one-time code is expired
      properties:
        error:
          type: object
          required:
            - type
            - message
          properties:
            type:
              type: string
              enum:
                - OneTimeCodeExpiredError
            message:
              type: string
      required:
        - error
    IncorrectOneTimeCodeError:
      title: IncorrectOneTimeCodeError
      type: object
      description: Is thrown when provided one-time code is incorrect
      properties:
        error:
          type: object
          required:
            - type
            - message
          properties:
            type:
              type: string
              enum:
                - IncorrectOneTimeCodeError
            message:
              type: string
      required:
        - error
    CustomerBusinessFieldsError:
      title: CustomerBusinessFieldsError
      type: object
      description: Is thrown when there is missing data for business account creation.
      properties:
        error:
          type: object
          required:
            - type
            - message
            - payload
          properties:
            type:
              type: string
              enum:
                - CustomerBusinessFieldsError
            message:
              type: string
            payload:
              type: object
              required:
                - missingFields
              properties:
                missingFields:
                  type: array
                  items:
                    type: string
      required:
        - error
    CustomerApiAccessMissingFieldsError:
      title: CustomerApiAccessMissingFieldsError
      type: object
      description: Is thrown when there is missing data for API access
      required:
        - error
      properties:
        error:
          type: object
          required:
            - type
            - message
            - payload
          properties:
            type:
              type: string
              enum:
                - CustomerApiAccessMissingFieldsError
            message:
              type: string
            payload:
              type: object
              required:
                - id
                - accountType
                - missingFields
              properties:
                id:
                  type: string
                accountType:
                  type: string
                  enum:
                    - individual
                    - business
                missingFields:
                  type: array
                  items:
                    type: string
    InvalidApiKeyError:
      title: InvalidApiKeyError
      type: object
      description: Is thrown when provided API key is invalid
      required:
        - error
      properties:
        error:
          type: object
          required:
            - type
            - message
          properties:
            type:
              type: string
              enum:
                - InvalidApiKeyError
            message:
              type: string
    ApiAccessStatusError:
      title: ApiAccessStatusError
      type: object
      description: >-
        Is thrown when unable to change customer API access status. For example,
        when API access is already approved or it is suspended.
      required:
        - error
      properties:
        error:
          type: object
          required:
            - type
            - message
            - payload
          properties:
            type:
              type: string
              enum:
                - ApiAccessStatusError
            message:
              type: string
            payload:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum:
                    - suspended
                    - approved
    CsvNotFoundError:
      title: CsvNotFoundError
      type: object
      description: Is thrown when requested CSV not found in S3.
      required:
        - error
      properties:
        error:
          type: object
          required:
            - type
            - message
            - payload
          properties:
            type:
              type: string
              enum:
                - CsvNotFoundError
            message:
              type: string
            payload:
              type: object
              required:
                - s3Key
              properties:
                s3Key:
                  type: string
    DeviceModeError:
      title: DeviceModeError
      type: object
      description: >-
        Is thrown when provided device mode differs from enabled state in
        database.
      properties:
        error:
          type: object
          required:
            - type
            - message
            - payload
          properties:
            type:
              type: string
              enum:
                - DeviceModeError
            message:
              type: string
            payload:
              type: object
              required:
                - deviceId
              properties:
                deviceId:
                  type: string
    HouseModeError:
      title: HouseModeError
      type: object
      description: Is thrown when there is a house mode conflict.
      properties:
        error:
          type: object
          required:
            - type
            - message
          properties:
            type:
              type: string
              enum:
                - HouseModeError
            message:
              type: string
    TimeError:
      title: TimeError
      type: object
      description: Is thrown when there is a logical error with timestamps.
      properties:
        error:
          type: object
          required:
            - type
            - message
          properties:
            type:
              type: string
              enum:
                - TimeError
            message:
              type: string
  headers: {}
  responses: {}
  parameters: {}
tags:
  - name: device
    description: Operations with devices
  - name: room
    description: Operations with rooms in customer's houses
  - name: house
    description: Operations with houses in customer's profile
  - name: customer
    description: Operations about customer
  - name: firmware
    description: Operations with firmwares
  - name: country
    description: Operations with countries
  - name: webhook
    description: Operations with webhooks
security: []
servers:
  - url: https://api.millnorwaycloud.com
